{
	"id": "7e9bdd28f1b695ca816c55ab4ef1c2fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NASICOIN.sol": {
				"content": "// NASICOIN.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n// Import OpenZeppelin contracts for ERC20 standard and access control\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title NASICOIN (NASIC)\n * @dev NASICOIN is a token created to support the owner of a cat named NASIC. \n *      It has unique functionalities such as staking, donations, and weekly lottery-based prize distributions.\n *      The fractional unit of NASICOIN is called \"FISH\".\n */\ncontract NASICOIN is ERC20, Ownable {\n    // Constants\n    uint256 public constant INITIAL_SUPPLY = 2 * 10**18; // 2 NASIC with 18 decimals\n    // Tracks \n    mapping(address => bool) private hasBalance; // Tracks addresses that currently have a balance\n    mapping(address => uint256) private userBalances; // Tracks the balances of each user\n    address[] private users; // List of all users with non-zero balances\n    // State variables\n    address public developer; // Address of the developer\n    address public vaultManager; // Address of the VaultManager contract\n    address public pendingNewOwner;\n    address public pendingNewDeveloper;\n\n    uint256 public ownerChangeRequestTime;\n    uint256 public developerChangeRequestTime;\n\n    uint256 private constant CHANGE_REQUEST_DELAY = 90 days; // 90 days\n\n    // Events\n    event DeveloperChanged(address indexed oldDeveloper, address indexed newDeveloper);\n    event OwnerChangeRequested(address indexed requester, address indexed newOwner);\n    event DeveloperChangeRequested(address indexed requester, address indexed newDeveloper);\n    event OwnerChangeCanceled(address indexed currentOwner);\n    event DeveloperChangeCanceled(address indexed currentDeveloper);\n\n    /**\n     * @notice Constructor to deploy the NASICOIN token.\n     * @param initialOwner The initial owner of the contract (passed to the Ownable constructor).\n     */\n    constructor(address initialOwner) ERC20(\"NASICOIN\", \"NASIC\") Ownable(initialOwner) {\n        // Set developer to the deployer's address\n        developer = msg.sender;\n\n        // Mint initial supply to the owner\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    /**\n     * @notice Override the decimals function to return 18, standard for ERC20 tokens.\n     *         The smallest fractional unit of NASICOIN is called \"FISH\".\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @notice Modifier to restrict access to developer-only functions.\n     */\n    modifier onlyDeveloper() {\n        require(msg.sender == developer, \"Caller is not the developer\");\n        _;\n    }\n\n// Override the _mint function to track user balances\n    function _mint(address account, uint256 amount) internal override {\n        super._mint(account, amount);\n        _trackUserBalance(account, balanceOf(account));\n    }\n\n    // Override the _transfer function to track user balances and users\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal override {\n        super._transfer(sender, recipient, amount);\n\n        // Update the sender's balance tracking\n        _trackUserBalance(sender, balanceOf(sender));\n\n        // Update the recipient's balance tracking\n        _trackUserBalance(recipient, balanceOf(recipient));\n    }\n\n    // Internal function to update the user balance and manage the users array\n    function _trackUserBalance(address user, uint256 balance) internal {\n        if (balance > 0 && !hasBalance[user]) {\n            hasBalance[user] = true;\n            users.push(user);\n        } else if (balance == 0 && hasBalance[user]) {\n            hasBalance[user] = false;\n            _removeUser(user);\n        }\n        userBalances[user] = balance;\n    }\n\n    // Internal function to remove a user from the users array\n    function _removeUser(address user) internal {\n        for (uint256 i = 0; i < users.length; i++) {\n            if (users[i] == user) {\n                users[i] = users[users.length - 1]; // Replace with the last user\n                users.pop(); // Remove the last user\n                break;\n            }\n        }\n    }\n\n    // Get the list of all users with non-zero balances\n    function getUsers() external view returns (address[] memory) {\n        return users;\n    }\n\n    // Get the balance of a specific user\n    function getUserBalance(address user) external view returns (uint256) {\n        return userBalances[user];\n    }\n    /**\n     * @notice Set the address of the VaultManager contract.\n     * @param _vaultManager The address of the VaultManager contract.\n     */\n    function setVaultManager(address _vaultManager) external onlyOwner {\n        require(_vaultManager != address(0), \"VaultManager address cannot be zero\");\n        vaultManager = _vaultManager;\n    }\n\n    /**\n     * @notice Mint new tokens. Can only be called by the VaultManager contract.\n     * @param to The address to receive the newly minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(address to, uint256 amount) external {\n        require(msg.sender == vaultManager, \"Caller is not the VaultManager\");\n        _mint(to, amount);\n    }\n\n        /**\n     * @notice Request to change the owner.\n     * @param _newOwner Address of the new owner.\n     */\n    function requestOwnerChange(address _newOwner) external onlyDeveloper {\n        require(_newOwner != address(0), \"New owner cannot be zero address\");\n        require(ownerChangeRequestTime == 0, \"Owner change already requested\");\n\n        pendingNewOwner = _newOwner;\n        ownerChangeRequestTime = block.timestamp;\n\n        emit OwnerChangeRequested(msg.sender, _newOwner);\n    }\n\n    /**\n     * @notice Cancel the owner change request.\n     */\n    function cancelOwnerChange() external onlyOwner {\n        require(ownerChangeRequestTime > 0, \"No owner change request pending\");\n\n        pendingNewOwner = address(0);\n        ownerChangeRequestTime = 0;\n\n        emit OwnerChangeCanceled(msg.sender);\n    }\n\n    /**\n     * @notice Finalize the owner change after the delay period.\n     */\n    function finalizeOwnerChange() external onlyDeveloper {\n        require(ownerChangeRequestTime > 0, \"No owner change request pending\");\n        require(block.timestamp >= ownerChangeRequestTime + CHANGE_REQUEST_DELAY, \"Owner change delay not met\");\n\n        address oldOwner = owner();\n        address newOwner = pendingNewOwner;\n\n        _transferOwnership(newOwner);\n\n        pendingNewOwner = address(0);\n        ownerChangeRequestTime = 0;\n\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @notice Request to change the developer.\n     * @param _newDeveloper Address of the new developer.\n     */\n    function requestDeveloperChange(address _newDeveloper) external onlyOwner {\n        require(_newDeveloper != address(0), \"New developer cannot be zero address\");\n        require(developerChangeRequestTime == 0, \"Developer change already requested\");\n\n        pendingNewDeveloper = _newDeveloper;\n        developerChangeRequestTime = block.timestamp;\n\n        emit DeveloperChangeRequested(msg.sender, _newDeveloper);\n    }\n\n    /**\n     * @notice Cancel the developer change request.\n     */\n    function cancelDeveloperChange() external onlyDeveloper {\n        require(developerChangeRequestTime > 0, \"No developer change request pending\");\n\n        pendingNewDeveloper = address(0);\n        developerChangeRequestTime = 0;\n\n        emit DeveloperChangeCanceled(msg.sender);\n    }\n\n    /**\n     * @notice Finalize the developer change after the delay period.\n     */\n    function finalizeDeveloperChange() external onlyOwner {\n        require(developerChangeRequestTime > 0, \"No developer change request pending\");\n        require(block.timestamp >= developerChangeRequestTime + CHANGE_REQUEST_DELAY, \"Developer change delay not met\");\n\n        address oldDeveloper = developer;\n        address newDeveloper = pendingNewDeveloper;\n\n        developer = newDeveloper;\n\n        pendingNewDeveloper = address(0);\n        developerChangeRequestTime = 0;\n\n        emit DeveloperChanged(oldDeveloper, newDeveloper);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal virtual {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf50537f86409cf4c2f0a0f95de8ab9b6bcdddf060ebac951b848b96d41e911d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3edcbaa7c52d536233da5f20d9d5d3db0f3d757fb9242ba7a32fd72142503fe\",\"dweb:/ipfs/QmXjHGg5CstsLqYNZeBU2PHCjHAqFvTFigJnP7YAmqDM7U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NASICOIN.sol": {
				"NASICOIN": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currentDeveloper",
									"type": "address"
								}
							],
							"name": "DeveloperChangeCanceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newDeveloper",
									"type": "address"
								}
							],
							"name": "DeveloperChangeRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldDeveloper",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newDeveloper",
									"type": "address"
								}
							],
							"name": "DeveloperChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currentOwner",
									"type": "address"
								}
							],
							"name": "OwnerChangeCanceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChangeRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelDeveloperChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelOwnerChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developerChangeRequestTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeDeveloperChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeOwnerChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUsers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerChangeRequestTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingNewDeveloper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingNewOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newDeveloper",
									"type": "address"
								}
							],
							"name": "requestDeveloperChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "requestOwnerChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								}
							],
							"name": "setVaultManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "NASICOIN is a token created to support the owner of a cat named NASIC.       It has unique functionalities such as staking, donations, and weekly lottery-based prize distributions.      The fractional unit of NASICOIN is called \"FISH\".",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"initialOwner": "The initial owner of the contract (passed to the Ownable constructor)."
								}
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address to receive the newly minted tokens."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"requestDeveloperChange(address)": {
								"params": {
									"_newDeveloper": "Address of the new developer."
								}
							},
							"requestOwnerChange(address)": {
								"params": {
									"_newOwner": "Address of the new owner."
								}
							},
							"setVaultManager(address)": {
								"params": {
									"_vaultManager": "The address of the VaultManager contract."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "NASICOIN (NASIC)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NASICOIN.sol\":540:8227  contract NASICOIN is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NASICOIN.sol\":1938:2199  constructor(address initialOwner) ERC20(\"NASICOIN\", \"NASIC\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NASICOIN.sol\":2007:2019  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x4e415349434f494e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4e41534943000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NASICOIN.sol\":2094:2104  msg.sender */\n  caller\n    /* \"contracts/NASICOIN.sol\":2082:2091  developer */\n  0x09\n  0x00\n    /* \"contracts/NASICOIN.sol\":2082:2104  developer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":2159:2192  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_18\n    /* \"contracts/NASICOIN.sol\":2165:2175  msg.sender */\n  caller\n    /* \"contracts/NASICOIN.sol\":640:650  2 * 10**18 */\n  0x1bc16d674ec80000\n    /* \"contracts/NASICOIN.sol\":2159:2164  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/NASICOIN.sol\":2159:2192  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/NASICOIN.sol\":1938:2199  constructor(address initialOwner) ERC20(\"NASICOIN\", \"NASIC\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/NASICOIN.sol\":540:8227  contract NASICOIN is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/NASICOIN.sol\":2743:2910  function _mint(address account, uint256 amount) internal override {... */\ntag_19:\n    /* \"contracts/NASICOIN.sol\":2819:2847  super._mint(account, amount) */\n  tag_23\n    /* \"contracts/NASICOIN.sol\":2831:2838  account */\n  dup3\n    /* \"contracts/NASICOIN.sol\":2840:2846  amount */\n  dup3\n    /* \"contracts/NASICOIN.sol\":2819:2830  super._mint */\n  shl(0x20, tag_24)\n    /* \"contracts/NASICOIN.sol\":2819:2847  super._mint(account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/NASICOIN.sol\":2857:2903  _trackUserBalance(account, balanceOf(account)) */\n  tag_25\n    /* \"contracts/NASICOIN.sol\":2875:2882  account */\n  dup3\n    /* \"contracts/NASICOIN.sol\":2884:2902  balanceOf(account) */\n  tag_26\n    /* \"contracts/NASICOIN.sol\":2894:2901  account */\n  dup5\n    /* \"contracts/NASICOIN.sol\":2884:2893  balanceOf */\n  shl(0x20, tag_27)\n    /* \"contracts/NASICOIN.sol\":2884:2902  balanceOf(account) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/NASICOIN.sol\":2857:2874  _trackUserBalance */\n  shl(0x20, tag_28)\n    /* \"contracts/NASICOIN.sol\":2857:2903  _trackUserBalance(account, balanceOf(account)) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/NASICOIN.sol\":2743:2910  function _mint(address account, uint256 amount) internal override {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7682  function _mint(address account, uint256 value) internal virtual {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7563:7564  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7565  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7551  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7565  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7540:7631  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7617:7618  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7588:7620  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7540:7631  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7675  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7656:7657  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7660:7667  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7674  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7647  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7675  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7682  function _mint(address account, uint256 value) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NASICOIN.sol\":3465:3826  function _trackUserBalance(address user, uint256 balance) internal {... */\ntag_28:\n    /* \"contracts/NASICOIN.sol\":3556:3557  0 */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3546:3553  balance */\n  dup2\n    /* \"contracts/NASICOIN.sol\":3546:3557  balance > 0 */\n  gt\n    /* \"contracts/NASICOIN.sol\":3546:3578  balance > 0 && !hasBalance[user] */\n  dup1\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"contracts/NASICOIN.sol\":3562:3572  hasBalance */\n  0x06\n    /* \"contracts/NASICOIN.sol\":3562:3578  hasBalance[user] */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3573:3577  user */\n  dup4\n    /* \"contracts/NASICOIN.sol\":3562:3578  hasBalance[user] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/NASICOIN.sol\":3561:3578  !hasBalance[user] */\n  iszero\n    /* \"contracts/NASICOIN.sol\":3546:3578  balance > 0 && !hasBalance[user] */\ntag_36:\n    /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"contracts/NASICOIN.sol\":3613:3617  true */\n  0x01\n    /* \"contracts/NASICOIN.sol\":3594:3604  hasBalance */\n  0x06\n    /* \"contracts/NASICOIN.sol\":3594:3610  hasBalance[user] */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3605:3609  user */\n  dup5\n    /* \"contracts/NASICOIN.sol\":3594:3610  hasBalance[user] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/NASICOIN.sol\":3594:3617  hasBalance[user] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":3631:3636  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":3642:3646  user */\n  dup3\n    /* \"contracts/NASICOIN.sol\":3631:3647  users.push(user) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\n  jump(tag_39)\ntag_37:\n    /* \"contracts/NASICOIN.sol\":3679:3680  0 */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3668:3675  balance */\n  dup2\n    /* \"contracts/NASICOIN.sol\":3668:3680  balance == 0 */\n  eq\n    /* \"contracts/NASICOIN.sol\":3668:3700  balance == 0 && hasBalance[user] */\n  dup1\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"contracts/NASICOIN.sol\":3684:3694  hasBalance */\n  0x06\n    /* \"contracts/NASICOIN.sol\":3684:3700  hasBalance[user] */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3695:3699  user */\n  dup4\n    /* \"contracts/NASICOIN.sol\":3684:3700  hasBalance[user] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/NASICOIN.sol\":3668:3700  balance == 0 && hasBalance[user] */\ntag_40:\n    /* \"contracts/NASICOIN.sol\":3664:3782  if (balance == 0 && hasBalance[user]) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"contracts/NASICOIN.sol\":3735:3740  false */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3716:3726  hasBalance */\n  0x06\n    /* \"contracts/NASICOIN.sol\":3716:3732  hasBalance[user] */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3727:3731  user */\n  dup5\n    /* \"contracts/NASICOIN.sol\":3716:3732  hasBalance[user] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/NASICOIN.sol\":3716:3740  hasBalance[user] = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":3754:3771  _removeUser(user) */\n  tag_42\n    /* \"contracts/NASICOIN.sol\":3766:3770  user */\n  dup3\n    /* \"contracts/NASICOIN.sol\":3754:3765  _removeUser */\n  shl(0x20, tag_43)\n    /* \"contracts/NASICOIN.sol\":3754:3771  _removeUser(user) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"contracts/NASICOIN.sol\":3664:3782  if (balance == 0 && hasBalance[user]) {... */\ntag_41:\n    /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\ntag_39:\n    /* \"contracts/NASICOIN.sol\":3812:3819  balance */\n  dup1\n    /* \"contracts/NASICOIN.sol\":3791:3803  userBalances */\n  0x07\n    /* \"contracts/NASICOIN.sol\":3791:3809  userBalances[user] */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3804:3808  user */\n  dup5\n    /* \"contracts/NASICOIN.sol\":3791:3809  userBalances[user] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/NASICOIN.sol\":3791:3819  userBalances[user] = balance */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":3465:3826  function _trackUserBalance(address user, uint256 balance) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n  jump(tag_48)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n  jump(tag_53)\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n  mload(0x40)\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NASICOIN.sol\":3895:4217  function _removeUser(address user) internal {... */\ntag_43:\n    /* \"contracts/NASICOIN.sol\":3954:3963  uint256 i */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3966:3967  0 */\n  0x00\n    /* \"contracts/NASICOIN.sol\":3954:3967  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\ntag_57:\n    /* \"contracts/NASICOIN.sol\":3973:3978  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":3973:3985  users.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"contracts/NASICOIN.sol\":3969:3970  i */\n  dup2\n    /* \"contracts/NASICOIN.sol\":3969:3985  i < users.length */\n  lt\n    /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\n  iszero\n  tag_58\n  jumpi\n    /* \"contracts/NASICOIN.sol\":4022:4026  user */\n  dup2\n    /* \"contracts/NASICOIN.sol\":4010:4026  users[i] == user */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NASICOIN.sol\":4010:4015  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":4016:4017  i */\n  dup3\n    /* \"contracts/NASICOIN.sol\":4010:4018  users[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_60\n  jumpi\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\ntag_60:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NASICOIN.sol\":4010:4026  users[i] == user */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/NASICOIN.sol\":4006:4201  if (users[i] == user) {... */\n  tag_64\n  jumpi\n    /* \"contracts/NASICOIN.sol\":4057:4062  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":4078:4079  1 */\n  0x01\n    /* \"contracts/NASICOIN.sol\":4063:4068  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":4063:4075  users.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"contracts/NASICOIN.sol\":4063:4079  users.length - 1 */\n  tag_65\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"contracts/NASICOIN.sol\":4057:4080  users[users.length - 1] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_67\n  jumpi\n  tag_68\n  tag_62\n  jump\t// in\ntag_68:\ntag_67:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NASICOIN.sol\":4046:4051  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":4052:4053  i */\n  dup3\n    /* \"contracts/NASICOIN.sol\":4046:4054  users[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_70\n  jumpi\n  tag_71\n  tag_62\n  jump\t// in\ntag_71:\ntag_70:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n    /* \"contracts/NASICOIN.sol\":4046:4080  users[i] = users[users.length - 1] */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NASICOIN.sol\":4128:4133  users */\n  0x08\n    /* \"contracts/NASICOIN.sol\":4128:4139  users.pop() */\n  dup1\n  sload\n  dup1\n  tag_73\n  jumpi\n  tag_74\n  tag_75\n  jump\t// in\ntag_74:\ntag_73:\n  0x01\n  swap1\n  sub\n  dup2\n  dup2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n  swap1\n  sstore\n    /* \"contracts/NASICOIN.sol\":4181:4186  break */\n  jump(tag_58)\n    /* \"contracts/NASICOIN.sol\":4006:4201  if (users[i] == user) {... */\ntag_64:\n    /* \"contracts/NASICOIN.sol\":3987:3990  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\n  jump(tag_57)\ntag_58:\n  pop\n    /* \"contracts/NASICOIN.sol\":3895:4217  function _removeUser(address user) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_78:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_80:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_81:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_113\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_80\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_82:\n    /* \"#utility.yul\":641:665   */\n  tag_115\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_81\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_116:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_83:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_118\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_82\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_121\n  tag_78\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":932:1051   */\ntag_120:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_122\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_83\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_84:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_85:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_86:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_87:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_127:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_129\n  tag_86\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":1909:1993   */\ntag_128:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_88:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_89:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_90:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_91:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_134\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_90\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2624:2663   */\n  tag_135\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_90\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_92:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_93:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_94:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_139\n    /* \"#utility.yul\":3013:3047   */\n  tag_140\n    /* \"#utility.yul\":3022:3046   */\n  tag_141\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_92\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3013:3047   */\n  tag_93\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2995:3048   */\n  tag_92\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_95:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_96:\n    /* \"#utility.yul\":3251:3290   */\n  tag_144\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_94\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3312:3403   */\n  tag_145\n    /* \"#utility.yul\":3361:3402   */\n  tag_146\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_95\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_91\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_97:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_98:\n    /* \"#utility.yul\":3572:3604   */\n  tag_149\n  tag_97\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3613:3678   */\n  tag_150\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_96\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_99:\n    /* \"#utility.yul\":3750:3870   */\ntag_152:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_155\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_98\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_100:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_158\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_88\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4101:4130   */\n  tag_159\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_89\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_160:\n    /* \"#utility.yul\":4328:4408   */\n  tag_161\n    /* \"#utility.yul\":4384:4406   */\n  tag_162\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_89\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_99\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_157:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_101:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_102:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_165\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_101\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_103:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_167\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_102\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_169\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_84\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_171\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5233:5289   */\ntag_170:\n    /* \"#utility.yul\":5313:5351   */\n  tag_172\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_87\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5398:5465   */\n  tag_173\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_100\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_176:\n    /* \"#utility.yul\":6339:6406   */\n  tag_177\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_103\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_174)\n    /* \"#utility.yul\":5560:6178   */\ntag_175:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_178\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_88\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_179:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_183\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_102\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_182:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_174:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_104:\n    /* \"#utility.yul\":6516:6540   */\n  tag_185\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_81\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_187\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_104\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_105:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_47:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_190\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_92\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_191\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_92\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_193\n  tag_105\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7115:7151   */\ntag_192:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_106:\n    /* \"#utility.yul\":7251:7275   */\n  tag_195\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_92\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_51:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_197\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_104\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":7569:7641   */\n  tag_198\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_106\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7651:7723   */\n  tag_199\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_106\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_55:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_201\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_106\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7964:8144   */\ntag_62:\n    /* \"#utility.yul\":8012:8089   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8009:8010   */\n  0x00\n    /* \"#utility.yul\":8002:8090   */\n  mstore\n    /* \"#utility.yul\":8109:8113   */\n  0x32\n    /* \"#utility.yul\":8106:8107   */\n  0x04\n    /* \"#utility.yul\":8099:8114   */\n  mstore\n    /* \"#utility.yul\":8133:8137   */\n  0x24\n    /* \"#utility.yul\":8130:8131   */\n  0x00\n    /* \"#utility.yul\":8123:8138   */\n  revert\n    /* \"#utility.yul\":8150:8344   */\ntag_66:\n    /* \"#utility.yul\":8190:8194   */\n  0x00\n    /* \"#utility.yul\":8210:8230   */\n  tag_204\n    /* \"#utility.yul\":8228:8229   */\n  dup3\n    /* \"#utility.yul\":8210:8230   */\n  tag_92\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8205:8230   */\n  swap2\n  pop\n    /* \"#utility.yul\":8244:8264   */\n  tag_205\n    /* \"#utility.yul\":8262:8263   */\n  dup4\n    /* \"#utility.yul\":8244:8264   */\n  tag_92\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8239:8264   */\n  swap3\n  pop\n    /* \"#utility.yul\":8288:8289   */\n  dup3\n    /* \"#utility.yul\":8285:8286   */\n  dup3\n    /* \"#utility.yul\":8281:8290   */\n  sub\n    /* \"#utility.yul\":8273:8290   */\n  swap1\n  pop\n    /* \"#utility.yul\":8312:8313   */\n  dup2\n    /* \"#utility.yul\":8306:8310   */\n  dup2\n    /* \"#utility.yul\":8303:8314   */\n  gt\n    /* \"#utility.yul\":8300:8337   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":8317:8335   */\n  tag_207\n  tag_105\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8300:8337   */\ntag_206:\n    /* \"#utility.yul\":8150:8344   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8350:8530   */\ntag_75:\n    /* \"#utility.yul\":8398:8475   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8395:8396   */\n  0x00\n    /* \"#utility.yul\":8388:8476   */\n  mstore\n    /* \"#utility.yul\":8495:8499   */\n  0x31\n    /* \"#utility.yul\":8492:8493   */\n  0x04\n    /* \"#utility.yul\":8485:8500   */\n  mstore\n    /* \"#utility.yul\":8519:8523   */\n  0x24\n    /* \"#utility.yul\":8516:8517   */\n  0x00\n    /* \"#utility.yul\":8509:8524   */\n  revert\n    /* \"contracts/NASICOIN.sol\":540:8227  contract NASICOIN is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NASICOIN.sol\":540:8227  contract NASICOIN is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88dacbcc\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd940cb5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe9c559a9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb543503e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb9c28d29\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xca4b208b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x95d89b41\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9e12279d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa67a91e3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa86c8374\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x88dacbcc\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8a4adf24\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x2b7df804\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x47734892\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x2b7df804\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x06fdde03\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0xce8e3e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05069f22\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x067453a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/NASICOIN.sol\":4279:4369  function getUsers() external view returns (address[] memory) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":1115:1145  address public pendingNewOwner */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":7306:7591  function cancelDeveloperChange() external onlyDeveloper {... */\n    tag_5:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_6:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":1192:1229  uint256 public ownerChangeRequestTime */\n    tag_10:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":599:650  uint256 public constant INITIAL_SUPPLY = 2 * 10**18 */\n    tag_11:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":2382:2473  function decimals() public view virtual override returns (uint8) {... */\n    tag_12:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":5097:5261  function mint(address to, uint256 amount) external {... */\n    tag_13:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/NASICOIN.sol\":4417:4529  function getUserBalance(address user) external view returns (uint256) {... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/NASICOIN.sol\":5833:6090  function cancelOwnerChange() external onlyOwner {... */\n    tag_17:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NASICOIN.sol\":1042:1069  address public vaultManager */\n    tag_18:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":6810:7232  function requestDeveloperChange(address _newDeveloper) external onlyOwner {... */\n    tag_21:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/NASICOIN.sol\":7682:8225  function finalizeDeveloperChange() external onlyOwner {... */\n    tag_22:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/NASICOIN.sol\":5381:5763  function requestOwnerChange(address _newOwner) external onlyDeveloper {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":4681:4878  function setVaultManager(address _vaultManager) external onlyOwner {... */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/NASICOIN.sol\":1151:1185  address public pendingNewDeveloper */\n    tag_26:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":984:1008  address public developer */\n    tag_27:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NASICOIN.sol\":6177:6682  function finalizeOwnerChange() external onlyDeveloper {... */\n    tag_29:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/NASICOIN.sol\":1235:1276  uint256 public developerChangeRequestTime */\n    tag_30:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/NASICOIN.sol\":4279:4369  function getUsers() external view returns (address[] memory) {... */\n    tag_40:\n        /* \"contracts/NASICOIN.sol\":4322:4338  address[] memory */\n      0x60\n        /* \"contracts/NASICOIN.sol\":4357:4362  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4350:4362  return users */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":4279:4369  function getUsers() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":1115:1145  address public pendingNewOwner */\n    tag_44:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":7306:7591  function cancelDeveloperChange() external onlyDeveloper {... */\n    tag_48:\n        /* \"contracts/NASICOIN.sol\":2624:2633  developer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2620  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NASICOIN.sol\":2602:2665  require(msg.sender == developer, \"Caller is not the developer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/NASICOIN.sol\":7409:7410  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":7380:7406  developerChangeRequestTime */\n      sload(0x0e)\n        /* \"contracts/NASICOIN.sol\":7380:7410  developerChangeRequestTime > 0 */\n      gt\n        /* \"contracts/NASICOIN.sol\":7372:7450  require(developerChangeRequestTime > 0, \"No developer change request pending\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/NASICOIN.sol\":7491:7492  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":7461:7480  pendingNewDeveloper */\n      0x0c\n      0x00\n        /* \"contracts/NASICOIN.sol\":7461:7493  pendingNewDeveloper = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":7532:7533  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":7503:7529  developerChangeRequestTime */\n      0x0e\n        /* \"contracts/NASICOIN.sol\":7503:7533  developerChangeRequestTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":7573:7583  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":7549:7584  DeveloperChangeCanceled(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xccd8c9d5857ed509892cb6ba9a608f25fa4cfed016a475a02e39837f019461cc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NASICOIN.sol\":7306:7591  function cancelDeveloperChange() external onlyDeveloper {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_150\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":1192:1229  uint256 public ownerChangeRequestTime */\n    tag_69:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":599:650  uint256 public constant INITIAL_SUPPLY = 2 * 10**18 */\n    tag_72:\n        /* \"contracts/NASICOIN.sol\":640:650  2 * 10**18 */\n      0x1bc16d674ec80000\n        /* \"contracts/NASICOIN.sol\":599:650  uint256 public constant INITIAL_SUPPLY = 2 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":2382:2473  function decimals() public view virtual override returns (uint8) {... */\n    tag_75:\n        /* \"contracts/NASICOIN.sol\":2440:2445  uint8 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":2464:2466  18 */\n      0x12\n        /* \"contracts/NASICOIN.sol\":2457:2466  return 18 */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":2382:2473  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":5097:5261  function mint(address to, uint256 amount) external {... */\n    tag_80:\n        /* \"contracts/NASICOIN.sol\":5180:5192  vaultManager */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":5166:5192  msg.sender == vaultManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":5166:5176  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":5166:5192  msg.sender == vaultManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NASICOIN.sol\":5158:5227  require(msg.sender == vaultManager, \"Caller is not the VaultManager\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/NASICOIN.sol\":5237:5254  _mint(to, amount) */\n      tag_172\n        /* \"contracts/NASICOIN.sol\":5243:5245  to */\n      dup3\n        /* \"contracts/NASICOIN.sol\":5247:5253  amount */\n      dup3\n        /* \"contracts/NASICOIN.sol\":5237:5242  _mint */\n      tag_173\n        /* \"contracts/NASICOIN.sol\":5237:5254  _mint(to, amount) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/NASICOIN.sol\":5097:5261  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":4417:4529  function getUserBalance(address user) external view returns (uint256) {... */\n    tag_84:\n        /* \"contracts/NASICOIN.sol\":4478:4485  uint256 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":4504:4516  userBalances */\n      0x07\n        /* \"contracts/NASICOIN.sol\":4504:4522  userBalances[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":4517:4521  user */\n      dup4\n        /* \"contracts/NASICOIN.sol\":4504:4522  userBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NASICOIN.sol\":4497:4522  return userBalances[user] */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":4417:4529  function getUserBalance(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":5833:6090  function cancelOwnerChange() external onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/NASICOIN.sol\":5924:5925  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":5899:5921  ownerChangeRequestTime */\n      sload(0x0d)\n        /* \"contracts/NASICOIN.sol\":5899:5925  ownerChangeRequestTime > 0 */\n      gt\n        /* \"contracts/NASICOIN.sol\":5891:5961  require(ownerChangeRequestTime > 0, \"No owner change request pending\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/NASICOIN.sol\":5998:5999  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":5972:5987  pendingNewOwner */\n      0x0b\n      0x00\n        /* \"contracts/NASICOIN.sol\":5972:6000  pendingNewOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":6035:6036  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6010:6032  ownerChangeRequestTime */\n      0x0d\n        /* \"contracts/NASICOIN.sol\":6010:6036  ownerChangeRequestTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":6072:6082  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":6052:6083  OwnerChangeCanceled(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71929bfc41c49ae5e05a53003b97907866c902f9807734ce3a0507bfdae425f9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NASICOIN.sol\":5833:6090  function cancelOwnerChange() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":1042:1069  address public vaultManager */\n    tag_95:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_150\n      jump\t// in\n    tag_190:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_150\n      jump\t// in\n    tag_191:\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_193\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_192)\n    tag_193:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_194:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_194\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":6810:7232  function requestDeveloperChange(address _newDeveloper) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/NASICOIN.sol\":6927:6928  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6902:6929  _newDeveloper != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":6902:6915  _newDeveloper */\n      dup2\n        /* \"contracts/NASICOIN.sol\":6902:6929  _newDeveloper != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NASICOIN.sol\":6894:6970  require(_newDeveloper != address(0), \"New developer cannot be zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/NASICOIN.sol\":7018:7019  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6988:7014  developerChangeRequestTime */\n      sload(0x0e)\n        /* \"contracts/NASICOIN.sol\":6988:7019  developerChangeRequestTime == 0 */\n      eq\n        /* \"contracts/NASICOIN.sol\":6980:7058  require(developerChangeRequestTime == 0, \"Developer change already requested\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/NASICOIN.sol\":7091:7104  _newDeveloper */\n      dup1\n        /* \"contracts/NASICOIN.sol\":7069:7088  pendingNewDeveloper */\n      0x0c\n      0x00\n        /* \"contracts/NASICOIN.sol\":7069:7104  pendingNewDeveloper = _newDeveloper */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":7143:7158  block.timestamp */\n      timestamp\n        /* \"contracts/NASICOIN.sol\":7114:7140  developerChangeRequestTime */\n      0x0e\n        /* \"contracts/NASICOIN.sol\":7114:7158  developerChangeRequestTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":7211:7224  _newDeveloper */\n      dup1\n        /* \"contracts/NASICOIN.sol\":7174:7225  DeveloperChangeRequested(msg.sender, _newDeveloper) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":7199:7209  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":7174:7225  DeveloperChangeRequested(msg.sender, _newDeveloper) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11d251823298414f86a55ee989c577145357724264d4f6d10632f865a55488fb\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NASICOIN.sol\":6810:7232  function requestDeveloperChange(address _newDeveloper) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":7682:8225  function finalizeDeveloperChange() external onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/NASICOIN.sol\":7783:7784  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":7754:7780  developerChangeRequestTime */\n      sload(0x0e)\n        /* \"contracts/NASICOIN.sol\":7754:7784  developerChangeRequestTime > 0 */\n      gt\n        /* \"contracts/NASICOIN.sol\":7746:7824  require(developerChangeRequestTime > 0, \"No developer change request pending\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_147\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/NASICOIN.sol\":1331:1338  90 days */\n      0x76a700\n        /* \"contracts/NASICOIN.sol\":7861:7887  developerChangeRequestTime */\n      sload(0x0e)\n        /* \"contracts/NASICOIN.sol\":7861:7910  developerChangeRequestTime + CHANGE_REQUEST_DELAY */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"contracts/NASICOIN.sol\":7842:7857  block.timestamp */\n      timestamp\n        /* \"contracts/NASICOIN.sol\":7842:7910  block.timestamp >= developerChangeRequestTime + CHANGE_REQUEST_DELAY */\n      lt\n      iszero\n        /* \"contracts/NASICOIN.sol\":7834:7945  require(block.timestamp >= developerChangeRequestTime + CHANGE_REQUEST_DELAY, \"Developer change delay not met\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/NASICOIN.sol\":7956:7976  address oldDeveloper */\n      0x00\n        /* \"contracts/NASICOIN.sol\":7979:7988  developer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":7956:7988  address oldDeveloper = developer */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":7998:8018  address newDeveloper */\n      0x00\n        /* \"contracts/NASICOIN.sol\":8021:8040  pendingNewDeveloper */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":7998:8040  address newDeveloper = pendingNewDeveloper */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":8063:8075  newDeveloper */\n      dup1\n        /* \"contracts/NASICOIN.sol\":8051:8060  developer */\n      0x09\n      0x00\n        /* \"contracts/NASICOIN.sol\":8051:8075  developer = newDeveloper */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":8116:8117  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":8086:8105  pendingNewDeveloper */\n      0x0c\n      0x00\n        /* \"contracts/NASICOIN.sol\":8086:8118  pendingNewDeveloper = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":8157:8158  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":8128:8154  developerChangeRequestTime */\n      0x0e\n        /* \"contracts/NASICOIN.sol\":8128:8158  developerChangeRequestTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":8205:8217  newDeveloper */\n      dup1\n        /* \"contracts/NASICOIN.sol\":8174:8218  DeveloperChanged(oldDeveloper, newDeveloper) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":8191:8203  oldDeveloper */\n      dup3\n        /* \"contracts/NASICOIN.sol\":8174:8218  DeveloperChanged(oldDeveloper, newDeveloper) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe823578be672ebcfc6a23fce5293a8769dd2449c1ae45d769b8ba0fc3435625f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NASICOIN.sol\":7736:8225  {... */\n      pop\n      pop\n        /* \"contracts/NASICOIN.sol\":7682:8225  function finalizeDeveloperChange() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":5381:5763  function requestOwnerChange(address _newOwner) external onlyDeveloper {... */\n    tag_110:\n        /* \"contracts/NASICOIN.sol\":2624:2633  developer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2620  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NASICOIN.sol\":2602:2665  require(msg.sender == developer, \"Caller is not the developer\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_143\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/NASICOIN.sol\":5490:5491  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":5469:5492  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":5469:5478  _newOwner */\n      dup2\n        /* \"contracts/NASICOIN.sol\":5469:5492  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NASICOIN.sol\":5461:5529  require(_newOwner != address(0), \"New owner cannot be zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/NASICOIN.sol\":5573:5574  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":5547:5569  ownerChangeRequestTime */\n      sload(0x0d)\n        /* \"contracts/NASICOIN.sol\":5547:5574  ownerChangeRequestTime == 0 */\n      eq\n        /* \"contracts/NASICOIN.sol\":5539:5609  require(ownerChangeRequestTime == 0, \"Owner change already requested\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/NASICOIN.sol\":5638:5647  _newOwner */\n      dup1\n        /* \"contracts/NASICOIN.sol\":5620:5635  pendingNewOwner */\n      0x0b\n      0x00\n        /* \"contracts/NASICOIN.sol\":5620:5647  pendingNewOwner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":5682:5697  block.timestamp */\n      timestamp\n        /* \"contracts/NASICOIN.sol\":5657:5679  ownerChangeRequestTime */\n      0x0d\n        /* \"contracts/NASICOIN.sol\":5657:5697  ownerChangeRequestTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":5746:5755  _newOwner */\n      dup1\n        /* \"contracts/NASICOIN.sol\":5713:5756  OwnerChangeRequested(msg.sender, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":5734:5744  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":5713:5756  OwnerChangeRequested(msg.sender, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe4d82e46d7a4a49d024ed3cdf35530213f02413245e7bf0d20121174c089e0d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NASICOIN.sol\":5381:5763  function requestOwnerChange(address _newOwner) external onlyDeveloper {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":4681:4878  function setVaultManager(address _vaultManager) external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/NASICOIN.sol\":4791:4792  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":4766:4793  _vaultManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":4766:4779  _vaultManager */\n      dup2\n        /* \"contracts/NASICOIN.sol\":4766:4793  _vaultManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NASICOIN.sol\":4758:4833  require(_vaultManager != address(0), \"VaultManager address cannot be zero\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/NASICOIN.sol\":4858:4871  _vaultManager */\n      dup1\n        /* \"contracts/NASICOIN.sol\":4843:4855  vaultManager */\n      0x0a\n      0x00\n        /* \"contracts/NASICOIN.sol\":4843:4871  vaultManager = _vaultManager */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":4681:4878  function setVaultManager(address _vaultManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":1151:1185  address public pendingNewDeveloper */\n    tag_119:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":984:1008  address public developer */\n    tag_122:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":6177:6682  function finalizeOwnerChange() external onlyDeveloper {... */\n    tag_130:\n        /* \"contracts/NASICOIN.sol\":2624:2633  developer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":2610:2620  msg.sender */\n      caller\n        /* \"contracts/NASICOIN.sol\":2610:2633  msg.sender == developer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NASICOIN.sol\":2602:2665  require(msg.sender == developer, \"Caller is not the developer\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_143\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/NASICOIN.sol\":6274:6275  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6249:6271  ownerChangeRequestTime */\n      sload(0x0d)\n        /* \"contracts/NASICOIN.sol\":6249:6275  ownerChangeRequestTime > 0 */\n      gt\n        /* \"contracts/NASICOIN.sol\":6241:6311  require(ownerChangeRequestTime > 0, \"No owner change request pending\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_187\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/NASICOIN.sol\":1331:1338  90 days */\n      0x76a700\n        /* \"contracts/NASICOIN.sol\":6348:6370  ownerChangeRequestTime */\n      sload(0x0d)\n        /* \"contracts/NASICOIN.sol\":6348:6393  ownerChangeRequestTime + CHANGE_REQUEST_DELAY */\n      tag_240\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_240:\n        /* \"contracts/NASICOIN.sol\":6329:6344  block.timestamp */\n      timestamp\n        /* \"contracts/NASICOIN.sol\":6329:6393  block.timestamp >= ownerChangeRequestTime + CHANGE_REQUEST_DELAY */\n      lt\n      iszero\n        /* \"contracts/NASICOIN.sol\":6321:6424  require(block.timestamp >= ownerChangeRequestTime + CHANGE_REQUEST_DELAY, \"Owner change delay not met\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/NASICOIN.sol\":6435:6451  address oldOwner */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6454:6461  owner() */\n      tag_244\n        /* \"contracts/NASICOIN.sol\":6454:6459  owner */\n      tag_98\n        /* \"contracts/NASICOIN.sol\":6454:6461  owner() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/NASICOIN.sol\":6435:6461  address oldOwner = owner() */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":6471:6487  address newOwner */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6490:6505  pendingNewOwner */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":6471:6505  address newOwner = pendingNewOwner */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":6516:6544  _transferOwnership(newOwner) */\n      tag_245\n        /* \"contracts/NASICOIN.sol\":6535:6543  newOwner */\n      dup2\n        /* \"contracts/NASICOIN.sol\":6516:6534  _transferOwnership */\n      tag_181\n        /* \"contracts/NASICOIN.sol\":6516:6544  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/NASICOIN.sol\":6581:6582  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6555:6570  pendingNewOwner */\n      0x0b\n      0x00\n        /* \"contracts/NASICOIN.sol\":6555:6583  pendingNewOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":6618:6619  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":6593:6615  ownerChangeRequestTime */\n      0x0d\n        /* \"contracts/NASICOIN.sol\":6593:6619  ownerChangeRequestTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":6666:6674  newOwner */\n      dup1\n        /* \"contracts/NASICOIN.sol\":6635:6675  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":6656:6664  oldOwner */\n      dup3\n        /* \"contracts/NASICOIN.sol\":6635:6675  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NASICOIN.sol\":6231:6682  {... */\n      pop\n      pop\n        /* \"contracts/NASICOIN.sol\":6177:6682  function finalizeOwnerChange() external onlyDeveloper {... */\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":1235:1276  uint256 public developerChangeRequestTime */\n    tag_132:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8742:8870  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8863  _approve(owner, spender, value, true) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8849  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8851:8856  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8858:8862  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8834  _approve */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8863  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8742:8870  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10431:10907  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10530:10554  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10582  allowance(owner, spender) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10567:10572  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10574:10581  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10566  allowance */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10582  allowance(owner, spender) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10530:10582  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10615:10632  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10596:10612  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10596:10632  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10592:10901  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10671:10676  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10668  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10676  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10648:10778  if (currentAllowance < value) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10730:10737  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10739:10755  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10757:10762  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10703:10763  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10648:10778  if (currentAllowance < value) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10876  _approve(owner, spender, currentAllowance - value, false) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10842  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10863:10868  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10860  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10868  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10870:10875  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10827  _approve */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10876  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10592:10901  if (currentAllowance < type(uint256).max) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10520:10907  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10431:10907  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":2988:3380  function _transfer(... */\n    tag_166:\n        /* \"contracts/NASICOIN.sol\":3116:3158  super._transfer(sender, recipient, amount) */\n      tag_264\n        /* \"contracts/NASICOIN.sol\":3132:3138  sender */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3140:3149  recipient */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3151:3157  amount */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3116:3131  super._transfer */\n      tag_265\n        /* \"contracts/NASICOIN.sol\":3116:3158  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/NASICOIN.sol\":3217:3261  _trackUserBalance(sender, balanceOf(sender)) */\n      tag_266\n        /* \"contracts/NASICOIN.sol\":3235:3241  sender */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3243:3260  balanceOf(sender) */\n      tag_267\n        /* \"contracts/NASICOIN.sol\":3253:3259  sender */\n      dup6\n        /* \"contracts/NASICOIN.sol\":3243:3252  balanceOf */\n      tag_88\n        /* \"contracts/NASICOIN.sol\":3243:3260  balanceOf(sender) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/NASICOIN.sol\":3217:3234  _trackUserBalance */\n      tag_268\n        /* \"contracts/NASICOIN.sol\":3217:3261  _trackUserBalance(sender, balanceOf(sender)) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/NASICOIN.sol\":3323:3373  _trackUserBalance(recipient, balanceOf(recipient)) */\n      tag_269\n        /* \"contracts/NASICOIN.sol\":3341:3350  recipient */\n      dup3\n        /* \"contracts/NASICOIN.sol\":3352:3372  balanceOf(recipient) */\n      tag_270\n        /* \"contracts/NASICOIN.sol\":3362:3371  recipient */\n      dup5\n        /* \"contracts/NASICOIN.sol\":3352:3361  balanceOf */\n      tag_88\n        /* \"contracts/NASICOIN.sol\":3352:3372  balanceOf(recipient) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/NASICOIN.sol\":3323:3340  _trackUserBalance */\n      tag_268\n        /* \"contracts/NASICOIN.sol\":3323:3373  _trackUserBalance(recipient, balanceOf(recipient)) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/NASICOIN.sol\":2988:3380  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":2743:2910  function _mint(address account, uint256 amount) internal override {... */\n    tag_173:\n        /* \"contracts/NASICOIN.sol\":2819:2847  super._mint(account, amount) */\n      tag_272\n        /* \"contracts/NASICOIN.sol\":2831:2838  account */\n      dup3\n        /* \"contracts/NASICOIN.sol\":2840:2846  amount */\n      dup3\n        /* \"contracts/NASICOIN.sol\":2819:2830  super._mint */\n      tag_273\n        /* \"contracts/NASICOIN.sol\":2819:2847  super._mint(account, amount) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/NASICOIN.sol\":2857:2903  _trackUserBalance(account, balanceOf(account)) */\n      tag_274\n        /* \"contracts/NASICOIN.sol\":2875:2882  account */\n      dup3\n        /* \"contracts/NASICOIN.sol\":2884:2902  balanceOf(account) */\n      tag_275\n        /* \"contracts/NASICOIN.sol\":2894:2901  account */\n      dup5\n        /* \"contracts/NASICOIN.sol\":2884:2893  balanceOf */\n      tag_88\n        /* \"contracts/NASICOIN.sol\":2884:2902  balanceOf(account) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/NASICOIN.sol\":2857:2874  _trackUserBalance */\n      tag_268\n        /* \"contracts/NASICOIN.sol\":2857:2903  _trackUserBalance(account, balanceOf(account)) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/NASICOIN.sol\":2743:2910  function _mint(address account, uint256 amount) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:10149  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9846:9847  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9829:9848  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9829:9834  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9829:9848  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9825:9914  if (owner == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9900:9901  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9871:9903  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9825:9914  if (owner == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9946:9947  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9927:9948  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9927:9934  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9927:9948  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9923:10013  if (spender == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10000  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9971:10002  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9923:10013  if (spender == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10052:10057  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10033  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10040  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10034:10039  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10040  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10049  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10041:10048  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10049  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10022:10057  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10071:10080  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10067:10143  if (emitEvent) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10117:10124  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10132  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10132  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10126:10131  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10132  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10067:10143  if (emitEvent) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:10149  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5500:5501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5488  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5484:5502  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5553  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5555  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5480:5566  if (from == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5593:5594  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5581  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5579:5595  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5647:5648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5618:5650  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5575:5661  if (to == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5678:5682  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5684:5686  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5688:5693  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5677  _update */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5694  _update(from, to, value) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5701  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":3465:3826  function _trackUserBalance(address user, uint256 balance) internal {... */\n    tag_268:\n        /* \"contracts/NASICOIN.sol\":3556:3557  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3546:3553  balance */\n      dup2\n        /* \"contracts/NASICOIN.sol\":3546:3557  balance > 0 */\n      gt\n        /* \"contracts/NASICOIN.sol\":3546:3578  balance > 0 && !hasBalance[user] */\n      dup1\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"contracts/NASICOIN.sol\":3562:3572  hasBalance */\n      0x06\n        /* \"contracts/NASICOIN.sol\":3562:3578  hasBalance[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3573:3577  user */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3562:3578  hasBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NASICOIN.sol\":3561:3578  !hasBalance[user] */\n      iszero\n        /* \"contracts/NASICOIN.sol\":3546:3578  balance > 0 && !hasBalance[user] */\n    tag_298:\n        /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"contracts/NASICOIN.sol\":3613:3617  true */\n      0x01\n        /* \"contracts/NASICOIN.sol\":3594:3604  hasBalance */\n      0x06\n        /* \"contracts/NASICOIN.sol\":3594:3610  hasBalance[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3605:3609  user */\n      dup5\n        /* \"contracts/NASICOIN.sol\":3594:3610  hasBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NASICOIN.sol\":3594:3617  hasBalance[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":3631:3636  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":3642:3646  user */\n      dup3\n        /* \"contracts/NASICOIN.sol\":3631:3647  users.push(user) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\n      jump(tag_301)\n    tag_299:\n        /* \"contracts/NASICOIN.sol\":3679:3680  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3668:3675  balance */\n      dup2\n        /* \"contracts/NASICOIN.sol\":3668:3680  balance == 0 */\n      eq\n        /* \"contracts/NASICOIN.sol\":3668:3700  balance == 0 && hasBalance[user] */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"contracts/NASICOIN.sol\":3684:3694  hasBalance */\n      0x06\n        /* \"contracts/NASICOIN.sol\":3684:3700  hasBalance[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3695:3699  user */\n      dup4\n        /* \"contracts/NASICOIN.sol\":3684:3700  hasBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NASICOIN.sol\":3668:3700  balance == 0 && hasBalance[user] */\n    tag_302:\n        /* \"contracts/NASICOIN.sol\":3664:3782  if (balance == 0 && hasBalance[user]) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/NASICOIN.sol\":3735:3740  false */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3716:3726  hasBalance */\n      0x06\n        /* \"contracts/NASICOIN.sol\":3716:3732  hasBalance[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3727:3731  user */\n      dup5\n        /* \"contracts/NASICOIN.sol\":3716:3732  hasBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NASICOIN.sol\":3716:3740  hasBalance[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":3754:3771  _removeUser(user) */\n      tag_304\n        /* \"contracts/NASICOIN.sol\":3766:3770  user */\n      dup3\n        /* \"contracts/NASICOIN.sol\":3754:3765  _removeUser */\n      tag_305\n        /* \"contracts/NASICOIN.sol\":3754:3771  _removeUser(user) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/NASICOIN.sol\":3664:3782  if (balance == 0 && hasBalance[user]) {... */\n    tag_303:\n        /* \"contracts/NASICOIN.sol\":3542:3782  if (balance > 0 && !hasBalance[user]) {... */\n    tag_301:\n        /* \"contracts/NASICOIN.sol\":3812:3819  balance */\n      dup1\n        /* \"contracts/NASICOIN.sol\":3791:3803  userBalances */\n      0x07\n        /* \"contracts/NASICOIN.sol\":3791:3809  userBalances[user] */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3804:3808  user */\n      dup5\n        /* \"contracts/NASICOIN.sol\":3791:3809  userBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NASICOIN.sol\":3791:3819  userBalances[user] = balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":3465:3826  function _trackUserBalance(address user, uint256 balance) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7682  function _mint(address account, uint256 value) internal virtual {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7563:7564  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7565  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7551  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7565  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7540:7631  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7617:7618  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7588:7620  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7540:7631  if (account == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7675  _update(address(0), account, value) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7656:7657  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7660:7667  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7674  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7647  _update */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7675  _update(address(0), account, value) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7466:7682  function _mint(address account, uint256 value) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6121:6122  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6109  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6105:6123  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6253  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6241:6262  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_312\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_312:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n      jump(tag_313)\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6312  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6324  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6329  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6330  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6293:6330  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6362:6367  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6359  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6348:6367  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6419:6423  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6425:6436  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6438:6443  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6394:6444  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6344:6459  if (fromBalance < value) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6611:6616  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6608  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6597:6616  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6588  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6593  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6594  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6616  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6279:6641  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6101:6641  if (from == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6669:6670  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6657  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6655:6671  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6839  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6830  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6818:6839  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n      jump(tag_317)\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7046:7051  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7038  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7039:7041  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7042  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7029:7051  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6651:7076  if (to == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7106:7108  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7100:7104  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7110:7115  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7116  Transfer(from, to, value) */\n      mload(0x40)\n      tag_318\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6016:7123  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NASICOIN.sol\":3895:4217  function _removeUser(address user) internal {... */\n    tag_305:\n        /* \"contracts/NASICOIN.sol\":3954:3963  uint256 i */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3966:3967  0 */\n      0x00\n        /* \"contracts/NASICOIN.sol\":3954:3967  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_320:\n        /* \"contracts/NASICOIN.sol\":3973:3978  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":3973:3985  users.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":3969:3970  i */\n      dup2\n        /* \"contracts/NASICOIN.sol\":3969:3985  i < users.length */\n      lt\n        /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"contracts/NASICOIN.sol\":4022:4026  user */\n      dup2\n        /* \"contracts/NASICOIN.sol\":4010:4026  users[i] == user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":4010:4015  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4016:4017  i */\n      dup3\n        /* \"contracts/NASICOIN.sol\":4010:4018  users[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_324\n      tag_325\n      jump\t// in\n    tag_324:\n    tag_323:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":4010:4026  users[i] == user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NASICOIN.sol\":4006:4201  if (users[i] == user) {... */\n      tag_327\n      jumpi\n        /* \"contracts/NASICOIN.sol\":4057:4062  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4078:4079  1 */\n      0x01\n        /* \"contracts/NASICOIN.sol\":4063:4068  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4063:4075  users.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NASICOIN.sol\":4063:4079  users.length - 1 */\n      tag_328\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"contracts/NASICOIN.sol\":4057:4080  users[users.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_331\n      tag_325\n      jump\t// in\n    tag_331:\n    tag_330:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NASICOIN.sol\":4046:4051  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4052:4053  i */\n      dup3\n        /* \"contracts/NASICOIN.sol\":4046:4054  users[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_334\n      tag_325\n      jump\t// in\n    tag_334:\n    tag_333:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/NASICOIN.sol\":4046:4080  users[i] = users[users.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NASICOIN.sol\":4128:4133  users */\n      0x08\n        /* \"contracts/NASICOIN.sol\":4128:4139  users.pop() */\n      dup1\n      sload\n      dup1\n      tag_336\n      jumpi\n      tag_337\n      tag_338\n      jump\t// in\n    tag_337:\n    tag_336:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/NASICOIN.sol\":4181:4186  break */\n      jump(tag_321)\n        /* \"contracts/NASICOIN.sol\":4006:4201  if (users[i] == user) {... */\n    tag_327:\n        /* \"contracts/NASICOIN.sol\":3987:3990  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/NASICOIN.sol\":3949:4211  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_320)\n    tag_321:\n      pop\n        /* \"contracts/NASICOIN.sol\":3895:4217  function _removeUser(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:121   */\n    tag_340:\n        /* \"#utility.yul\":74:80   */\n      0x00\n        /* \"#utility.yul\":108:113   */\n      dup2\n        /* \"#utility.yul\":102:114   */\n      mload\n        /* \"#utility.yul\":92:114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":127:311   */\n    tag_341:\n        /* \"#utility.yul\":226:237   */\n      0x00\n        /* \"#utility.yul\":260:266   */\n      dup3\n        /* \"#utility.yul\":255:258   */\n      dup3\n        /* \"#utility.yul\":248:267   */\n      mstore\n        /* \"#utility.yul\":300:304   */\n      0x20\n        /* \"#utility.yul\":295:298   */\n      dup3\n        /* \"#utility.yul\":291:305   */\n      add\n        /* \"#utility.yul\":276:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":127:311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":317:449   */\n    tag_342:\n        /* \"#utility.yul\":384:388   */\n      0x00\n        /* \"#utility.yul\":407:410   */\n      dup2\n        /* \"#utility.yul\":399:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":437:441   */\n      0x20\n        /* \"#utility.yul\":432:435   */\n      dup3\n        /* \"#utility.yul\":428:442   */\n      add\n        /* \"#utility.yul\":420:442   */\n      swap1\n      pop\n        /* \"#utility.yul\":317:449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":455:581   */\n    tag_343:\n        /* \"#utility.yul\":492:499   */\n      0x00\n        /* \"#utility.yul\":532:574   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":525:530   */\n      dup3\n        /* \"#utility.yul\":521:575   */\n      and\n        /* \"#utility.yul\":510:575   */\n      swap1\n      pop\n        /* \"#utility.yul\":455:581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:683   */\n    tag_344:\n        /* \"#utility.yul\":624:631   */\n      0x00\n        /* \"#utility.yul\":653:677   */\n      tag_398\n        /* \"#utility.yul\":671:676   */\n      dup3\n        /* \"#utility.yul\":653:677   */\n      tag_343\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":642:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":587:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:797   */\n    tag_345:\n        /* \"#utility.yul\":766:790   */\n      tag_400\n        /* \"#utility.yul\":784:789   */\n      dup2\n        /* \"#utility.yul\":766:790   */\n      tag_344\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":761:764   */\n      dup3\n        /* \"#utility.yul\":754:791   */\n      mstore\n        /* \"#utility.yul\":689:797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:982   */\n    tag_346:\n        /* \"#utility.yul\":872:882   */\n      0x00\n        /* \"#utility.yul\":893:939   */\n      tag_402\n        /* \"#utility.yul\":935:938   */\n      dup4\n        /* \"#utility.yul\":927:933   */\n      dup4\n        /* \"#utility.yul\":893:939   */\n      tag_345\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":971:975   */\n      0x20\n        /* \"#utility.yul\":966:969   */\n      dup4\n        /* \"#utility.yul\":962:976   */\n      add\n        /* \"#utility.yul\":948:976   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1101   */\n    tag_347:\n        /* \"#utility.yul\":1058:1062   */\n      0x00\n        /* \"#utility.yul\":1090:1094   */\n      0x20\n        /* \"#utility.yul\":1085:1088   */\n      dup3\n        /* \"#utility.yul\":1081:1095   */\n      add\n        /* \"#utility.yul\":1073:1095   */\n      swap1\n      pop\n        /* \"#utility.yul\":988:1101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1869   */\n    tag_348:\n        /* \"#utility.yul\":1256:1259   */\n      0x00\n        /* \"#utility.yul\":1285:1339   */\n      tag_405\n        /* \"#utility.yul\":1333:1338   */\n      dup3\n        /* \"#utility.yul\":1285:1339   */\n      tag_340\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1355:1441   */\n      tag_406\n        /* \"#utility.yul\":1434:1440   */\n      dup2\n        /* \"#utility.yul\":1429:1432   */\n      dup6\n        /* \"#utility.yul\":1355:1441   */\n      tag_341\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1348:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1465:1521   */\n      tag_407\n        /* \"#utility.yul\":1515:1520   */\n      dup4\n        /* \"#utility.yul\":1465:1521   */\n      tag_342\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1544:1551   */\n      dup1\n        /* \"#utility.yul\":1575:1576   */\n      0x00\n        /* \"#utility.yul\":1560:1844   */\n    tag_408:\n        /* \"#utility.yul\":1585:1591   */\n      dup4\n        /* \"#utility.yul\":1582:1583   */\n      dup2\n        /* \"#utility.yul\":1579:1592   */\n      lt\n        /* \"#utility.yul\":1560:1844   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":1661:1667   */\n      dup2\n        /* \"#utility.yul\":1655:1668   */\n      mload\n        /* \"#utility.yul\":1688:1751   */\n      tag_411\n        /* \"#utility.yul\":1747:1750   */\n      dup9\n        /* \"#utility.yul\":1732:1745   */\n      dup3\n        /* \"#utility.yul\":1688:1751   */\n      tag_346\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1681:1751   */\n      swap8\n      pop\n        /* \"#utility.yul\":1774:1834   */\n      tag_412\n        /* \"#utility.yul\":1827:1833   */\n      dup4\n        /* \"#utility.yul\":1774:1834   */\n      tag_347\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1764:1834   */\n      swap3\n      pop\n        /* \"#utility.yul\":1620:1844   */\n      pop\n        /* \"#utility.yul\":1607:1608   */\n      0x01\n        /* \"#utility.yul\":1604:1605   */\n      dup2\n        /* \"#utility.yul\":1600:1609   */\n      add\n        /* \"#utility.yul\":1595:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1560:1844   */\n      jump(tag_408)\n    tag_410:\n        /* \"#utility.yul\":1564:1578   */\n      pop\n        /* \"#utility.yul\":1860:1863   */\n      dup6\n        /* \"#utility.yul\":1853:1863   */\n      swap4\n      pop\n        /* \"#utility.yul\":1261:1869   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1137:1869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1875:2248   */\n    tag_42:\n        /* \"#utility.yul\":2018:2022   */\n      0x00\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup3\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2033:2059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2105:2114   */\n      dup2\n        /* \"#utility.yul\":2099:2103   */\n      dup2\n        /* \"#utility.yul\":2095:2115   */\n      sub\n        /* \"#utility.yul\":2091:2092   */\n      0x00\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2076:2093   */\n      add\n        /* \"#utility.yul\":2069:2116   */\n      mstore\n        /* \"#utility.yul\":2133:2241   */\n      tag_414\n        /* \"#utility.yul\":2236:2240   */\n      dup2\n        /* \"#utility.yul\":2227:2233   */\n      dup5\n        /* \"#utility.yul\":2133:2241   */\n      tag_348\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2125:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1875:2248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2254:2372   */\n    tag_349:\n        /* \"#utility.yul\":2341:2365   */\n      tag_416\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_344\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2336:2339   */\n      dup3\n        /* \"#utility.yul\":2329:2366   */\n      mstore\n        /* \"#utility.yul\":2254:2372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2600   */\n    tag_46:\n        /* \"#utility.yul\":2471:2475   */\n      0x00\n        /* \"#utility.yul\":2509:2511   */\n      0x20\n        /* \"#utility.yul\":2498:2507   */\n      dup3\n        /* \"#utility.yul\":2494:2512   */\n      add\n        /* \"#utility.yul\":2486:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2522:2593   */\n      tag_418\n        /* \"#utility.yul\":2590:2591   */\n      0x00\n        /* \"#utility.yul\":2579:2588   */\n      dup4\n        /* \"#utility.yul\":2575:2592   */\n      add\n        /* \"#utility.yul\":2566:2572   */\n      dup5\n        /* \"#utility.yul\":2522:2593   */\n      tag_349\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2378:2600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2606:2705   */\n    tag_350:\n        /* \"#utility.yul\":2658:2664   */\n      0x00\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2686:2698   */\n      mload\n        /* \"#utility.yul\":2676:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2606:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2880   */\n    tag_351:\n        /* \"#utility.yul\":2795:2806   */\n      0x00\n        /* \"#utility.yul\":2829:2835   */\n      dup3\n        /* \"#utility.yul\":2824:2827   */\n      dup3\n        /* \"#utility.yul\":2817:2836   */\n      mstore\n        /* \"#utility.yul\":2869:2873   */\n      0x20\n        /* \"#utility.yul\":2864:2867   */\n      dup3\n        /* \"#utility.yul\":2860:2874   */\n      add\n        /* \"#utility.yul\":2845:2874   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3025   */\n    tag_352:\n        /* \"#utility.yul\":2975:2981   */\n      dup3\n        /* \"#utility.yul\":2970:2973   */\n      dup2\n        /* \"#utility.yul\":2965:2968   */\n      dup4\n        /* \"#utility.yul\":2959:2982   */\n      mcopy\n        /* \"#utility.yul\":3016:3017   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup4\n        /* \"#utility.yul\":3002:3005   */\n      dup4\n        /* \"#utility.yul\":2998:3014   */\n      add\n        /* \"#utility.yul\":2991:3018   */\n      mstore\n        /* \"#utility.yul\":2886:3025   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3031:3133   */\n    tag_353:\n        /* \"#utility.yul\":3072:3078   */\n      0x00\n        /* \"#utility.yul\":3123:3125   */\n      0x1f\n        /* \"#utility.yul\":3119:3126   */\n      not\n        /* \"#utility.yul\":3114:3116   */\n      0x1f\n        /* \"#utility.yul\":3107:3112   */\n      dup4\n        /* \"#utility.yul\":3103:3117   */\n      add\n        /* \"#utility.yul\":3099:3127   */\n      and\n        /* \"#utility.yul\":3089:3127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3031:3133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3139:3516   */\n    tag_354:\n        /* \"#utility.yul\":3227:3230   */\n      0x00\n        /* \"#utility.yul\":3255:3294   */\n      tag_424\n        /* \"#utility.yul\":3288:3293   */\n      dup3\n        /* \"#utility.yul\":3255:3294   */\n      tag_350\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3310:3381   */\n      tag_425\n        /* \"#utility.yul\":3374:3380   */\n      dup2\n        /* \"#utility.yul\":3369:3372   */\n      dup6\n        /* \"#utility.yul\":3310:3381   */\n      tag_351\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3303:3381   */\n      swap4\n      pop\n        /* \"#utility.yul\":3390:3455   */\n      tag_426\n        /* \"#utility.yul\":3448:3454   */\n      dup2\n        /* \"#utility.yul\":3443:3446   */\n      dup6\n        /* \"#utility.yul\":3436:3440   */\n      0x20\n        /* \"#utility.yul\":3429:3434   */\n      dup7\n        /* \"#utility.yul\":3425:3441   */\n      add\n        /* \"#utility.yul\":3390:3455   */\n      tag_352\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3480:3509   */\n      tag_427\n        /* \"#utility.yul\":3502:3508   */\n      dup2\n        /* \"#utility.yul\":3480:3509   */\n      tag_353\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3475:3478   */\n      dup5\n        /* \"#utility.yul\":3471:3510   */\n      add\n        /* \"#utility.yul\":3464:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3231:3516   */\n      pop\n        /* \"#utility.yul\":3139:3516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3522:3835   */\n    tag_52:\n        /* \"#utility.yul\":3635:3639   */\n      0x00\n        /* \"#utility.yul\":3673:3675   */\n      0x20\n        /* \"#utility.yul\":3662:3671   */\n      dup3\n        /* \"#utility.yul\":3658:3676   */\n      add\n        /* \"#utility.yul\":3650:3676   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:3731   */\n      dup2\n        /* \"#utility.yul\":3716:3720   */\n      dup2\n        /* \"#utility.yul\":3712:3732   */\n      sub\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3697:3706   */\n      dup4\n        /* \"#utility.yul\":3693:3710   */\n      add\n        /* \"#utility.yul\":3686:3733   */\n      mstore\n        /* \"#utility.yul\":3750:3828   */\n      tag_429\n        /* \"#utility.yul\":3823:3827   */\n      dup2\n        /* \"#utility.yul\":3814:3820   */\n      dup5\n        /* \"#utility.yul\":3750:3828   */\n      tag_354\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3742:3828   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4039   */\n    tag_356:\n        /* \"#utility.yul\":4031:4032   */\n      0x00\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4021:4033   */\n      revert\n        /* \"#utility.yul\":4168:4290   */\n    tag_358:\n        /* \"#utility.yul\":4241:4265   */\n      tag_434\n        /* \"#utility.yul\":4259:4264   */\n      dup2\n        /* \"#utility.yul\":4241:4265   */\n      tag_344\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4234:4239   */\n      dup2\n        /* \"#utility.yul\":4231:4266   */\n      eq\n        /* \"#utility.yul\":4221:4284   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4277:4278   */\n      0x00\n        /* \"#utility.yul\":4270:4282   */\n      revert\n        /* \"#utility.yul\":4221:4284   */\n    tag_435:\n        /* \"#utility.yul\":4168:4290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4296:4435   */\n    tag_359:\n        /* \"#utility.yul\":4342:4347   */\n      0x00\n        /* \"#utility.yul\":4380:4386   */\n      dup2\n        /* \"#utility.yul\":4367:4387   */\n      calldataload\n        /* \"#utility.yul\":4358:4387   */\n      swap1\n      pop\n        /* \"#utility.yul\":4396:4429   */\n      tag_437\n        /* \"#utility.yul\":4423:4428   */\n      dup2\n        /* \"#utility.yul\":4396:4429   */\n      tag_358\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4296:4435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4441:4518   */\n    tag_360:\n        /* \"#utility.yul\":4478:4485   */\n      0x00\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4496:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4441:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4646   */\n    tag_361:\n        /* \"#utility.yul\":4597:4621   */\n      tag_440\n        /* \"#utility.yul\":4615:4620   */\n      dup2\n        /* \"#utility.yul\":4597:4621   */\n      tag_360\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4590:4595   */\n      dup2\n        /* \"#utility.yul\":4587:4622   */\n      eq\n        /* \"#utility.yul\":4577:4640   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4636:4637   */\n      0x00\n        /* \"#utility.yul\":4633:4634   */\n      0x00\n        /* \"#utility.yul\":4626:4638   */\n      revert\n        /* \"#utility.yul\":4577:4640   */\n    tag_441:\n        /* \"#utility.yul\":4524:4646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:4791   */\n    tag_362:\n        /* \"#utility.yul\":4698:4703   */\n      0x00\n        /* \"#utility.yul\":4736:4742   */\n      dup2\n        /* \"#utility.yul\":4723:4743   */\n      calldataload\n        /* \"#utility.yul\":4714:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4752:4785   */\n      tag_443\n        /* \"#utility.yul\":4779:4784   */\n      dup2\n        /* \"#utility.yul\":4752:4785   */\n      tag_361\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4652:4791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:5271   */\n    tag_55:\n        /* \"#utility.yul\":4865:4871   */\n      0x00\n        /* \"#utility.yul\":4873:4879   */\n      0x00\n        /* \"#utility.yul\":4922:4924   */\n      0x40\n        /* \"#utility.yul\":4910:4919   */\n      dup4\n        /* \"#utility.yul\":4901:4908   */\n      dup6\n        /* \"#utility.yul\":4897:4920   */\n      sub\n        /* \"#utility.yul\":4893:4925   */\n      slt\n        /* \"#utility.yul\":4890:5009   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":4928:5007   */\n      tag_446\n      tag_356\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4890:5009   */\n    tag_445:\n        /* \"#utility.yul\":5048:5049   */\n      0x00\n        /* \"#utility.yul\":5073:5126   */\n      tag_447\n        /* \"#utility.yul\":5118:5125   */\n      dup6\n        /* \"#utility.yul\":5109:5115   */\n      dup3\n        /* \"#utility.yul\":5098:5107   */\n      dup7\n        /* \"#utility.yul\":5094:5116   */\n      add\n        /* \"#utility.yul\":5073:5126   */\n      tag_359\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5063:5126   */\n      swap3\n      pop\n        /* \"#utility.yul\":5019:5136   */\n      pop\n        /* \"#utility.yul\":5175:5177   */\n      0x20\n        /* \"#utility.yul\":5201:5254   */\n      tag_448\n        /* \"#utility.yul\":5246:5253   */\n      dup6\n        /* \"#utility.yul\":5237:5243   */\n      dup3\n        /* \"#utility.yul\":5226:5235   */\n      dup7\n        /* \"#utility.yul\":5222:5244   */\n      add\n        /* \"#utility.yul\":5201:5254   */\n      tag_362\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5191:5254   */\n      swap2\n      pop\n        /* \"#utility.yul\":5146:5264   */\n      pop\n        /* \"#utility.yul\":4797:5271   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5277:5367   */\n    tag_363:\n        /* \"#utility.yul\":5311:5318   */\n      0x00\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5347:5360   */\n      iszero\n        /* \"#utility.yul\":5340:5361   */\n      iszero\n        /* \"#utility.yul\":5329:5361   */\n      swap1\n      pop\n        /* \"#utility.yul\":5277:5367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5373:5482   */\n    tag_364:\n        /* \"#utility.yul\":5454:5475   */\n      tag_451\n        /* \"#utility.yul\":5469:5474   */\n      dup2\n        /* \"#utility.yul\":5454:5475   */\n      tag_363\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5449:5452   */\n      dup3\n        /* \"#utility.yul\":5442:5476   */\n      mstore\n        /* \"#utility.yul\":5373:5482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5488:5698   */\n    tag_58:\n        /* \"#utility.yul\":5575:5579   */\n      0x00\n        /* \"#utility.yul\":5613:5615   */\n      0x20\n        /* \"#utility.yul\":5602:5611   */\n      dup3\n        /* \"#utility.yul\":5598:5616   */\n      add\n        /* \"#utility.yul\":5590:5616   */\n      swap1\n      pop\n        /* \"#utility.yul\":5626:5691   */\n      tag_453\n        /* \"#utility.yul\":5688:5689   */\n      0x00\n        /* \"#utility.yul\":5677:5686   */\n      dup4\n        /* \"#utility.yul\":5673:5690   */\n      add\n        /* \"#utility.yul\":5664:5670   */\n      dup5\n        /* \"#utility.yul\":5626:5691   */\n      tag_364\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5488:5698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5704:5822   */\n    tag_365:\n        /* \"#utility.yul\":5791:5815   */\n      tag_455\n        /* \"#utility.yul\":5809:5814   */\n      dup2\n        /* \"#utility.yul\":5791:5815   */\n      tag_360\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5786:5789   */\n      dup3\n        /* \"#utility.yul\":5779:5816   */\n      mstore\n        /* \"#utility.yul\":5704:5822   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5828:6050   */\n    tag_62:\n        /* \"#utility.yul\":5921:5925   */\n      0x00\n        /* \"#utility.yul\":5959:5961   */\n      0x20\n        /* \"#utility.yul\":5948:5957   */\n      dup3\n        /* \"#utility.yul\":5944:5962   */\n      add\n        /* \"#utility.yul\":5936:5962   */\n      swap1\n      pop\n        /* \"#utility.yul\":5972:6043   */\n      tag_457\n        /* \"#utility.yul\":6040:6041   */\n      0x00\n        /* \"#utility.yul\":6029:6038   */\n      dup4\n        /* \"#utility.yul\":6025:6042   */\n      add\n        /* \"#utility.yul\":6016:6022   */\n      dup5\n        /* \"#utility.yul\":5972:6043   */\n      tag_365\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5828:6050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6056:6675   */\n    tag_65:\n        /* \"#utility.yul\":6133:6139   */\n      0x00\n        /* \"#utility.yul\":6141:6147   */\n      0x00\n        /* \"#utility.yul\":6149:6155   */\n      0x00\n        /* \"#utility.yul\":6198:6200   */\n      0x60\n        /* \"#utility.yul\":6186:6195   */\n      dup5\n        /* \"#utility.yul\":6177:6184   */\n      dup7\n        /* \"#utility.yul\":6173:6196   */\n      sub\n        /* \"#utility.yul\":6169:6201   */\n      slt\n        /* \"#utility.yul\":6166:6285   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6204:6283   */\n      tag_460\n      tag_356\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6166:6285   */\n    tag_459:\n        /* \"#utility.yul\":6324:6325   */\n      0x00\n        /* \"#utility.yul\":6349:6402   */\n      tag_461\n        /* \"#utility.yul\":6394:6401   */\n      dup7\n        /* \"#utility.yul\":6385:6391   */\n      dup3\n        /* \"#utility.yul\":6374:6383   */\n      dup8\n        /* \"#utility.yul\":6370:6392   */\n      add\n        /* \"#utility.yul\":6349:6402   */\n      tag_359\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6339:6402   */\n      swap4\n      pop\n        /* \"#utility.yul\":6295:6412   */\n      pop\n        /* \"#utility.yul\":6451:6453   */\n      0x20\n        /* \"#utility.yul\":6477:6530   */\n      tag_462\n        /* \"#utility.yul\":6522:6529   */\n      dup7\n        /* \"#utility.yul\":6513:6519   */\n      dup3\n        /* \"#utility.yul\":6502:6511   */\n      dup8\n        /* \"#utility.yul\":6498:6520   */\n      add\n        /* \"#utility.yul\":6477:6530   */\n      tag_359\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6467:6530   */\n      swap3\n      pop\n        /* \"#utility.yul\":6422:6540   */\n      pop\n        /* \"#utility.yul\":6579:6581   */\n      0x40\n        /* \"#utility.yul\":6605:6658   */\n      tag_463\n        /* \"#utility.yul\":6650:6657   */\n      dup7\n        /* \"#utility.yul\":6641:6647   */\n      dup3\n        /* \"#utility.yul\":6630:6639   */\n      dup8\n        /* \"#utility.yul\":6626:6648   */\n      add\n        /* \"#utility.yul\":6605:6658   */\n      tag_362\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6595:6658   */\n      swap2\n      pop\n        /* \"#utility.yul\":6550:6668   */\n      pop\n        /* \"#utility.yul\":6056:6675   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6681:6767   */\n    tag_366:\n        /* \"#utility.yul\":6716:6723   */\n      0x00\n        /* \"#utility.yul\":6756:6760   */\n      0xff\n        /* \"#utility.yul\":6749:6754   */\n      dup3\n        /* \"#utility.yul\":6745:6761   */\n      and\n        /* \"#utility.yul\":6734:6761   */\n      swap1\n      pop\n        /* \"#utility.yul\":6681:6767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6773:6885   */\n    tag_367:\n        /* \"#utility.yul\":6856:6878   */\n      tag_466\n        /* \"#utility.yul\":6872:6877   */\n      dup2\n        /* \"#utility.yul\":6856:6878   */\n      tag_366\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6851:6854   */\n      dup3\n        /* \"#utility.yul\":6844:6879   */\n      mstore\n        /* \"#utility.yul\":6773:6885   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6891:7105   */\n    tag_77:\n        /* \"#utility.yul\":6980:6984   */\n      0x00\n        /* \"#utility.yul\":7018:7020   */\n      0x20\n        /* \"#utility.yul\":7007:7016   */\n      dup3\n        /* \"#utility.yul\":7003:7021   */\n      add\n        /* \"#utility.yul\":6995:7021   */\n      swap1\n      pop\n        /* \"#utility.yul\":7031:7098   */\n      tag_468\n        /* \"#utility.yul\":7095:7096   */\n      0x00\n        /* \"#utility.yul\":7084:7093   */\n      dup4\n        /* \"#utility.yul\":7080:7097   */\n      add\n        /* \"#utility.yul\":7071:7077   */\n      dup5\n        /* \"#utility.yul\":7031:7098   */\n      tag_367\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6891:7105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7111:7440   */\n    tag_83:\n        /* \"#utility.yul\":7170:7176   */\n      0x00\n        /* \"#utility.yul\":7219:7221   */\n      0x20\n        /* \"#utility.yul\":7207:7216   */\n      dup3\n        /* \"#utility.yul\":7198:7205   */\n      dup5\n        /* \"#utility.yul\":7194:7217   */\n      sub\n        /* \"#utility.yul\":7190:7222   */\n      slt\n        /* \"#utility.yul\":7187:7306   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7225:7304   */\n      tag_471\n      tag_356\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7187:7306   */\n    tag_470:\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7370:7423   */\n      tag_472\n        /* \"#utility.yul\":7415:7422   */\n      dup5\n        /* \"#utility.yul\":7406:7412   */\n      dup3\n        /* \"#utility.yul\":7395:7404   */\n      dup6\n        /* \"#utility.yul\":7391:7413   */\n      add\n        /* \"#utility.yul\":7370:7423   */\n      tag_359\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7360:7423   */\n      swap2\n      pop\n        /* \"#utility.yul\":7316:7433   */\n      pop\n        /* \"#utility.yul\":7111:7440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7446:7920   */\n    tag_126:\n        /* \"#utility.yul\":7514:7520   */\n      0x00\n        /* \"#utility.yul\":7522:7528   */\n      0x00\n        /* \"#utility.yul\":7571:7573   */\n      0x40\n        /* \"#utility.yul\":7559:7568   */\n      dup4\n        /* \"#utility.yul\":7550:7557   */\n      dup6\n        /* \"#utility.yul\":7546:7569   */\n      sub\n        /* \"#utility.yul\":7542:7574   */\n      slt\n        /* \"#utility.yul\":7539:7658   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7577:7656   */\n      tag_475\n      tag_356\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7539:7658   */\n    tag_474:\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7722:7775   */\n      tag_476\n        /* \"#utility.yul\":7767:7774   */\n      dup6\n        /* \"#utility.yul\":7758:7764   */\n      dup3\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7765   */\n      add\n        /* \"#utility.yul\":7722:7775   */\n      tag_359\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7712:7775   */\n      swap3\n      pop\n        /* \"#utility.yul\":7668:7785   */\n      pop\n        /* \"#utility.yul\":7824:7826   */\n      0x20\n        /* \"#utility.yul\":7850:7903   */\n      tag_477\n        /* \"#utility.yul\":7895:7902   */\n      dup6\n        /* \"#utility.yul\":7886:7892   */\n      dup3\n        /* \"#utility.yul\":7875:7884   */\n      dup7\n        /* \"#utility.yul\":7871:7893   */\n      add\n        /* \"#utility.yul\":7850:7903   */\n      tag_359\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7840:7903   */\n      swap2\n      pop\n        /* \"#utility.yul\":7795:7913   */\n      pop\n        /* \"#utility.yul\":7446:7920   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8103   */\n    tag_368:\n        /* \"#utility.yul\":8066:8095   */\n      0x43616c6c6572206973206e6f742074686520646576656c6f7065720000000000\n        /* \"#utility.yul\":8062:8063   */\n      0x00\n        /* \"#utility.yul\":8054:8060   */\n      dup3\n        /* \"#utility.yul\":8050:8064   */\n      add\n        /* \"#utility.yul\":8043:8096   */\n      mstore\n        /* \"#utility.yul\":7926:8103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8109:8475   */\n    tag_369:\n        /* \"#utility.yul\":8251:8254   */\n      0x00\n        /* \"#utility.yul\":8272:8339   */\n      tag_480\n        /* \"#utility.yul\":8336:8338   */\n      0x1b\n        /* \"#utility.yul\":8331:8334   */\n      dup4\n        /* \"#utility.yul\":8272:8339   */\n      tag_351\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8265:8339   */\n      swap2\n      pop\n        /* \"#utility.yul\":8348:8441   */\n      tag_481\n        /* \"#utility.yul\":8437:8440   */\n      dup3\n        /* \"#utility.yul\":8348:8441   */\n      tag_368\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8466:8468   */\n      0x20\n        /* \"#utility.yul\":8461:8464   */\n      dup3\n        /* \"#utility.yul\":8457:8469   */\n      add\n        /* \"#utility.yul\":8450:8469   */\n      swap1\n      pop\n        /* \"#utility.yul\":8109:8475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8481:8900   */\n    tag_143:\n        /* \"#utility.yul\":8647:8651   */\n      0x00\n        /* \"#utility.yul\":8685:8687   */\n      0x20\n        /* \"#utility.yul\":8674:8683   */\n      dup3\n        /* \"#utility.yul\":8670:8688   */\n      add\n        /* \"#utility.yul\":8662:8688   */\n      swap1\n      pop\n        /* \"#utility.yul\":8734:8743   */\n      dup2\n        /* \"#utility.yul\":8728:8732   */\n      dup2\n        /* \"#utility.yul\":8724:8744   */\n      sub\n        /* \"#utility.yul\":8720:8721   */\n      0x00\n        /* \"#utility.yul\":8709:8718   */\n      dup4\n        /* \"#utility.yul\":8705:8722   */\n      add\n        /* \"#utility.yul\":8698:8745   */\n      mstore\n        /* \"#utility.yul\":8762:8893   */\n      tag_483\n        /* \"#utility.yul\":8888:8892   */\n      dup2\n        /* \"#utility.yul\":8762:8893   */\n      tag_369\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8754:8893   */\n      swap1\n      pop\n        /* \"#utility.yul\":8481:8900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8906:9128   */\n    tag_370:\n        /* \"#utility.yul\":9046:9080   */\n      0x4e6f20646576656c6f706572206368616e676520726571756573742070656e64\n        /* \"#utility.yul\":9042:9043   */\n      0x00\n        /* \"#utility.yul\":9034:9040   */\n      dup3\n        /* \"#utility.yul\":9030:9044   */\n      add\n        /* \"#utility.yul\":9023:9081   */\n      mstore\n        /* \"#utility.yul\":9115:9120   */\n      0x696e670000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9110:9112   */\n      0x20\n        /* \"#utility.yul\":9102:9108   */\n      dup3\n        /* \"#utility.yul\":9098:9113   */\n      add\n        /* \"#utility.yul\":9091:9121   */\n      mstore\n        /* \"#utility.yul\":8906:9128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9134:9500   */\n    tag_371:\n        /* \"#utility.yul\":9276:9279   */\n      0x00\n        /* \"#utility.yul\":9297:9364   */\n      tag_486\n        /* \"#utility.yul\":9361:9363   */\n      0x23\n        /* \"#utility.yul\":9356:9359   */\n      dup4\n        /* \"#utility.yul\":9297:9364   */\n      tag_351\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9290:9364   */\n      swap2\n      pop\n        /* \"#utility.yul\":9373:9466   */\n      tag_487\n        /* \"#utility.yul\":9462:9465   */\n      dup3\n        /* \"#utility.yul\":9373:9466   */\n      tag_370\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9491:9493   */\n      0x40\n        /* \"#utility.yul\":9486:9489   */\n      dup3\n        /* \"#utility.yul\":9482:9494   */\n      add\n        /* \"#utility.yul\":9475:9494   */\n      swap1\n      pop\n        /* \"#utility.yul\":9134:9500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9925   */\n    tag_147:\n        /* \"#utility.yul\":9672:9676   */\n      0x00\n        /* \"#utility.yul\":9710:9712   */\n      0x20\n        /* \"#utility.yul\":9699:9708   */\n      dup3\n        /* \"#utility.yul\":9695:9713   */\n      add\n        /* \"#utility.yul\":9687:9713   */\n      swap1\n      pop\n        /* \"#utility.yul\":9759:9768   */\n      dup2\n        /* \"#utility.yul\":9753:9757   */\n      dup2\n        /* \"#utility.yul\":9749:9769   */\n      sub\n        /* \"#utility.yul\":9745:9746   */\n      0x00\n        /* \"#utility.yul\":9734:9743   */\n      dup4\n        /* \"#utility.yul\":9730:9747   */\n      add\n        /* \"#utility.yul\":9723:9770   */\n      mstore\n        /* \"#utility.yul\":9787:9918   */\n      tag_489\n        /* \"#utility.yul\":9913:9917   */\n      dup2\n        /* \"#utility.yul\":9787:9918   */\n      tag_371\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9779:9918   */\n      swap1\n      pop\n        /* \"#utility.yul\":9506:9925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9931:10111   */\n    tag_372:\n        /* \"#utility.yul\":9979:10056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9976:9977   */\n      0x00\n        /* \"#utility.yul\":9969:10057   */\n      mstore\n        /* \"#utility.yul\":10076:10080   */\n      0x22\n        /* \"#utility.yul\":10073:10074   */\n      0x04\n        /* \"#utility.yul\":10066:10081   */\n      mstore\n        /* \"#utility.yul\":10100:10104   */\n      0x24\n        /* \"#utility.yul\":10097:10098   */\n      0x00\n        /* \"#utility.yul\":10090:10105   */\n      revert\n        /* \"#utility.yul\":10117:10437   */\n    tag_150:\n        /* \"#utility.yul\":10161:10167   */\n      0x00\n        /* \"#utility.yul\":10198:10199   */\n      0x02\n        /* \"#utility.yul\":10192:10196   */\n      dup3\n        /* \"#utility.yul\":10188:10200   */\n      div\n        /* \"#utility.yul\":10178:10200   */\n      swap1\n      pop\n        /* \"#utility.yul\":10245:10246   */\n      0x01\n        /* \"#utility.yul\":10239:10243   */\n      dup3\n        /* \"#utility.yul\":10235:10247   */\n      and\n        /* \"#utility.yul\":10266:10284   */\n      dup1\n        /* \"#utility.yul\":10256:10337   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":10322:10326   */\n      0x7f\n        /* \"#utility.yul\":10314:10320   */\n      dup3\n        /* \"#utility.yul\":10310:10327   */\n      and\n        /* \"#utility.yul\":10300:10327   */\n      swap2\n      pop\n        /* \"#utility.yul\":10256:10337   */\n    tag_492:\n        /* \"#utility.yul\":10384:10386   */\n      0x20\n        /* \"#utility.yul\":10376:10382   */\n      dup3\n        /* \"#utility.yul\":10373:10387   */\n      lt\n        /* \"#utility.yul\":10353:10371   */\n      dup2\n        /* \"#utility.yul\":10350:10388   */\n      sub\n        /* \"#utility.yul\":10347:10431   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":10403:10421   */\n      tag_494\n      tag_372\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10347:10431   */\n    tag_493:\n        /* \"#utility.yul\":10168:10437   */\n      pop\n        /* \"#utility.yul\":10117:10437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10443:10623   */\n    tag_373:\n        /* \"#utility.yul\":10583:10615   */\n      0x43616c6c6572206973206e6f7420746865205661756c744d616e616765720000\n        /* \"#utility.yul\":10579:10580   */\n      0x00\n        /* \"#utility.yul\":10571:10577   */\n      dup3\n        /* \"#utility.yul\":10567:10581   */\n      add\n        /* \"#utility.yul\":10560:10616   */\n      mstore\n        /* \"#utility.yul\":10443:10623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10629:10995   */\n    tag_374:\n        /* \"#utility.yul\":10771:10774   */\n      0x00\n        /* \"#utility.yul\":10792:10859   */\n      tag_497\n        /* \"#utility.yul\":10856:10858   */\n      0x1e\n        /* \"#utility.yul\":10851:10854   */\n      dup4\n        /* \"#utility.yul\":10792:10859   */\n      tag_351\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10785:10859   */\n      swap2\n      pop\n        /* \"#utility.yul\":10868:10961   */\n      tag_498\n        /* \"#utility.yul\":10957:10960   */\n      dup3\n        /* \"#utility.yul\":10868:10961   */\n      tag_373\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10986:10988   */\n      0x20\n        /* \"#utility.yul\":10981:10984   */\n      dup3\n        /* \"#utility.yul\":10977:10989   */\n      add\n        /* \"#utility.yul\":10970:10989   */\n      swap1\n      pop\n        /* \"#utility.yul\":10629:10995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11001:11420   */\n    tag_171:\n        /* \"#utility.yul\":11167:11171   */\n      0x00\n        /* \"#utility.yul\":11205:11207   */\n      0x20\n        /* \"#utility.yul\":11194:11203   */\n      dup3\n        /* \"#utility.yul\":11190:11208   */\n      add\n        /* \"#utility.yul\":11182:11208   */\n      swap1\n      pop\n        /* \"#utility.yul\":11254:11263   */\n      dup2\n        /* \"#utility.yul\":11248:11252   */\n      dup2\n        /* \"#utility.yul\":11244:11264   */\n      sub\n        /* \"#utility.yul\":11240:11241   */\n      0x00\n        /* \"#utility.yul\":11229:11238   */\n      dup4\n        /* \"#utility.yul\":11225:11242   */\n      add\n        /* \"#utility.yul\":11218:11265   */\n      mstore\n        /* \"#utility.yul\":11282:11413   */\n      tag_500\n        /* \"#utility.yul\":11408:11412   */\n      dup2\n        /* \"#utility.yul\":11282:11413   */\n      tag_374\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11274:11413   */\n      swap1\n      pop\n        /* \"#utility.yul\":11001:11420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11426:11607   */\n    tag_375:\n        /* \"#utility.yul\":11566:11599   */\n      0x4e6f206f776e6572206368616e676520726571756573742070656e64696e6700\n        /* \"#utility.yul\":11562:11563   */\n      0x00\n        /* \"#utility.yul\":11554:11560   */\n      dup3\n        /* \"#utility.yul\":11550:11564   */\n      add\n        /* \"#utility.yul\":11543:11600   */\n      mstore\n        /* \"#utility.yul\":11426:11607   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11613:11979   */\n    tag_376:\n        /* \"#utility.yul\":11755:11758   */\n      0x00\n        /* \"#utility.yul\":11776:11843   */\n      tag_503\n        /* \"#utility.yul\":11840:11842   */\n      0x1f\n        /* \"#utility.yul\":11835:11838   */\n      dup4\n        /* \"#utility.yul\":11776:11843   */\n      tag_351\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11769:11843   */\n      swap2\n      pop\n        /* \"#utility.yul\":11852:11945   */\n      tag_504\n        /* \"#utility.yul\":11941:11944   */\n      dup3\n        /* \"#utility.yul\":11852:11945   */\n      tag_375\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11970:11972   */\n      0x20\n        /* \"#utility.yul\":11965:11968   */\n      dup3\n        /* \"#utility.yul\":11961:11973   */\n      add\n        /* \"#utility.yul\":11954:11973   */\n      swap1\n      pop\n        /* \"#utility.yul\":11613:11979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11985:12404   */\n    tag_187:\n        /* \"#utility.yul\":12151:12155   */\n      0x00\n        /* \"#utility.yul\":12189:12191   */\n      0x20\n        /* \"#utility.yul\":12178:12187   */\n      dup3\n        /* \"#utility.yul\":12174:12192   */\n      add\n        /* \"#utility.yul\":12166:12192   */\n      swap1\n      pop\n        /* \"#utility.yul\":12238:12247   */\n      dup2\n        /* \"#utility.yul\":12232:12236   */\n      dup2\n        /* \"#utility.yul\":12228:12248   */\n      sub\n        /* \"#utility.yul\":12224:12225   */\n      0x00\n        /* \"#utility.yul\":12213:12222   */\n      dup4\n        /* \"#utility.yul\":12209:12226   */\n      add\n        /* \"#utility.yul\":12202:12249   */\n      mstore\n        /* \"#utility.yul\":12266:12397   */\n      tag_506\n        /* \"#utility.yul\":12392:12396   */\n      dup2\n        /* \"#utility.yul\":12266:12397   */\n      tag_376\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12258:12397   */\n      swap1\n      pop\n        /* \"#utility.yul\":11985:12404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12410:12633   */\n    tag_377:\n        /* \"#utility.yul\":12550:12584   */\n      0x4e657720646576656c6f7065722063616e6e6f74206265207a65726f20616464\n        /* \"#utility.yul\":12546:12547   */\n      0x00\n        /* \"#utility.yul\":12538:12544   */\n      dup3\n        /* \"#utility.yul\":12534:12548   */\n      add\n        /* \"#utility.yul\":12527:12585   */\n      mstore\n        /* \"#utility.yul\":12619:12625   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12614:12616   */\n      0x20\n        /* \"#utility.yul\":12606:12612   */\n      dup3\n        /* \"#utility.yul\":12602:12617   */\n      add\n        /* \"#utility.yul\":12595:12626   */\n      mstore\n        /* \"#utility.yul\":12410:12633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12639:13005   */\n    tag_378:\n        /* \"#utility.yul\":12781:12784   */\n      0x00\n        /* \"#utility.yul\":12802:12869   */\n      tag_509\n        /* \"#utility.yul\":12866:12868   */\n      0x24\n        /* \"#utility.yul\":12861:12864   */\n      dup4\n        /* \"#utility.yul\":12802:12869   */\n      tag_351\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12795:12869   */\n      swap2\n      pop\n        /* \"#utility.yul\":12878:12971   */\n      tag_510\n        /* \"#utility.yul\":12967:12970   */\n      dup3\n        /* \"#utility.yul\":12878:12971   */\n      tag_377\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12996:12998   */\n      0x40\n        /* \"#utility.yul\":12991:12994   */\n      dup3\n        /* \"#utility.yul\":12987:12999   */\n      add\n        /* \"#utility.yul\":12980:12999   */\n      swap1\n      pop\n        /* \"#utility.yul\":12639:13005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13011:13430   */\n    tag_200:\n        /* \"#utility.yul\":13177:13181   */\n      0x00\n        /* \"#utility.yul\":13215:13217   */\n      0x20\n        /* \"#utility.yul\":13204:13213   */\n      dup3\n        /* \"#utility.yul\":13200:13218   */\n      add\n        /* \"#utility.yul\":13192:13218   */\n      swap1\n      pop\n        /* \"#utility.yul\":13264:13273   */\n      dup2\n        /* \"#utility.yul\":13258:13262   */\n      dup2\n        /* \"#utility.yul\":13254:13274   */\n      sub\n        /* \"#utility.yul\":13250:13251   */\n      0x00\n        /* \"#utility.yul\":13239:13248   */\n      dup4\n        /* \"#utility.yul\":13235:13252   */\n      add\n        /* \"#utility.yul\":13228:13275   */\n      mstore\n        /* \"#utility.yul\":13292:13423   */\n      tag_512\n        /* \"#utility.yul\":13418:13422   */\n      dup2\n        /* \"#utility.yul\":13292:13423   */\n      tag_378\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13284:13423   */\n      swap1\n      pop\n        /* \"#utility.yul\":13011:13430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13436:13657   */\n    tag_379:\n        /* \"#utility.yul\":13576:13610   */\n      0x446576656c6f706572206368616e676520616c72656164792072657175657374\n        /* \"#utility.yul\":13572:13573   */\n      0x00\n        /* \"#utility.yul\":13564:13570   */\n      dup3\n        /* \"#utility.yul\":13560:13574   */\n      add\n        /* \"#utility.yul\":13553:13611   */\n      mstore\n        /* \"#utility.yul\":13645:13649   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13640:13642   */\n      0x20\n        /* \"#utility.yul\":13632:13638   */\n      dup3\n        /* \"#utility.yul\":13628:13643   */\n      add\n        /* \"#utility.yul\":13621:13650   */\n      mstore\n        /* \"#utility.yul\":13436:13657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13663:14029   */\n    tag_380:\n        /* \"#utility.yul\":13805:13808   */\n      0x00\n        /* \"#utility.yul\":13826:13893   */\n      tag_515\n        /* \"#utility.yul\":13890:13892   */\n      0x22\n        /* \"#utility.yul\":13885:13888   */\n      dup4\n        /* \"#utility.yul\":13826:13893   */\n      tag_351\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13819:13893   */\n      swap2\n      pop\n        /* \"#utility.yul\":13902:13995   */\n      tag_516\n        /* \"#utility.yul\":13991:13994   */\n      dup3\n        /* \"#utility.yul\":13902:13995   */\n      tag_379\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14020:14022   */\n      0x40\n        /* \"#utility.yul\":14015:14018   */\n      dup3\n        /* \"#utility.yul\":14011:14023   */\n      add\n        /* \"#utility.yul\":14004:14023   */\n      swap1\n      pop\n        /* \"#utility.yul\":13663:14029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14035:14454   */\n    tag_203:\n        /* \"#utility.yul\":14201:14205   */\n      0x00\n        /* \"#utility.yul\":14239:14241   */\n      0x20\n        /* \"#utility.yul\":14228:14237   */\n      dup3\n        /* \"#utility.yul\":14224:14242   */\n      add\n        /* \"#utility.yul\":14216:14242   */\n      swap1\n      pop\n        /* \"#utility.yul\":14288:14297   */\n      dup2\n        /* \"#utility.yul\":14282:14286   */\n      dup2\n        /* \"#utility.yul\":14278:14298   */\n      sub\n        /* \"#utility.yul\":14274:14275   */\n      0x00\n        /* \"#utility.yul\":14263:14272   */\n      dup4\n        /* \"#utility.yul\":14259:14276   */\n      add\n        /* \"#utility.yul\":14252:14299   */\n      mstore\n        /* \"#utility.yul\":14316:14447   */\n      tag_518\n        /* \"#utility.yul\":14442:14446   */\n      dup2\n        /* \"#utility.yul\":14316:14447   */\n      tag_380\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14308:14447   */\n      swap1\n      pop\n        /* \"#utility.yul\":14035:14454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14460:14640   */\n    tag_381:\n        /* \"#utility.yul\":14508:14585   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14505:14506   */\n      0x00\n        /* \"#utility.yul\":14498:14586   */\n      mstore\n        /* \"#utility.yul\":14605:14609   */\n      0x11\n        /* \"#utility.yul\":14602:14603   */\n      0x04\n        /* \"#utility.yul\":14595:14610   */\n      mstore\n        /* \"#utility.yul\":14629:14633   */\n      0x24\n        /* \"#utility.yul\":14626:14627   */\n      0x00\n        /* \"#utility.yul\":14619:14634   */\n      revert\n        /* \"#utility.yul\":14646:14837   */\n    tag_210:\n        /* \"#utility.yul\":14686:14689   */\n      0x00\n        /* \"#utility.yul\":14705:14725   */\n      tag_521\n        /* \"#utility.yul\":14723:14724   */\n      dup3\n        /* \"#utility.yul\":14705:14725   */\n      tag_360\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14700:14725   */\n      swap2\n      pop\n        /* \"#utility.yul\":14739:14759   */\n      tag_522\n        /* \"#utility.yul\":14757:14758   */\n      dup4\n        /* \"#utility.yul\":14739:14759   */\n      tag_360\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14734:14759   */\n      swap3\n      pop\n        /* \"#utility.yul\":14782:14783   */\n      dup3\n        /* \"#utility.yul\":14779:14780   */\n      dup3\n        /* \"#utility.yul\":14775:14784   */\n      add\n        /* \"#utility.yul\":14768:14784   */\n      swap1\n      pop\n        /* \"#utility.yul\":14803:14806   */\n      dup1\n        /* \"#utility.yul\":14800:14801   */\n      dup3\n        /* \"#utility.yul\":14797:14807   */\n      gt\n        /* \"#utility.yul\":14794:14830   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":14810:14828   */\n      tag_524\n      tag_381\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14794:14830   */\n    tag_523:\n        /* \"#utility.yul\":14646:14837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14843:15023   */\n    tag_382:\n        /* \"#utility.yul\":14983:15015   */\n      0x446576656c6f706572206368616e67652064656c6179206e6f74206d65740000\n        /* \"#utility.yul\":14979:14980   */\n      0x00\n        /* \"#utility.yul\":14971:14977   */\n      dup3\n        /* \"#utility.yul\":14967:14981   */\n      add\n        /* \"#utility.yul\":14960:15016   */\n      mstore\n        /* \"#utility.yul\":14843:15023   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15029:15395   */\n    tag_383:\n        /* \"#utility.yul\":15171:15174   */\n      0x00\n        /* \"#utility.yul\":15192:15259   */\n      tag_527\n        /* \"#utility.yul\":15256:15258   */\n      0x1e\n        /* \"#utility.yul\":15251:15254   */\n      dup4\n        /* \"#utility.yul\":15192:15259   */\n      tag_351\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15185:15259   */\n      swap2\n      pop\n        /* \"#utility.yul\":15268:15361   */\n      tag_528\n        /* \"#utility.yul\":15357:15360   */\n      dup3\n        /* \"#utility.yul\":15268:15361   */\n      tag_382\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15386:15388   */\n      0x20\n        /* \"#utility.yul\":15381:15384   */\n      dup3\n        /* \"#utility.yul\":15377:15389   */\n      add\n        /* \"#utility.yul\":15370:15389   */\n      swap1\n      pop\n        /* \"#utility.yul\":15029:15395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15401:15820   */\n    tag_213:\n        /* \"#utility.yul\":15567:15571   */\n      0x00\n        /* \"#utility.yul\":15605:15607   */\n      0x20\n        /* \"#utility.yul\":15594:15603   */\n      dup3\n        /* \"#utility.yul\":15590:15608   */\n      add\n        /* \"#utility.yul\":15582:15608   */\n      swap1\n      pop\n        /* \"#utility.yul\":15654:15663   */\n      dup2\n        /* \"#utility.yul\":15648:15652   */\n      dup2\n        /* \"#utility.yul\":15644:15664   */\n      sub\n        /* \"#utility.yul\":15640:15641   */\n      0x00\n        /* \"#utility.yul\":15629:15638   */\n      dup4\n        /* \"#utility.yul\":15625:15642   */\n      add\n        /* \"#utility.yul\":15618:15665   */\n      mstore\n        /* \"#utility.yul\":15682:15813   */\n      tag_530\n        /* \"#utility.yul\":15808:15812   */\n      dup2\n        /* \"#utility.yul\":15682:15813   */\n      tag_383\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15674:15813   */\n      swap1\n      pop\n        /* \"#utility.yul\":15401:15820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15826:16008   */\n    tag_384:\n        /* \"#utility.yul\":15966:16000   */\n      0x4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":15962:15963   */\n      0x00\n        /* \"#utility.yul\":15954:15960   */\n      dup3\n        /* \"#utility.yul\":15950:15964   */\n      add\n        /* \"#utility.yul\":15943:16001   */\n      mstore\n        /* \"#utility.yul\":15826:16008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16014:16380   */\n    tag_385:\n        /* \"#utility.yul\":16156:16159   */\n      0x00\n        /* \"#utility.yul\":16177:16244   */\n      tag_533\n        /* \"#utility.yul\":16241:16243   */\n      0x20\n        /* \"#utility.yul\":16236:16239   */\n      dup4\n        /* \"#utility.yul\":16177:16244   */\n      tag_351\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16170:16244   */\n      swap2\n      pop\n        /* \"#utility.yul\":16253:16346   */\n      tag_534\n        /* \"#utility.yul\":16342:16345   */\n      dup3\n        /* \"#utility.yul\":16253:16346   */\n      tag_384\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16371:16373   */\n      0x20\n        /* \"#utility.yul\":16366:16369   */\n      dup3\n        /* \"#utility.yul\":16362:16374   */\n      add\n        /* \"#utility.yul\":16355:16374   */\n      swap1\n      pop\n        /* \"#utility.yul\":16014:16380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16386:16805   */\n    tag_220:\n        /* \"#utility.yul\":16552:16556   */\n      0x00\n        /* \"#utility.yul\":16590:16592   */\n      0x20\n        /* \"#utility.yul\":16579:16588   */\n      dup3\n        /* \"#utility.yul\":16575:16593   */\n      add\n        /* \"#utility.yul\":16567:16593   */\n      swap1\n      pop\n        /* \"#utility.yul\":16639:16648   */\n      dup2\n        /* \"#utility.yul\":16633:16637   */\n      dup2\n        /* \"#utility.yul\":16629:16649   */\n      sub\n        /* \"#utility.yul\":16625:16626   */\n      0x00\n        /* \"#utility.yul\":16614:16623   */\n      dup4\n        /* \"#utility.yul\":16610:16627   */\n      add\n        /* \"#utility.yul\":16603:16650   */\n      mstore\n        /* \"#utility.yul\":16667:16798   */\n      tag_536\n        /* \"#utility.yul\":16793:16797   */\n      dup2\n        /* \"#utility.yul\":16667:16798   */\n      tag_385\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16659:16798   */\n      swap1\n      pop\n        /* \"#utility.yul\":16386:16805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16811:16991   */\n    tag_386:\n        /* \"#utility.yul\":16951:16983   */\n      0x4f776e6572206368616e676520616c7265616479207265717565737465640000\n        /* \"#utility.yul\":16947:16948   */\n      0x00\n        /* \"#utility.yul\":16939:16945   */\n      dup3\n        /* \"#utility.yul\":16935:16949   */\n      add\n        /* \"#utility.yul\":16928:16984   */\n      mstore\n        /* \"#utility.yul\":16811:16991   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16997:17363   */\n    tag_387:\n        /* \"#utility.yul\":17139:17142   */\n      0x00\n        /* \"#utility.yul\":17160:17227   */\n      tag_539\n        /* \"#utility.yul\":17224:17226   */\n      0x1e\n        /* \"#utility.yul\":17219:17222   */\n      dup4\n        /* \"#utility.yul\":17160:17227   */\n      tag_351\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17153:17227   */\n      swap2\n      pop\n        /* \"#utility.yul\":17236:17329   */\n      tag_540\n        /* \"#utility.yul\":17325:17328   */\n      dup3\n        /* \"#utility.yul\":17236:17329   */\n      tag_386\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17354:17356   */\n      0x20\n        /* \"#utility.yul\":17349:17352   */\n      dup3\n        /* \"#utility.yul\":17345:17357   */\n      add\n        /* \"#utility.yul\":17338:17357   */\n      swap1\n      pop\n        /* \"#utility.yul\":16997:17363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17369:17788   */\n    tag_223:\n        /* \"#utility.yul\":17535:17539   */\n      0x00\n        /* \"#utility.yul\":17573:17575   */\n      0x20\n        /* \"#utility.yul\":17562:17571   */\n      dup3\n        /* \"#utility.yul\":17558:17576   */\n      add\n        /* \"#utility.yul\":17550:17576   */\n      swap1\n      pop\n        /* \"#utility.yul\":17622:17631   */\n      dup2\n        /* \"#utility.yul\":17616:17620   */\n      dup2\n        /* \"#utility.yul\":17612:17632   */\n      sub\n        /* \"#utility.yul\":17608:17609   */\n      0x00\n        /* \"#utility.yul\":17597:17606   */\n      dup4\n        /* \"#utility.yul\":17593:17610   */\n      add\n        /* \"#utility.yul\":17586:17633   */\n      mstore\n        /* \"#utility.yul\":17650:17781   */\n      tag_542\n        /* \"#utility.yul\":17776:17780   */\n      dup2\n        /* \"#utility.yul\":17650:17781   */\n      tag_387\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17642:17781   */\n      swap1\n      pop\n        /* \"#utility.yul\":17369:17788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17794:18016   */\n    tag_388:\n        /* \"#utility.yul\":17934:17968   */\n      0x5661756c744d616e6167657220616464726573732063616e6e6f74206265207a\n        /* \"#utility.yul\":17930:17931   */\n      0x00\n        /* \"#utility.yul\":17922:17928   */\n      dup3\n        /* \"#utility.yul\":17918:17932   */\n      add\n        /* \"#utility.yul\":17911:17969   */\n      mstore\n        /* \"#utility.yul\":18003:18008   */\n      0x65726f0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17998:18000   */\n      0x20\n        /* \"#utility.yul\":17990:17996   */\n      dup3\n        /* \"#utility.yul\":17986:18001   */\n      add\n        /* \"#utility.yul\":17979:18009   */\n      mstore\n        /* \"#utility.yul\":17794:18016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18022:18388   */\n    tag_389:\n        /* \"#utility.yul\":18164:18167   */\n      0x00\n        /* \"#utility.yul\":18185:18252   */\n      tag_545\n        /* \"#utility.yul\":18249:18251   */\n      0x23\n        /* \"#utility.yul\":18244:18247   */\n      dup4\n        /* \"#utility.yul\":18185:18252   */\n      tag_351\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":18178:18252   */\n      swap2\n      pop\n        /* \"#utility.yul\":18261:18354   */\n      tag_546\n        /* \"#utility.yul\":18350:18353   */\n      dup3\n        /* \"#utility.yul\":18261:18354   */\n      tag_388\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":18379:18381   */\n      0x40\n        /* \"#utility.yul\":18374:18377   */\n      dup3\n        /* \"#utility.yul\":18370:18382   */\n      add\n        /* \"#utility.yul\":18363:18382   */\n      swap1\n      pop\n        /* \"#utility.yul\":18022:18388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18394:18813   */\n    tag_232:\n        /* \"#utility.yul\":18560:18564   */\n      0x00\n        /* \"#utility.yul\":18598:18600   */\n      0x20\n        /* \"#utility.yul\":18587:18596   */\n      dup3\n        /* \"#utility.yul\":18583:18601   */\n      add\n        /* \"#utility.yul\":18575:18601   */\n      swap1\n      pop\n        /* \"#utility.yul\":18647:18656   */\n      dup2\n        /* \"#utility.yul\":18641:18645   */\n      dup2\n        /* \"#utility.yul\":18637:18657   */\n      sub\n        /* \"#utility.yul\":18633:18634   */\n      0x00\n        /* \"#utility.yul\":18622:18631   */\n      dup4\n        /* \"#utility.yul\":18618:18635   */\n      add\n        /* \"#utility.yul\":18611:18658   */\n      mstore\n        /* \"#utility.yul\":18675:18806   */\n      tag_548\n        /* \"#utility.yul\":18801:18805   */\n      dup2\n        /* \"#utility.yul\":18675:18806   */\n      tag_389\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":18667:18806   */\n      swap1\n      pop\n        /* \"#utility.yul\":18394:18813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18819:18995   */\n    tag_390:\n        /* \"#utility.yul\":18959:18987   */\n      0x4f776e6572206368616e67652064656c6179206e6f74206d6574000000000000\n        /* \"#utility.yul\":18955:18956   */\n      0x00\n        /* \"#utility.yul\":18947:18953   */\n      dup3\n        /* \"#utility.yul\":18943:18957   */\n      add\n        /* \"#utility.yul\":18936:18988   */\n      mstore\n        /* \"#utility.yul\":18819:18995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19001:19367   */\n    tag_391:\n        /* \"#utility.yul\":19143:19146   */\n      0x00\n        /* \"#utility.yul\":19164:19231   */\n      tag_551\n        /* \"#utility.yul\":19228:19230   */\n      0x1a\n        /* \"#utility.yul\":19223:19226   */\n      dup4\n        /* \"#utility.yul\":19164:19231   */\n      tag_351\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":19157:19231   */\n      swap2\n      pop\n        /* \"#utility.yul\":19240:19333   */\n      tag_552\n        /* \"#utility.yul\":19329:19332   */\n      dup3\n        /* \"#utility.yul\":19240:19333   */\n      tag_390\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":19358:19360   */\n      0x20\n        /* \"#utility.yul\":19353:19356   */\n      dup3\n        /* \"#utility.yul\":19349:19361   */\n      add\n        /* \"#utility.yul\":19342:19361   */\n      swap1\n      pop\n        /* \"#utility.yul\":19001:19367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19373:19792   */\n    tag_243:\n        /* \"#utility.yul\":19539:19543   */\n      0x00\n        /* \"#utility.yul\":19577:19579   */\n      0x20\n        /* \"#utility.yul\":19566:19575   */\n      dup3\n        /* \"#utility.yul\":19562:19580   */\n      add\n        /* \"#utility.yul\":19554:19580   */\n      swap1\n      pop\n        /* \"#utility.yul\":19626:19635   */\n      dup2\n        /* \"#utility.yul\":19620:19624   */\n      dup2\n        /* \"#utility.yul\":19616:19636   */\n      sub\n        /* \"#utility.yul\":19612:19613   */\n      0x00\n        /* \"#utility.yul\":19601:19610   */\n      dup4\n        /* \"#utility.yul\":19597:19614   */\n      add\n        /* \"#utility.yul\":19590:19637   */\n      mstore\n        /* \"#utility.yul\":19654:19785   */\n      tag_554\n        /* \"#utility.yul\":19780:19784   */\n      dup2\n        /* \"#utility.yul\":19654:19785   */\n      tag_391\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":19646:19785   */\n      swap1\n      pop\n        /* \"#utility.yul\":19373:19792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19798:20240   */\n    tag_261:\n        /* \"#utility.yul\":19947:19951   */\n      0x00\n        /* \"#utility.yul\":19985:19987   */\n      0x60\n        /* \"#utility.yul\":19974:19983   */\n      dup3\n        /* \"#utility.yul\":19970:19988   */\n      add\n        /* \"#utility.yul\":19962:19988   */\n      swap1\n      pop\n        /* \"#utility.yul\":19998:20069   */\n      tag_556\n        /* \"#utility.yul\":20066:20067   */\n      0x00\n        /* \"#utility.yul\":20055:20064   */\n      dup4\n        /* \"#utility.yul\":20051:20068   */\n      add\n        /* \"#utility.yul\":20042:20048   */\n      dup7\n        /* \"#utility.yul\":19998:20069   */\n      tag_349\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20079:20151   */\n      tag_557\n        /* \"#utility.yul\":20147:20149   */\n      0x20\n        /* \"#utility.yul\":20136:20145   */\n      dup4\n        /* \"#utility.yul\":20132:20150   */\n      add\n        /* \"#utility.yul\":20123:20129   */\n      dup6\n        /* \"#utility.yul\":20079:20151   */\n      tag_365\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20161:20233   */\n      tag_558\n        /* \"#utility.yul\":20229:20231   */\n      0x40\n        /* \"#utility.yul\":20218:20227   */\n      dup4\n        /* \"#utility.yul\":20214:20232   */\n      add\n        /* \"#utility.yul\":20205:20211   */\n      dup5\n        /* \"#utility.yul\":20161:20233   */\n      tag_365\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19798:20240   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20246:20426   */\n    tag_325:\n        /* \"#utility.yul\":20294:20371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20291:20292   */\n      0x00\n        /* \"#utility.yul\":20284:20372   */\n      mstore\n        /* \"#utility.yul\":20391:20395   */\n      0x32\n        /* \"#utility.yul\":20388:20389   */\n      0x04\n        /* \"#utility.yul\":20381:20396   */\n      mstore\n        /* \"#utility.yul\":20415:20419   */\n      0x24\n        /* \"#utility.yul\":20412:20413   */\n      0x00\n        /* \"#utility.yul\":20405:20420   */\n      revert\n        /* \"#utility.yul\":20432:20626   */\n    tag_329:\n        /* \"#utility.yul\":20472:20476   */\n      0x00\n        /* \"#utility.yul\":20492:20512   */\n      tag_561\n        /* \"#utility.yul\":20510:20511   */\n      dup3\n        /* \"#utility.yul\":20492:20512   */\n      tag_360\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":20487:20512   */\n      swap2\n      pop\n        /* \"#utility.yul\":20526:20546   */\n      tag_562\n        /* \"#utility.yul\":20544:20545   */\n      dup4\n        /* \"#utility.yul\":20526:20546   */\n      tag_360\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":20521:20546   */\n      swap3\n      pop\n        /* \"#utility.yul\":20570:20571   */\n      dup3\n        /* \"#utility.yul\":20567:20568   */\n      dup3\n        /* \"#utility.yul\":20563:20572   */\n      sub\n        /* \"#utility.yul\":20555:20572   */\n      swap1\n      pop\n        /* \"#utility.yul\":20594:20595   */\n      dup2\n        /* \"#utility.yul\":20588:20592   */\n      dup2\n        /* \"#utility.yul\":20585:20596   */\n      gt\n        /* \"#utility.yul\":20582:20619   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":20599:20617   */\n      tag_564\n      tag_381\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":20582:20619   */\n    tag_563:\n        /* \"#utility.yul\":20432:20626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20632:20812   */\n    tag_338:\n        /* \"#utility.yul\":20680:20757   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20677:20678   */\n      0x00\n        /* \"#utility.yul\":20670:20758   */\n      mstore\n        /* \"#utility.yul\":20777:20781   */\n      0x31\n        /* \"#utility.yul\":20774:20775   */\n      0x04\n        /* \"#utility.yul\":20767:20782   */\n      mstore\n        /* \"#utility.yul\":20801:20805   */\n      0x24\n        /* \"#utility.yul\":20798:20799   */\n      0x00\n        /* \"#utility.yul\":20791:20806   */\n      revert\n\n    auxdata: 0xa26469706673582212204563d810cf716e9e405592decb62b6d71af319d9ac52b3d35c6faefd41ee487e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1026": {
									"entryPoint": null,
									"id": 1026,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_1072": {
									"entryPoint": 609,
									"id": 1072,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 659,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeUser_1203": {
									"entryPoint": 1936,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_trackUserBalance_1160": {
									"entryPoint": 861,
									"id": 1160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 414,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1399,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_385": {
									"entryPoint": 792,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8533:7",
										"nodeType": "YulBlock",
										"src": "0:8533:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											},
											{
												"body": {
													"nativeSrc": "1261:40:7",
													"nodeType": "YulBlock",
													"src": "1261:40:7",
													"statements": [
														{
															"nativeSrc": "1272:22:7",
															"nodeType": "YulAssignment",
															"src": "1272:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:7"
																},
																"nativeSrc": "1282:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:7",
														"nodeType": "YulTypedName",
														"src": "1244:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:7",
														"nodeType": "YulTypedName",
														"src": "1254:6:7",
														"type": ""
													}
												],
												"src": "1202:99:7"
											},
											{
												"body": {
													"nativeSrc": "1335:152:7",
													"nodeType": "YulBlock",
													"src": "1335:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:7"
																},
																"nativeSrc": "1345:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:7"
															},
															"nativeSrc": "1345:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nativeSrc": "1442:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:7"
															},
															"nativeSrc": "1442:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:7"
																},
																"nativeSrc": "1466:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:7"
															},
															"nativeSrc": "1466:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:7"
											},
											{
												"body": {
													"nativeSrc": "1521:152:7",
													"nodeType": "YulBlock",
													"src": "1521:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:7"
															},
															"nativeSrc": "1531:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:7"
																},
																"nativeSrc": "1628:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:7"
															},
															"nativeSrc": "1628:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:7"
															},
															"nativeSrc": "1652:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:7"
											},
											{
												"body": {
													"nativeSrc": "1730:269:7",
													"nodeType": "YulBlock",
													"src": "1730:269:7",
													"statements": [
														{
															"nativeSrc": "1740:22:7",
															"nodeType": "YulAssignment",
															"src": "1740:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:7"
																},
																"nativeSrc": "1750:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:7"
																}
															]
														},
														{
															"nativeSrc": "1771:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:7"
																},
																"nativeSrc": "1797:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:7",
																"nodeType": "YulBlock",
																"src": "1848:51:7",
																"statements": [
																	{
																		"nativeSrc": "1862:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:7"
																			},
																			"nativeSrc": "1872:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:7"
																},
																"nativeSrc": "1821:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:7"
															},
															"nativeSrc": "1818:81:7",
															"nodeType": "YulIf",
															"src": "1818:81:7"
														},
														{
															"body": {
																"nativeSrc": "1951:42:7",
																"nodeType": "YulBlock",
																"src": "1951:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:7"
																			},
																			"nativeSrc": "1965:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:7"
																		},
																		"nativeSrc": "1965:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:7"
																		},
																		"nativeSrc": "1935:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:7"
																},
																"nativeSrc": "1912:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:7"
															},
															"nativeSrc": "1909:84:7",
															"nodeType": "YulIf",
															"src": "1909:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:7",
														"nodeType": "YulTypedName",
														"src": "1714:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:7",
														"nodeType": "YulTypedName",
														"src": "1723:6:7",
														"type": ""
													}
												],
												"src": "1679:320:7"
											},
											{
												"body": {
													"nativeSrc": "2059:87:7",
													"nodeType": "YulBlock",
													"src": "2059:87:7",
													"statements": [
														{
															"nativeSrc": "2069:11:7",
															"nodeType": "YulAssignment",
															"src": "2069:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:7",
																"nodeType": "YulIdentifier",
																"src": "2077:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																},
																"nativeSrc": "2090:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:7"
															},
															"nativeSrc": "2090:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:7"
														},
														{
															"nativeSrc": "2113:26:7",
															"nodeType": "YulAssignment",
															"src": "2113:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:7"
																},
																"nativeSrc": "2121:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:7",
														"nodeType": "YulTypedName",
														"src": "2046:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:7",
														"nodeType": "YulTypedName",
														"src": "2054:4:7",
														"type": ""
													}
												],
												"src": "2005:141:7"
											},
											{
												"body": {
													"nativeSrc": "2196:49:7",
													"nodeType": "YulBlock",
													"src": "2196:49:7",
													"statements": [
														{
															"nativeSrc": "2206:33:7",
															"nodeType": "YulAssignment",
															"src": "2206:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:7"
																		},
																		"nativeSrc": "2220:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:7"
																},
																"nativeSrc": "2216:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:7",
														"nodeType": "YulTypedName",
														"src": "2179:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:7",
														"nodeType": "YulTypedName",
														"src": "2189:6:7",
														"type": ""
													}
												],
												"src": "2152:93:7"
											},
											{
												"body": {
													"nativeSrc": "2304:54:7",
													"nodeType": "YulBlock",
													"src": "2304:54:7",
													"statements": [
														{
															"nativeSrc": "2314:37:7",
															"nodeType": "YulAssignment",
															"src": "2314:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:7"
																},
																"nativeSrc": "2335:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:7",
														"nodeType": "YulTypedName",
														"src": "2279:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:7",
														"nodeType": "YulTypedName",
														"src": "2285:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:7",
														"nodeType": "YulTypedName",
														"src": "2295:8:7",
														"type": ""
													}
												],
												"src": "2251:107:7"
											},
											{
												"body": {
													"nativeSrc": "2440:317:7",
													"nodeType": "YulBlock",
													"src": "2440:317:7",
													"statements": [
														{
															"nativeSrc": "2450:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:7"
																},
																"nativeSrc": "2467:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:7"
																},
																"nativeSrc": "2506:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:7",
															"nodeType": "YulAssignment",
															"src": "2612:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:7"
																},
																"nativeSrc": "2624:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:7"
																}
															]
														},
														{
															"nativeSrc": "2672:30:7",
															"nodeType": "YulAssignment",
															"src": "2672:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:7"
																		},
																		"nativeSrc": "2692:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:7"
																},
																"nativeSrc": "2681:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:7"
																}
															]
														},
														{
															"nativeSrc": "2711:40:7",
															"nodeType": "YulAssignment",
															"src": "2711:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:7"
																		},
																		"nativeSrc": "2731:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:7"
																},
																"nativeSrc": "2721:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:7",
														"nodeType": "YulTypedName",
														"src": "2401:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:7",
														"nodeType": "YulTypedName",
														"src": "2408:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:7",
														"nodeType": "YulTypedName",
														"src": "2420:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:7",
														"nodeType": "YulTypedName",
														"src": "2433:6:7",
														"type": ""
													}
												],
												"src": "2364:393:7"
											},
											{
												"body": {
													"nativeSrc": "2808:32:7",
													"nodeType": "YulBlock",
													"src": "2808:32:7",
													"statements": [
														{
															"nativeSrc": "2818:16:7",
															"nodeType": "YulAssignment",
															"src": "2818:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:7",
																"nodeType": "YulIdentifier",
																"src": "2829:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:7",
														"nodeType": "YulTypedName",
														"src": "2790:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:7",
														"nodeType": "YulTypedName",
														"src": "2800:7:7",
														"type": ""
													}
												],
												"src": "2763:77:7"
											},
											{
												"body": {
													"nativeSrc": "2878:28:7",
													"nodeType": "YulBlock",
													"src": "2878:28:7",
													"statements": [
														{
															"nativeSrc": "2888:12:7",
															"nodeType": "YulAssignment",
															"src": "2888:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:7",
																"nodeType": "YulIdentifier",
																"src": "2895:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:7",
														"nodeType": "YulTypedName",
														"src": "2864:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:7",
														"nodeType": "YulTypedName",
														"src": "2874:3:7",
														"type": ""
													}
												],
												"src": "2846:60:7"
											},
											{
												"body": {
													"nativeSrc": "2972:82:7",
													"nodeType": "YulBlock",
													"src": "2972:82:7",
													"statements": [
														{
															"nativeSrc": "2982:66:7",
															"nodeType": "YulAssignment",
															"src": "2982:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:7"
																				},
																				"nativeSrc": "3022:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:7"
																		},
																		"nativeSrc": "3013:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:7"
																},
																"nativeSrc": "2995:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:7",
														"nodeType": "YulTypedName",
														"src": "2952:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:7",
														"nodeType": "YulTypedName",
														"src": "2962:9:7",
														"type": ""
													}
												],
												"src": "2912:142:7"
											},
											{
												"body": {
													"nativeSrc": "3107:28:7",
													"nodeType": "YulBlock",
													"src": "3107:28:7",
													"statements": [
														{
															"nativeSrc": "3117:12:7",
															"nodeType": "YulAssignment",
															"src": "3117:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:7",
																"nodeType": "YulIdentifier",
																"src": "3124:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:7",
														"nodeType": "YulTypedName",
														"src": "3093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:7",
														"nodeType": "YulTypedName",
														"src": "3103:3:7",
														"type": ""
													}
												],
												"src": "3060:75:7"
											},
											{
												"body": {
													"nativeSrc": "3217:193:7",
													"nodeType": "YulBlock",
													"src": "3217:193:7",
													"statements": [
														{
															"nativeSrc": "3227:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:7"
																},
																"nativeSrc": "3251:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:7"
																				},
																				"nativeSrc": "3340:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:7"
																				},
																				"nativeSrc": "3361:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:7"
																		},
																		"nativeSrc": "3312:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:7"
																},
																"nativeSrc": "3299:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:7"
															},
															"nativeSrc": "3299:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:7",
														"nodeType": "YulTypedName",
														"src": "3194:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:7",
														"nodeType": "YulTypedName",
														"src": "3200:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:7",
														"nodeType": "YulTypedName",
														"src": "3208:7:7",
														"type": ""
													}
												],
												"src": "3141:269:7"
											},
											{
												"body": {
													"nativeSrc": "3465:24:7",
													"nodeType": "YulBlock",
													"src": "3465:24:7",
													"statements": [
														{
															"nativeSrc": "3475:8:7",
															"nodeType": "YulAssignment",
															"src": "3475:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:7",
																"nodeType": "YulLiteral",
																"src": "3482:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:7",
														"nodeType": "YulTypedName",
														"src": "3461:3:7",
														"type": ""
													}
												],
												"src": "3416:73:7"
											},
											{
												"body": {
													"nativeSrc": "3548:136:7",
													"nodeType": "YulBlock",
													"src": "3548:136:7",
													"statements": [
														{
															"nativeSrc": "3558:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:7"
																},
																"nativeSrc": "3572:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:7",
														"nodeType": "YulTypedName",
														"src": "3534:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:7",
														"nodeType": "YulTypedName",
														"src": "3540:6:7",
														"type": ""
													}
												],
												"src": "3495:189:7"
											},
											{
												"body": {
													"nativeSrc": "3740:136:7",
													"nodeType": "YulBlock",
													"src": "3740:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:7",
																"nodeType": "YulBlock",
																"src": "3807:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:7"
																			},
																			"nativeSrc": "3821:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:7"
																		},
																		"nativeSrc": "3821:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:7"
																},
																"nativeSrc": "3757:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:7"
															},
															"nativeSrc": "3750:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:7",
																"nodeType": "YulBlock",
																"src": "3772:26:7",
																"statements": [
																	{
																		"nativeSrc": "3774:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:7"
																			},
																			"nativeSrc": "3783:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:7",
																"nodeType": "YulBlock",
																"src": "3754:2:7",
																"statements": []
															},
															"src": "3750:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:7",
														"nodeType": "YulTypedName",
														"src": "3728:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:7",
														"nodeType": "YulTypedName",
														"src": "3735:3:7",
														"type": ""
													}
												],
												"src": "3690:186:7"
											},
											{
												"body": {
													"nativeSrc": "3961:464:7",
													"nodeType": "YulBlock",
													"src": "3961:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:7",
																"nodeType": "YulBlock",
																"src": "3987:431:7",
																"statements": [
																	{
																		"nativeSrc": "4001:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:7"
																			},
																			"nativeSrc": "4017:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:7"
																					},
																					"nativeSrc": "4101:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:7"
																			},
																			"nativeSrc": "4087:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:7",
																			"nodeType": "YulBlock",
																			"src": "4288:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:7"
																			},
																			"nativeSrc": "4269:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:7"
																		},
																		"nativeSrc": "4266:49:7",
																		"nodeType": "YulIf",
																		"src": "4266:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:7"
																							},
																							"nativeSrc": "4384:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:7"
																					},
																					"nativeSrc": "4370:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:7"
																			},
																			"nativeSrc": "4328:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:7"
																		},
																		"nativeSrc": "4328:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:7"
																},
																"nativeSrc": "3975:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:7"
															},
															"nativeSrc": "3972:446:7",
															"nodeType": "YulIf",
															"src": "3972:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:7",
														"nodeType": "YulTypedName",
														"src": "3937:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:7",
														"nodeType": "YulTypedName",
														"src": "3944:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:7",
														"nodeType": "YulTypedName",
														"src": "3949:10:7",
														"type": ""
													}
												],
												"src": "3882:543:7"
											},
											{
												"body": {
													"nativeSrc": "4494:54:7",
													"nodeType": "YulBlock",
													"src": "4494:54:7",
													"statements": [
														{
															"nativeSrc": "4504:37:7",
															"nodeType": "YulAssignment",
															"src": "4504:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:7"
																},
																"nativeSrc": "4525:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:7",
														"nodeType": "YulTypedName",
														"src": "4469:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:7",
														"nodeType": "YulTypedName",
														"src": "4475:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:7",
														"nodeType": "YulTypedName",
														"src": "4485:8:7",
														"type": ""
													}
												],
												"src": "4431:117:7"
											},
											{
												"body": {
													"nativeSrc": "4605:118:7",
													"nodeType": "YulBlock",
													"src": "4605:118:7",
													"statements": [
														{
															"nativeSrc": "4615:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:7"
																				},
																				"nativeSrc": "4660:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:7"
																				},
																				"nativeSrc": "4675:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:7"
																		},
																		"nativeSrc": "4631:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:7"
																},
																"nativeSrc": "4627:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:7",
															"nodeType": "YulAssignment",
															"src": "4692:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:7"
																},
																"nativeSrc": "4702:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:7",
														"nodeType": "YulTypedName",
														"src": "4582:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:7",
														"nodeType": "YulTypedName",
														"src": "4588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:7",
														"nodeType": "YulTypedName",
														"src": "4598:6:7",
														"type": ""
													}
												],
												"src": "4554:169:7"
											},
											{
												"body": {
													"nativeSrc": "4809:214:7",
													"nodeType": "YulBlock",
													"src": "4809:214:7",
													"statements": [
														{
															"nativeSrc": "4942:37:7",
															"nodeType": "YulAssignment",
															"src": "4942:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:7"
																},
																"nativeSrc": "4950:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:7"
																}
															]
														},
														{
															"nativeSrc": "4988:29:7",
															"nodeType": "YulAssignment",
															"src": "4988:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:7"
																		},
																		"nativeSrc": "5005:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:7"
																},
																"nativeSrc": "4996:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:7",
														"nodeType": "YulTypedName",
														"src": "4790:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:7",
														"nodeType": "YulTypedName",
														"src": "4796:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:7",
														"nodeType": "YulTypedName",
														"src": "4804:4:7",
														"type": ""
													}
												],
												"src": "4728:295:7"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:7",
													"nodeType": "YulBlock",
													"src": "5120:1303:7",
													"statements": [
														{
															"nativeSrc": "5131:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:7"
																},
																"nativeSrc": "5145:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:7",
																"nodeType": "YulBlock",
																"src": "5267:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:7"
																			},
																			"nativeSrc": "5269:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:7"
																		},
																		"nativeSrc": "5269:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:7"
																},
																"nativeSrc": "5236:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:7"
															},
															"nativeSrc": "5233:56:7",
															"nodeType": "YulIf",
															"src": "5233:56:7"
														},
														{
															"nativeSrc": "5299:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:7"
																		},
																		"nativeSrc": "5339:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:7"
																},
																"nativeSrc": "5313:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:7"
																},
																"nativeSrc": "5398:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:7"
															},
															"nativeSrc": "5398:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:7"
														},
														{
															"nativeSrc": "5475:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:7",
																"nodeType": "YulLiteral",
																"src": "5492:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:7",
															"nodeType": "YulAssignment",
															"src": "5503:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:7",
																"nodeType": "YulLiteral",
																"src": "5516:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:7",
																		"nodeType": "YulBlock",
																		"src": "5567:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:7"
																							},
																							"nativeSrc": "5608:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:7"
																					},
																					"nativeSrc": "5596:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:7"
																					},
																					"nativeSrc": "5646:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:7",
																					"nodeType": "YulBlock",
																					"src": "5764:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:7"
																												},
																												"nativeSrc": "5803:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:7"
																										},
																										"nativeSrc": "5797:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:7"
																								},
																								"nativeSrc": "5782:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:7"
																							},
																							"nativeSrc": "5782:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:7"
																						},
																						{
																							"nativeSrc": "5841:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:7"
																								},
																								"nativeSrc": "5851:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:7"
																								},
																								"nativeSrc": "5895:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:7"
																					},
																					"nativeSrc": "5727:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:7"
																				},
																				"nativeSrc": "5719:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:7",
																					"nodeType": "YulBlock",
																					"src": "5742:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:7"
																								},
																								"nativeSrc": "5749:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:7",
																					"nodeType": "YulBlock",
																					"src": "5723:3:7",
																					"statements": []
																				},
																				"src": "5719:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:7",
																					"nodeType": "YulBlock",
																					"src": "5963:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:7"
																										},
																										"nativeSrc": "6004:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:7"
																								},
																								"nativeSrc": "5998:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:7"
																												},
																												"nativeSrc": "6086:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:7"
																										},
																										"nativeSrc": "6056:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:7"
																								},
																								"nativeSrc": "6041:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:7"
																							},
																							"nativeSrc": "6041:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:7"
																					},
																					"nativeSrc": "5943:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:7"
																				},
																				"nativeSrc": "5940:179:7",
																				"nodeType": "YulIf",
																				"src": "5940:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:7"
																									},
																									"nativeSrc": "6149:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:7"
																							},
																							"nativeSrc": "6145:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:7"
																					},
																					"nativeSrc": "6132:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:7"
																				},
																				"nativeSrc": "6132:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:7",
																	"nodeType": "YulCase",
																	"src": "5560:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:7",
																		"nodeType": "YulBlock",
																		"src": "6195:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:7",
																					"nodeType": "YulBlock",
																					"src": "6246:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:7"
																										},
																										"nativeSrc": "6279:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:7"
																								},
																								"nativeSrc": "6273:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:7"
																				},
																				"nativeSrc": "6236:77:7",
																				"nodeType": "YulIf",
																				"src": "6236:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:7"
																							},
																							"nativeSrc": "6339:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:7"
																					},
																					"nativeSrc": "6326:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:7"
																				},
																				"nativeSrc": "6326:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:7",
																	"nodeType": "YulCase",
																	"src": "6187:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:7"
																},
																"nativeSrc": "5537:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:7"
															},
															"nativeSrc": "5530:887:7",
															"nodeType": "YulSwitch",
															"src": "5530:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:7",
														"nodeType": "YulTypedName",
														"src": "5109:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:7",
														"nodeType": "YulTypedName",
														"src": "5115:3:7",
														"type": ""
													}
												],
												"src": "5028:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6494:53:7",
													"nodeType": "YulBlock",
													"src": "6494:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:7"
																		},
																		"nativeSrc": "6516:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:7"
																},
																"nativeSrc": "6504:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:7"
															},
															"nativeSrc": "6504:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:7",
														"nodeType": "YulTypedName",
														"src": "6482:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:7",
														"nodeType": "YulTypedName",
														"src": "6489:3:7",
														"type": ""
													}
												],
												"src": "6429:118:7"
											},
											{
												"body": {
													"nativeSrc": "6651:124:7",
													"nodeType": "YulBlock",
													"src": "6651:124:7",
													"statements": [
														{
															"nativeSrc": "6661:26:7",
															"nodeType": "YulAssignment",
															"src": "6661:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:7"
																},
																"nativeSrc": "6669:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:7"
																		},
																		"nativeSrc": "6750:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:7"
																},
																"nativeSrc": "6697:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:7"
															},
															"nativeSrc": "6697:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:7",
														"nodeType": "YulTypedName",
														"src": "6623:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:7",
														"nodeType": "YulTypedName",
														"src": "6635:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:7",
														"nodeType": "YulTypedName",
														"src": "6646:4:7",
														"type": ""
													}
												],
												"src": "6553:222:7"
											},
											{
												"body": {
													"nativeSrc": "6809:152:7",
													"nodeType": "YulBlock",
													"src": "6809:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:7"
																},
																"nativeSrc": "6819:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:7"
															},
															"nativeSrc": "6819:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:7"
																},
																"nativeSrc": "6916:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:7"
															},
															"nativeSrc": "6916:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:7"
																},
																"nativeSrc": "6940:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:7"
															},
															"nativeSrc": "6940:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:7"
											},
											{
												"body": {
													"nativeSrc": "7011:147:7",
													"nodeType": "YulBlock",
													"src": "7011:147:7",
													"statements": [
														{
															"nativeSrc": "7021:25:7",
															"nodeType": "YulAssignment",
															"src": "7021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:7"
																},
																"nativeSrc": "7026:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:7"
																}
															]
														},
														{
															"nativeSrc": "7055:25:7",
															"nodeType": "YulAssignment",
															"src": "7055:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:7"
																},
																"nativeSrc": "7060:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:7"
																}
															]
														},
														{
															"nativeSrc": "7089:16:7",
															"nodeType": "YulAssignment",
															"src": "7089:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:7"
																},
																"nativeSrc": "7096:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:7",
																"nodeType": "YulBlock",
																"src": "7129:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:7"
																			},
																			"nativeSrc": "7131:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:7"
																		},
																		"nativeSrc": "7131:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:7"
																},
																"nativeSrc": "7118:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:7"
															},
															"nativeSrc": "7115:36:7",
															"nodeType": "YulIf",
															"src": "7115:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:7",
														"nodeType": "YulTypedName",
														"src": "6998:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:7",
														"nodeType": "YulTypedName",
														"src": "7001:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:7",
														"nodeType": "YulTypedName",
														"src": "7007:3:7",
														"type": ""
													}
												],
												"src": "6967:191:7"
											},
											{
												"body": {
													"nativeSrc": "7229:53:7",
													"nodeType": "YulBlock",
													"src": "7229:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:7"
																		},
																		"nativeSrc": "7251:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:7"
																},
																"nativeSrc": "7239:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:7"
															},
															"nativeSrc": "7239:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:7",
														"nodeType": "YulTypedName",
														"src": "7217:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:7",
														"nodeType": "YulTypedName",
														"src": "7224:3:7",
														"type": ""
													}
												],
												"src": "7164:118:7"
											},
											{
												"body": {
													"nativeSrc": "7442:288:7",
													"nodeType": "YulBlock",
													"src": "7442:288:7",
													"statements": [
														{
															"nativeSrc": "7452:26:7",
															"nodeType": "YulAssignment",
															"src": "7452:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:7"
																},
																"nativeSrc": "7460:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:7"
																		},
																		"nativeSrc": "7541:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:7"
																},
																"nativeSrc": "7488:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:7"
															},
															"nativeSrc": "7488:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:7"
																		},
																		"nativeSrc": "7622:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:7"
																},
																"nativeSrc": "7569:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:7"
															},
															"nativeSrc": "7569:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:7"
																		},
																		"nativeSrc": "7704:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:7"
																},
																"nativeSrc": "7651:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:7"
															},
															"nativeSrc": "7651:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:7",
														"nodeType": "YulTypedName",
														"src": "7398:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:7",
														"nodeType": "YulTypedName",
														"src": "7410:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:7",
														"nodeType": "YulTypedName",
														"src": "7418:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:7",
														"nodeType": "YulTypedName",
														"src": "7426:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:7",
														"nodeType": "YulTypedName",
														"src": "7437:4:7",
														"type": ""
													}
												],
												"src": "7288:442:7"
											},
											{
												"body": {
													"nativeSrc": "7834:124:7",
													"nodeType": "YulBlock",
													"src": "7834:124:7",
													"statements": [
														{
															"nativeSrc": "7844:26:7",
															"nodeType": "YulAssignment",
															"src": "7844:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:7"
																},
																"nativeSrc": "7852:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:7"
																		},
																		"nativeSrc": "7933:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:7"
																},
																"nativeSrc": "7880:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:7"
															},
															"nativeSrc": "7880:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:7",
														"nodeType": "YulTypedName",
														"src": "7806:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:7",
														"nodeType": "YulTypedName",
														"src": "7818:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:7",
														"nodeType": "YulTypedName",
														"src": "7829:4:7",
														"type": ""
													}
												],
												"src": "7736:222:7"
											},
											{
												"body": {
													"nativeSrc": "7992:152:7",
													"nodeType": "YulBlock",
													"src": "7992:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8009:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8009:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8012:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8012:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8002:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:7"
																},
																"nativeSrc": "8002:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8002:88:7"
															},
															"nativeSrc": "8002:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8002:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8106:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8106:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8109:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8109:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8099:6:7"
																},
																"nativeSrc": "8099:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8099:15:7"
															},
															"nativeSrc": "8099:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8099:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8130:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8130:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8133:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8133:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8123:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:7"
																},
																"nativeSrc": "8123:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8123:15:7"
															},
															"nativeSrc": "8123:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8123:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7964:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7964:180:7"
											},
											{
												"body": {
													"nativeSrc": "8195:149:7",
													"nodeType": "YulBlock",
													"src": "8195:149:7",
													"statements": [
														{
															"nativeSrc": "8205:25:7",
															"nodeType": "YulAssignment",
															"src": "8205:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8228:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8228:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8210:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8210:17:7"
																},
																"nativeSrc": "8210:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8210:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8205:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8205:1:7"
																}
															]
														},
														{
															"nativeSrc": "8239:25:7",
															"nodeType": "YulAssignment",
															"src": "8239:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8262:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8262:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8244:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8244:17:7"
																},
																"nativeSrc": "8244:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8244:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8239:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8239:1:7"
																}
															]
														},
														{
															"nativeSrc": "8273:17:7",
															"nodeType": "YulAssignment",
															"src": "8273:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8285:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8285:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8288:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8288:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8281:3:7"
																},
																"nativeSrc": "8281:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8281:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8273:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8273:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8315:22:7",
																"nodeType": "YulBlock",
																"src": "8315:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8317:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8317:16:7"
																			},
																			"nativeSrc": "8317:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8317:18:7"
																		},
																		"nativeSrc": "8317:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8317:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8306:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8306:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8312:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8312:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8303:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8303:2:7"
																},
																"nativeSrc": "8303:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8303:11:7"
															},
															"nativeSrc": "8300:37:7",
															"nodeType": "YulIf",
															"src": "8300:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8150:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8181:1:7",
														"nodeType": "YulTypedName",
														"src": "8181:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8184:1:7",
														"nodeType": "YulTypedName",
														"src": "8184:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8190:4:7",
														"nodeType": "YulTypedName",
														"src": "8190:4:7",
														"type": ""
													}
												],
												"src": "8150:194:7"
											},
											{
												"body": {
													"nativeSrc": "8378:152:7",
													"nodeType": "YulBlock",
													"src": "8378:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8395:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8395:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8398:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8398:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8388:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8388:6:7"
																},
																"nativeSrc": "8388:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8388:88:7"
															},
															"nativeSrc": "8388:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8388:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8492:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8495:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8495:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8485:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:7"
																},
																"nativeSrc": "8485:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8485:15:7"
															},
															"nativeSrc": "8485:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8485:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8516:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8516:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8519:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8519:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8509:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8509:6:7"
																},
																"nativeSrc": "8509:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8509:15:7"
															},
															"nativeSrc": "8509:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8509:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "8350:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8350:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3840 CODESIZE SUB DUP1 PUSH2 0x3840 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x96E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E415349434F494E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E41534943000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x19E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP CALLER PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x198 CALLER PUSH8 0x1BC16D674EC80000 PUSH2 0x261 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE17 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x271 DUP3 DUP3 PUSH2 0x293 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x28F DUP3 PUSH2 0x284 DUP5 PUSH2 0x318 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x35D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x303 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x314 PUSH0 DUP4 DUP4 PUSH2 0x577 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3B3 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x472 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x531 JUMP JUMPDEST PUSH0 DUP2 EQ DUP1 ISZERO PUSH2 0x4C7 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x530 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x52F DUP3 PUSH2 0x790 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x650 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x726 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x90C JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7CD JUMPI PUSH2 0x7CC PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FF JUMPI PUSH1 0x8 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x824 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0xD8A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0xDEA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x90C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x795 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93D DUP3 PUSH2 0x914 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94D DUP2 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x957 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x968 DUP2 PUSH2 0x944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x983 JUMPI PUSH2 0x982 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x990 DUP5 DUP3 DUP6 ADD PUSH2 0x95A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA14 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA27 JUMPI PUSH2 0xA26 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xA89 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA4E JUMP JUMPDEST PUSH2 0xA93 DUP7 DUP4 PUSH2 0xA4E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD7 PUSH2 0xAD2 PUSH2 0xACD DUP5 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF0 DUP4 PUSH2 0xABD JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFC DUP3 PUSH2 0xADE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA5A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1B PUSH2 0xB0C JUMP JUMPDEST PUSH2 0xB26 DUP2 DUP5 DUP5 PUSH2 0xAE7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB3E PUSH0 DUP3 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB2C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB8E JUMPI PUSH2 0xB5F DUP2 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0xB68 DUP5 PUSH2 0xA3F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB77 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB8B PUSH2 0xB83 DUP6 PUSH2 0xA3F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB2B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB93 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBC6 DUP4 DUP4 PUSH2 0xB9F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBDF DUP3 PUSH2 0x999 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0x9A3 JUMP JUMPDEST JUMPDEST PUSH2 0xC02 DUP3 SLOAD PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xC0D DUP3 DUP3 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC3E JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC2C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC36 DUP6 DUP3 PUSH2 0xBBB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC4C DUP7 PUSH2 0xA2D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC73 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC4E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC90 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC8C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB9F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0x933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD04 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0xD0F DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xD26 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD36 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4F PUSH0 DUP4 ADD DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xD5C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD84 PUSH0 DUP4 ADD DUP5 PUSH2 0xD2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC1 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP2 POP PUSH2 0xDCC DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A1C DUP1 PUSH2 0xE24 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88DACBCC GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xDD940CB5 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xE9C559A9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x518 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xB543503E EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xB9C28D29 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xCA4B208B EQ PUSH2 0x4A2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x9E12279D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xA67A91E3 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA86C8374 EQ PUSH2 0x41C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x88DACBCC EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BA JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2B7DF804 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x47734892 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x388 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2B7DF804 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EE JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x282 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH3 0xCE8E3E EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x5069F22 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x67453A6 EQ PUSH2 0x20C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D8 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F8 PUSH2 0x11EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x502 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x13F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x56C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCCD8C9D5857ED509892CB6BA9A608F25FA4CFED016A475A02E39837F019461CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x752 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DD PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x7EA DUP2 DUP6 DUP6 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x808 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x815 DUP6 DUP3 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x820 DUP6 DUP6 DUP6 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF DUP3 DUP3 PUSH2 0x155C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x97F PUSH0 PUSH2 0x1603 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x989 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD GT PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71929BFC41C49AE5E05A53003B97907866C902F9807734CE3A0507BFDAE425F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAB5 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE1 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA3 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11D251823298414F86A55EE989C577145357724264D4F6D10632F865A55488FB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xC9C PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH1 0xE SLOAD GT PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xE SLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2A SWAP1 PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE823578BE672EBCFC6A23FCE5293A8769DD2449C1AE45D769B8BA0FC3435625F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD SLOAD EQ PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE4D82E46D7A4A49D024ED3CDF35530213F02413245E7BF0D20121174C089E0D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1051 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x105E DUP2 DUP6 DUP6 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1071 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD SLOAD GT PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xD SLOAD PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP1 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x131D PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x134D DUP2 PUSH2 0x1603 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1479 DUP2 PUSH2 0x1603 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A0 DUP5 DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1522 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1521 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x16C6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1533 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x1545 DUP4 PUSH2 0x1540 DUP6 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1557 DUP3 PUSH2 0x1552 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1566 DUP3 DUP3 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x1578 DUP3 PUSH2 0x1573 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1584 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A2 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1601 JUMPI PUSH2 0x15C5 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1736 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172D SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179D SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x188F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1975 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1980 DUP4 DUP4 DUP4 PUSH2 0x1C18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x19DB JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1A9A JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B53 JUMP JUMPDEST PUSH0 DUP2 EQ DUP1 ISZERO PUSH2 0x1AEF JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B52 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B51 DUP3 PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C14 PUSH0 DUP4 DUP4 PUSH2 0x1C18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C68 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D36 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DC7 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E24 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1FAD JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA0 JUMPI PUSH1 0x8 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x1EC5 SWAP2 SWAP1 PUSH2 0x2986 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x29B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1FAD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1E36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2024 DUP4 DUP4 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2046 DUP3 PUSH2 0x1FB1 JUMP JUMPDEST PUSH2 0x2050 DUP2 DUP6 PUSH2 0x1FBB JUMP JUMPDEST SWAP4 POP PUSH2 0x205B DUP4 PUSH2 0x1FCB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x208B JUMPI DUP2 MLOAD PUSH2 0x2072 DUP9 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP8 POP PUSH2 0x207D DUP4 PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x205E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B0 DUP2 DUP5 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20DA PUSH0 DUP4 ADD DUP5 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2122 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0x212C DUP2 DUP6 PUSH2 0x20EA JUMP JUMPDEST SWAP4 POP PUSH2 0x213C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2145 DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2168 DUP2 DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x217D DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2198 DUP2 PUSH2 0x2174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x219E JUMP JUMPDEST DUP2 EQ PUSH2 0x21BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x21A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2223 DUP2 PUSH2 0x220F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP5 PUSH2 0x221A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x219E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2264 PUSH0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228E DUP7 DUP3 DUP8 ADD PUSH2 0x218A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x229F DUP7 DUP3 DUP8 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x22BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2303 JUMPI PUSH2 0x2302 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2310 DUP5 DUP3 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232F JUMPI PUSH2 0x232E PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x233C DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x234D DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742074686520646576656C6F7065720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238B PUSH1 0x1B DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20646576656C6F706572206368616E676520726571756573742070656E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2419 PUSH1 0x23 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2446 DUP2 PUSH2 0x240D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2491 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x244D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865205661756C744D616E616765720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206F776E6572206368616E676520726571756573742070656E64696E6700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2546 PUSH1 0x1F DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2551 DUP3 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2573 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720646576656C6F7065722063616E6E6F74206265207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D4 PUSH1 0x24 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x25DF DUP3 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2601 DUP2 PUSH2 0x25C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446576656C6F706572206368616E676520616C72656164792072657175657374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2662 PUSH1 0x22 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x266D DUP3 PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x268F DUP2 PUSH2 0x2656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26CD DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x26D8 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x2696 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446576656C6F706572206368616E67652064656C6179206E6F74206D65740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272A PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2735 DUP3 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2792 PUSH1 0x20 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27BF DUP2 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206368616E676520616C7265616479207265717565737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27FA PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2805 DUP3 PUSH2 0x27C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2827 DUP2 PUSH2 0x27EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C744D616E6167657220616464726573732063616E6E6F74206265207A PUSH0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2888 PUSH1 0x23 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2893 DUP3 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B5 DUP2 PUSH2 0x287C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206368616E67652064656C6179206E6F74206D6574000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28F0 PUSH1 0x1A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x28FB DUP3 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x291D DUP2 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2937 PUSH0 DUP4 ADD DUP7 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2951 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2990 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x299B DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29B3 JUMPI PUSH2 0x29B2 PUSH2 0x2696 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT PUSH4 0xD810CF71 PUSH15 0x9E405592DECB62B6D71AF319D9AC52 0xB3 0xD3 TLOAD PUSH16 0xAEFD41EE487E64736F6C634300081C00 CALLER ",
							"sourceMap": "540:7687:6:-:0;;;1938:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2007:12;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2094:10:6::2;2082:9;;:22;;;;;;;;;;;;;;;;;;2159:33;2165:10;640;2159:5;;;:33;;:::i;:::-;1938:261:::0;540:7687;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2743:167:6:-;2819:28;2831:7;2840:6;2819:11;;;:28;;:::i;:::-;2857:46;2875:7;2884:18;2894:7;2884:9;;;:18;;:::i;:::-;2857:17;;;:46;;:::i;:::-;2743:167;;:::o;7466:216:2:-;7563:1;7544:21;;:7;:21;;;7540:91;;7617:1;7588:32;;;;;;;;;;;:::i;:::-;;;;;;;;7540:91;7640:35;7656:1;7660:7;7669:5;7640:7;;;:35;;:::i;:::-;7466:216;;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;3465:361:6:-;3556:1;3546:7;:11;:32;;;;;3562:10;:16;3573:4;3562:16;;;;;;;;;;;;;;;;;;;;;;;;;3561:17;3546:32;3542:240;;;3613:4;3594:10;:16;3605:4;3594:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3631:5;3642:4;3631:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3542:240;;;3679:1;3668:7;:12;:32;;;;;3684:10;:16;3695:4;3684:16;;;;;;;;;;;;;;;;;;;;;;;;;3668:32;3664:118;;;3735:5;3716:10;:16;3727:4;3716:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3754:17;3766:4;3754:11;;;:17;;:::i;:::-;3664:118;3542:240;3812:7;3791:12;:18;3804:4;3791:18;;;;;;;;;;;;;;;:28;;;;3465:361;;:::o;6016:1107:2:-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;3895:322:6:-;3954:9;3966:1;3954:13;;3949:262;3973:5;:12;;;;3969:1;:16;3949:262;;;4022:4;4010:16;;:5;4016:1;4010:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:16;;;4006:195;;4057:5;4078:1;4063:5;:12;;;;:16;;;;:::i;:::-;4057:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4046:5;4052:1;4046:8;;;;;;;;:::i;:::-;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;4128:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4181:5;;4006:195;3987:3;;;;;;;3949:262;;;;3895:322;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;7964:180::-;8012:77;8009:1;8002:88;8109:4;8106:1;8099:15;8133:4;8130:1;8123:15;8150:194;8190:4;8210:20;8228:1;8210:20;:::i;:::-;8205:25;;8244:20;8262:1;8244:20;:::i;:::-;8239:25;;8288:1;8285;8281:9;8273:17;;8312:1;8306:4;8303:11;8300:37;;;8317:18;;:::i;:::-;8300:37;8150:194;;;;:::o;8350:180::-;8398:77;8395:1;8388:88;8495:4;8492:1;8485:15;8519:4;8516:1;8509:15;540:7687:6;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INITIAL_SUPPLY_949": {
									"entryPoint": 2098,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 5251,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5830,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5500,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1072": {
									"entryPoint": 5468,
									"id": 1072,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 7065,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5244,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeUser_1203": {
									"entryPoint": 7729,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 5269,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_trackUserBalance_1160": {
									"entryPoint": 6533,
									"id": 1160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5635,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1105": {
									"entryPoint": 5416,
									"id": 1105,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 6293,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 7192,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 4460,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 2003,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2345,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cancelDeveloperChange_1464": {
									"entryPoint": 1508,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancelOwnerChange_1340": {
									"entryPoint": 2433,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1036": {
									"entryPoint": 2110,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@developerChangeRequestTime_972": {
									"entryPoint": 5106,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@developer_962": {
									"entryPoint": 4423,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalizeDeveloperChange_1516": {
									"entryPoint": 3220,
									"id": 1516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalizeOwnerChange_1393": {
									"entryPoint": 4590,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserBalance_1224": {
									"entryPoint": 2275,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUsers_1212": {
									"entryPoint": 1332,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1269": {
									"entryPoint": 2118,
									"id": 1269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1859,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerChangeRequestTime_970": {
									"entryPoint": 2092,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2686,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingNewDeveloper_968": {
									"entryPoint": 4386,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pendingNewOwner_966": {
									"entryPoint": 1471,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2414,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestDeveloperChange_1434": {
									"entryPoint": 2870,
									"id": 1434,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@requestOwnerChange_1310": {
									"entryPoint": 3682,
									"id": 1310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVaultManager_1247": {
									"entryPoint": 4201,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2726,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 2037,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2046,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5112,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 4167,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vaultManager_964": {
									"entryPoint": 2649,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10532,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90": {
									"entryPoint": 10286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30": {
									"entryPoint": 9047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4": {
									"entryPoint": 10428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816": {
									"entryPoint": 9736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592": {
									"entryPoint": 9974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c": {
									"entryPoint": 9594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d": {
									"entryPoint": 10182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20815:7",
										"nodeType": "YulBlock",
										"src": "0:20815:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "81:40:7",
													"nodeType": "YulBlock",
													"src": "81:40:7",
													"statements": [
														{
															"nativeSrc": "92:22:7",
															"nodeType": "YulAssignment",
															"src": "92:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "108:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "108:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "102:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "102:5:7"
																},
																"nativeSrc": "102:12:7",
																"nodeType": "YulFunctionCall",
																"src": "102:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "92:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "92:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "74:6:7",
														"nodeType": "YulTypedName",
														"src": "74:6:7",
														"type": ""
													}
												],
												"src": "7:114:7"
											},
											{
												"body": {
													"nativeSrc": "238:73:7",
													"nodeType": "YulBlock",
													"src": "238:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "255:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "255:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "260:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "260:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:7"
																},
																"nativeSrc": "248:19:7",
																"nodeType": "YulFunctionCall",
																"src": "248:19:7"
															},
															"nativeSrc": "248:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "248:19:7"
														},
														{
															"nativeSrc": "276:29:7",
															"nodeType": "YulAssignment",
															"src": "276:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "295:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "295:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "300:4:7",
																		"nodeType": "YulLiteral",
																		"src": "300:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:7"
																},
																"nativeSrc": "291:14:7",
																"nodeType": "YulFunctionCall",
																"src": "291:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "276:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "276:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "127:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "210:3:7",
														"nodeType": "YulTypedName",
														"src": "210:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "215:6:7",
														"nodeType": "YulTypedName",
														"src": "215:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "226:11:7",
														"nodeType": "YulTypedName",
														"src": "226:11:7",
														"type": ""
													}
												],
												"src": "127:184:7"
											},
											{
												"body": {
													"nativeSrc": "389:60:7",
													"nodeType": "YulBlock",
													"src": "389:60:7",
													"statements": [
														{
															"nativeSrc": "399:11:7",
															"nodeType": "YulAssignment",
															"src": "399:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "407:3:7",
																"nodeType": "YulIdentifier",
																"src": "407:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "399:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:4:7"
																}
															]
														},
														{
															"nativeSrc": "420:22:7",
															"nodeType": "YulAssignment",
															"src": "420:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "432:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "432:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "437:4:7",
																		"nodeType": "YulLiteral",
																		"src": "437:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:7"
																},
																"nativeSrc": "428:14:7",
																"nodeType": "YulFunctionCall",
																"src": "428:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "317:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "376:3:7",
														"nodeType": "YulTypedName",
														"src": "376:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "384:4:7",
														"nodeType": "YulTypedName",
														"src": "384:4:7",
														"type": ""
													}
												],
												"src": "317:132:7"
											},
											{
												"body": {
													"nativeSrc": "500:81:7",
													"nodeType": "YulBlock",
													"src": "500:81:7",
													"statements": [
														{
															"nativeSrc": "510:65:7",
															"nodeType": "YulAssignment",
															"src": "510:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "525:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "525:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:42:7",
																		"nodeType": "YulLiteral",
																		"src": "532:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:7"
																},
																"nativeSrc": "521:54:7",
																"nodeType": "YulFunctionCall",
																"src": "521:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "510:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "510:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "455:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "482:5:7",
														"nodeType": "YulTypedName",
														"src": "482:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "492:7:7",
														"nodeType": "YulTypedName",
														"src": "492:7:7",
														"type": ""
													}
												],
												"src": "455:126:7"
											},
											{
												"body": {
													"nativeSrc": "632:51:7",
													"nodeType": "YulBlock",
													"src": "632:51:7",
													"statements": [
														{
															"nativeSrc": "642:35:7",
															"nodeType": "YulAssignment",
															"src": "642:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "653:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:7"
																},
																"nativeSrc": "653:24:7",
																"nodeType": "YulFunctionCall",
																"src": "653:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "587:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:7",
														"nodeType": "YulTypedName",
														"src": "614:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:7",
														"nodeType": "YulTypedName",
														"src": "624:7:7",
														"type": ""
													}
												],
												"src": "587:96:7"
											},
											{
												"body": {
													"nativeSrc": "744:53:7",
													"nodeType": "YulBlock",
													"src": "744:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "761:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "761:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "784:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "784:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "766:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "766:17:7"
																		},
																		"nativeSrc": "766:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "766:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:7"
																},
																"nativeSrc": "754:37:7",
																"nodeType": "YulFunctionCall",
																"src": "754:37:7"
															},
															"nativeSrc": "754:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "754:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "689:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:7",
														"nodeType": "YulTypedName",
														"src": "732:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "739:3:7",
														"nodeType": "YulTypedName",
														"src": "739:3:7",
														"type": ""
													}
												],
												"src": "689:108:7"
											},
											{
												"body": {
													"nativeSrc": "883:99:7",
													"nodeType": "YulBlock",
													"src": "883:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "927:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "935:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "935:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "893:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "893:33:7"
																},
																"nativeSrc": "893:46:7",
																"nodeType": "YulFunctionCall",
																"src": "893:46:7"
															},
															"nativeSrc": "893:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "893:46:7"
														},
														{
															"nativeSrc": "948:28:7",
															"nodeType": "YulAssignment",
															"src": "948:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "966:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "966:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "971:4:7",
																		"nodeType": "YulLiteral",
																		"src": "971:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "962:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "962:3:7"
																},
																"nativeSrc": "962:14:7",
																"nodeType": "YulFunctionCall",
																"src": "962:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "948:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "948:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "803:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "856:6:7",
														"nodeType": "YulTypedName",
														"src": "856:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "864:3:7",
														"nodeType": "YulTypedName",
														"src": "864:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "872:10:7",
														"nodeType": "YulTypedName",
														"src": "872:10:7",
														"type": ""
													}
												],
												"src": "803:179:7"
											},
											{
												"body": {
													"nativeSrc": "1063:38:7",
													"nodeType": "YulBlock",
													"src": "1063:38:7",
													"statements": [
														{
															"nativeSrc": "1073:22:7",
															"nodeType": "YulAssignment",
															"src": "1073:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1085:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1085:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1090:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1081:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:7"
																},
																"nativeSrc": "1081:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1081:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "1073:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1073:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "988:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:7",
														"nodeType": "YulTypedName",
														"src": "1050:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "1058:4:7",
														"nodeType": "YulTypedName",
														"src": "1058:4:7",
														"type": ""
													}
												],
												"src": "988:113:7"
											},
											{
												"body": {
													"nativeSrc": "1261:608:7",
													"nodeType": "YulBlock",
													"src": "1261:608:7",
													"statements": [
														{
															"nativeSrc": "1271:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1271:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1333:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1333:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "1285:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "1285:47:7"
																},
																"nativeSrc": "1285:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1285:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1275:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1348:93:7",
															"nodeType": "YulAssignment",
															"src": "1348:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1429:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1434:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "1355:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "1355:73:7"
																},
																"nativeSrc": "1355:86:7",
																"nodeType": "YulFunctionCall",
																"src": "1355:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:7"
																}
															]
														},
														{
															"nativeSrc": "1450:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1450:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1515:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "1465:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "1465:49:7"
																},
																"nativeSrc": "1465:56:7",
																"nodeType": "YulFunctionCall",
																"src": "1465:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "1454:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1454:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1530:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "1544:7:7",
																"nodeType": "YulIdentifier",
																"src": "1544:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1534:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1534:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1620:224:7",
																"nodeType": "YulBlock",
																"src": "1620:224:7",
																"statements": [
																	{
																		"nativeSrc": "1634:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1634:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1661:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1661:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1655:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1655:5:7"
																			},
																			"nativeSrc": "1655:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1655:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "1638:13:7",
																				"nodeType": "YulTypedName",
																				"src": "1638:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1681:70:7",
																		"nodeType": "YulAssignment",
																		"src": "1681:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "1732:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "1732:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "1747:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "1688:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "1688:43:7"
																			},
																			"nativeSrc": "1688:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1688:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1681:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1681:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1764:70:7",
																		"nodeType": "YulAssignment",
																		"src": "1764:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1827:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "1774:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "1774:52:7"
																			},
																			"nativeSrc": "1774:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1774:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1764:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1582:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1582:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1585:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1585:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1579:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1579:2:7"
																},
																"nativeSrc": "1579:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1579:13:7"
															},
															"nativeSrc": "1560:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1593:18:7",
																"nodeType": "YulBlock",
																"src": "1593:18:7",
																"statements": [
																	{
																		"nativeSrc": "1595:14:7",
																		"nodeType": "YulAssignment",
																		"src": "1595:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1604:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "1604:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1607:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1600:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1600:3:7"
																			},
																			"nativeSrc": "1600:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1600:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "1595:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1564:14:7",
																"nodeType": "YulBlock",
																"src": "1564:14:7",
																"statements": [
																	{
																		"nativeSrc": "1566:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1566:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1575:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1575:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "1570:1:7",
																				"nodeType": "YulTypedName",
																				"src": "1570:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1560:284:7"
														},
														{
															"nativeSrc": "1853:10:7",
															"nodeType": "YulAssignment",
															"src": "1853:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "1860:3:7",
																"nodeType": "YulIdentifier",
																"src": "1860:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1137:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1240:5:7",
														"nodeType": "YulTypedName",
														"src": "1240:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1247:3:7",
														"nodeType": "YulTypedName",
														"src": "1247:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1256:3:7",
														"nodeType": "YulTypedName",
														"src": "1256:3:7",
														"type": ""
													}
												],
												"src": "1137:732:7"
											},
											{
												"body": {
													"nativeSrc": "2023:225:7",
													"nodeType": "YulBlock",
													"src": "2023:225:7",
													"statements": [
														{
															"nativeSrc": "2033:26:7",
															"nodeType": "YulAssignment",
															"src": "2033:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2045:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2056:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2041:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:7"
																},
																"nativeSrc": "2041:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2041:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2033:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2033:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2080:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2091:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2091:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2076:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:7"
																		},
																		"nativeSrc": "2076:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2076:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2099:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2099:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2105:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2105:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2095:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:7"
																		},
																		"nativeSrc": "2095:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2095:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:7"
																},
																"nativeSrc": "2069:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2069:47:7"
															},
															"nativeSrc": "2069:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2069:47:7"
														},
														{
															"nativeSrc": "2125:116:7",
															"nodeType": "YulAssignment",
															"src": "2125:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2227:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2236:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "2133:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "2133:93:7"
																},
																"nativeSrc": "2133:108:7",
																"nodeType": "YulFunctionCall",
																"src": "2133:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2125:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1875:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1995:9:7",
														"nodeType": "YulTypedName",
														"src": "1995:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2007:6:7",
														"nodeType": "YulTypedName",
														"src": "2007:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2018:4:7",
														"nodeType": "YulTypedName",
														"src": "2018:4:7",
														"type": ""
													}
												],
												"src": "1875:373:7"
											},
											{
												"body": {
													"nativeSrc": "2319:53:7",
													"nodeType": "YulBlock",
													"src": "2319:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2336:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2359:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2359:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2341:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2341:17:7"
																		},
																		"nativeSrc": "2341:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2341:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2329:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:7"
																},
																"nativeSrc": "2329:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2329:37:7"
															},
															"nativeSrc": "2329:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2329:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2254:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2307:5:7",
														"nodeType": "YulTypedName",
														"src": "2307:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2314:3:7",
														"nodeType": "YulTypedName",
														"src": "2314:3:7",
														"type": ""
													}
												],
												"src": "2254:118:7"
											},
											{
												"body": {
													"nativeSrc": "2476:124:7",
													"nodeType": "YulBlock",
													"src": "2476:124:7",
													"statements": [
														{
															"nativeSrc": "2486:26:7",
															"nodeType": "YulAssignment",
															"src": "2486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2494:3:7"
																},
																"nativeSrc": "2494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2566:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2566:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2590:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2590:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2575:3:7"
																		},
																		"nativeSrc": "2575:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2575:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2522:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2522:43:7"
																},
																"nativeSrc": "2522:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2522:71:7"
															},
															"nativeSrc": "2522:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2522:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2378:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2448:9:7",
														"nodeType": "YulTypedName",
														"src": "2448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2460:6:7",
														"nodeType": "YulTypedName",
														"src": "2460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2471:4:7",
														"nodeType": "YulTypedName",
														"src": "2471:4:7",
														"type": ""
													}
												],
												"src": "2378:222:7"
											},
											{
												"body": {
													"nativeSrc": "2665:40:7",
													"nodeType": "YulBlock",
													"src": "2665:40:7",
													"statements": [
														{
															"nativeSrc": "2676:22:7",
															"nodeType": "YulAssignment",
															"src": "2676:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2692:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2686:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2686:5:7"
																},
																"nativeSrc": "2686:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2686:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2606:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2648:5:7",
														"nodeType": "YulTypedName",
														"src": "2648:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2658:6:7",
														"nodeType": "YulTypedName",
														"src": "2658:6:7",
														"type": ""
													}
												],
												"src": "2606:99:7"
											},
											{
												"body": {
													"nativeSrc": "2807:73:7",
													"nodeType": "YulBlock",
													"src": "2807:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2824:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2824:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2829:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2817:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:7"
																},
																"nativeSrc": "2817:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2817:19:7"
															},
															"nativeSrc": "2817:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2817:19:7"
														},
														{
															"nativeSrc": "2845:29:7",
															"nodeType": "YulAssignment",
															"src": "2845:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2864:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2864:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2869:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2869:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2860:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2860:3:7"
																},
																"nativeSrc": "2860:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2860:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2845:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2845:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2711:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2779:3:7",
														"nodeType": "YulTypedName",
														"src": "2779:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2784:6:7",
														"nodeType": "YulTypedName",
														"src": "2784:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2795:11:7",
														"nodeType": "YulTypedName",
														"src": "2795:11:7",
														"type": ""
													}
												],
												"src": "2711:169:7"
											},
											{
												"body": {
													"nativeSrc": "2948:77:7",
													"nodeType": "YulBlock",
													"src": "2948:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2965:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2965:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2970:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2975:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2975:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2959:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2959:5:7"
																},
																"nativeSrc": "2959:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2959:23:7"
															},
															"nativeSrc": "2959:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2959:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3002:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3002:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3007:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2998:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:7"
																		},
																		"nativeSrc": "2998:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2998:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3016:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3016:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:7"
																},
																"nativeSrc": "2991:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2991:27:7"
															},
															"nativeSrc": "2991:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2991:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2886:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2930:3:7",
														"nodeType": "YulTypedName",
														"src": "2930:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2935:3:7",
														"nodeType": "YulTypedName",
														"src": "2935:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2940:6:7",
														"nodeType": "YulTypedName",
														"src": "2940:6:7",
														"type": ""
													}
												],
												"src": "2886:139:7"
											},
											{
												"body": {
													"nativeSrc": "3079:54:7",
													"nodeType": "YulBlock",
													"src": "3079:54:7",
													"statements": [
														{
															"nativeSrc": "3089:38:7",
															"nodeType": "YulAssignment",
															"src": "3089:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3107:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3107:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3114:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3114:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3103:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:7"
																		},
																		"nativeSrc": "3103:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3103:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3123:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:7"
																		},
																		"nativeSrc": "3119:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3119:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3099:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3099:3:7"
																},
																"nativeSrc": "3099:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3099:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3089:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3031:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3062:5:7",
														"nodeType": "YulTypedName",
														"src": "3062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3072:6:7",
														"nodeType": "YulTypedName",
														"src": "3072:6:7",
														"type": ""
													}
												],
												"src": "3031:102:7"
											},
											{
												"body": {
													"nativeSrc": "3231:285:7",
													"nodeType": "YulBlock",
													"src": "3231:285:7",
													"statements": [
														{
															"nativeSrc": "3241:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3241:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3288:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3288:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3255:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3255:32:7"
																},
																"nativeSrc": "3255:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3255:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3245:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3245:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3303:78:7",
															"nodeType": "YulAssignment",
															"src": "3303:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3369:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3374:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3374:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3310:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3310:58:7"
																},
																"nativeSrc": "3310:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3310:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3303:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3429:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3429:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3436:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3436:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3425:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:7"
																		},
																		"nativeSrc": "3425:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3443:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3443:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3448:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3448:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3390:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "3390:34:7"
																},
																"nativeSrc": "3390:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3390:65:7"
															},
															"nativeSrc": "3390:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3390:65:7"
														},
														{
															"nativeSrc": "3464:46:7",
															"nodeType": "YulAssignment",
															"src": "3464:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3475:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3475:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3502:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3480:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "3480:21:7"
																		},
																		"nativeSrc": "3480:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3480:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3471:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3471:3:7"
																},
																"nativeSrc": "3471:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3471:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3464:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3139:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3212:5:7",
														"nodeType": "YulTypedName",
														"src": "3212:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3219:3:7",
														"nodeType": "YulTypedName",
														"src": "3219:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3227:3:7",
														"nodeType": "YulTypedName",
														"src": "3227:3:7",
														"type": ""
													}
												],
												"src": "3139:377:7"
											},
											{
												"body": {
													"nativeSrc": "3640:195:7",
													"nodeType": "YulBlock",
													"src": "3640:195:7",
													"statements": [
														{
															"nativeSrc": "3650:26:7",
															"nodeType": "YulAssignment",
															"src": "3650:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3662:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3662:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3673:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3658:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:7"
																},
																"nativeSrc": "3658:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3658:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3650:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3650:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3697:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3708:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3708:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:7"
																		},
																		"nativeSrc": "3693:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3693:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3716:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3716:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3722:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3722:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:7"
																		},
																		"nativeSrc": "3712:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3712:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:7"
																},
																"nativeSrc": "3686:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3686:47:7"
															},
															"nativeSrc": "3686:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3686:47:7"
														},
														{
															"nativeSrc": "3742:86:7",
															"nodeType": "YulAssignment",
															"src": "3742:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3814:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3823:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3823:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3750:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "3750:63:7"
																},
																"nativeSrc": "3750:78:7",
																"nodeType": "YulFunctionCall",
																"src": "3750:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3742:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3742:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3522:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3612:9:7",
														"nodeType": "YulTypedName",
														"src": "3612:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3624:6:7",
														"nodeType": "YulTypedName",
														"src": "3624:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3635:4:7",
														"nodeType": "YulTypedName",
														"src": "3635:4:7",
														"type": ""
													}
												],
												"src": "3522:313:7"
											},
											{
												"body": {
													"nativeSrc": "3881:35:7",
													"nodeType": "YulBlock",
													"src": "3881:35:7",
													"statements": [
														{
															"nativeSrc": "3891:19:7",
															"nodeType": "YulAssignment",
															"src": "3891:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3907:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3901:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:7"
																},
																"nativeSrc": "3901:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3901:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3891:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3891:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3841:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3874:6:7",
														"nodeType": "YulTypedName",
														"src": "3874:6:7",
														"type": ""
													}
												],
												"src": "3841:75:7"
											},
											{
												"body": {
													"nativeSrc": "4011:28:7",
													"nodeType": "YulBlock",
													"src": "4011:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4028:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4028:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4031:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4021:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:7"
																},
																"nativeSrc": "4021:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4021:12:7"
															},
															"nativeSrc": "4021:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "4021:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3922:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3922:117:7"
											},
											{
												"body": {
													"nativeSrc": "4134:28:7",
													"nodeType": "YulBlock",
													"src": "4134:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4151:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4151:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4154:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4154:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4144:6:7"
																},
																"nativeSrc": "4144:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4144:12:7"
															},
															"nativeSrc": "4144:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "4144:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "4045:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4045:117:7"
											},
											{
												"body": {
													"nativeSrc": "4211:79:7",
													"nodeType": "YulBlock",
													"src": "4211:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4268:16:7",
																"nodeType": "YulBlock",
																"src": "4268:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4277:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4277:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4280:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4280:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4270:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:7"
																			},
																			"nativeSrc": "4270:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4270:12:7"
																		},
																		"nativeSrc": "4270:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4270:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4234:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4234:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4259:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4259:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4241:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4241:17:7"
																				},
																				"nativeSrc": "4241:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4241:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4231:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4231:2:7"
																		},
																		"nativeSrc": "4231:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:7"
																},
																"nativeSrc": "4224:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4224:43:7"
															},
															"nativeSrc": "4221:63:7",
															"nodeType": "YulIf",
															"src": "4221:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4168:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4204:5:7",
														"nodeType": "YulTypedName",
														"src": "4204:5:7",
														"type": ""
													}
												],
												"src": "4168:122:7"
											},
											{
												"body": {
													"nativeSrc": "4348:87:7",
													"nodeType": "YulBlock",
													"src": "4348:87:7",
													"statements": [
														{
															"nativeSrc": "4358:29:7",
															"nodeType": "YulAssignment",
															"src": "4358:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4380:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4380:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4367:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4367:12:7"
																},
																"nativeSrc": "4367:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4367:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4358:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4358:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4423:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4423:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4396:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4396:26:7"
																},
																"nativeSrc": "4396:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4396:33:7"
															},
															"nativeSrc": "4396:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4396:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4296:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4326:6:7",
														"nodeType": "YulTypedName",
														"src": "4326:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4334:3:7",
														"nodeType": "YulTypedName",
														"src": "4334:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4342:5:7",
														"nodeType": "YulTypedName",
														"src": "4342:5:7",
														"type": ""
													}
												],
												"src": "4296:139:7"
											},
											{
												"body": {
													"nativeSrc": "4486:32:7",
													"nodeType": "YulBlock",
													"src": "4486:32:7",
													"statements": [
														{
															"nativeSrc": "4496:16:7",
															"nodeType": "YulAssignment",
															"src": "4496:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "4507:5:7",
																"nodeType": "YulIdentifier",
																"src": "4507:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4496:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4496:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4441:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4468:5:7",
														"nodeType": "YulTypedName",
														"src": "4468:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4478:7:7",
														"nodeType": "YulTypedName",
														"src": "4478:7:7",
														"type": ""
													}
												],
												"src": "4441:77:7"
											},
											{
												"body": {
													"nativeSrc": "4567:79:7",
													"nodeType": "YulBlock",
													"src": "4567:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4624:16:7",
																"nodeType": "YulBlock",
																"src": "4624:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4633:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4633:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4626:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:7"
																			},
																			"nativeSrc": "4626:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4626:12:7"
																		},
																		"nativeSrc": "4626:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4626:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4590:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4590:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4615:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4615:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4597:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4597:17:7"
																				},
																				"nativeSrc": "4597:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4587:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4587:2:7"
																		},
																		"nativeSrc": "4587:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4587:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:7"
																},
																"nativeSrc": "4580:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4580:43:7"
															},
															"nativeSrc": "4577:63:7",
															"nodeType": "YulIf",
															"src": "4577:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4524:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4560:5:7",
														"nodeType": "YulTypedName",
														"src": "4560:5:7",
														"type": ""
													}
												],
												"src": "4524:122:7"
											},
											{
												"body": {
													"nativeSrc": "4704:87:7",
													"nodeType": "YulBlock",
													"src": "4704:87:7",
													"statements": [
														{
															"nativeSrc": "4714:29:7",
															"nodeType": "YulAssignment",
															"src": "4714:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4736:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4736:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4723:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4723:12:7"
																},
																"nativeSrc": "4723:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4723:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4714:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4714:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4779:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4779:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4752:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4752:26:7"
																},
																"nativeSrc": "4752:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4752:33:7"
															},
															"nativeSrc": "4752:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4752:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4652:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4682:6:7",
														"nodeType": "YulTypedName",
														"src": "4682:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4690:3:7",
														"nodeType": "YulTypedName",
														"src": "4690:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4698:5:7",
														"nodeType": "YulTypedName",
														"src": "4698:5:7",
														"type": ""
													}
												],
												"src": "4652:139:7"
											},
											{
												"body": {
													"nativeSrc": "4880:391:7",
													"nodeType": "YulBlock",
													"src": "4880:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4926:83:7",
																"nodeType": "YulBlock",
																"src": "4926:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4928:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4928:77:7"
																			},
																			"nativeSrc": "4928:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4928:79:7"
																		},
																		"nativeSrc": "4928:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4928:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4901:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4901:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4910:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4897:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4897:3:7"
																		},
																		"nativeSrc": "4897:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4897:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4922:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4893:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:7"
																},
																"nativeSrc": "4893:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4893:32:7"
															},
															"nativeSrc": "4890:119:7",
															"nodeType": "YulIf",
															"src": "4890:119:7"
														},
														{
															"nativeSrc": "5019:117:7",
															"nodeType": "YulBlock",
															"src": "5019:117:7",
															"statements": [
																{
																	"nativeSrc": "5034:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5034:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5048:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5048:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5038:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5038:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5063:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5063:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5098:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5098:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5109:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5109:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5094:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5094:3:7"
																				},
																				"nativeSrc": "5094:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5094:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5118:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5118:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5073:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5073:20:7"
																		},
																		"nativeSrc": "5073:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5063:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5063:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5146:118:7",
															"nodeType": "YulBlock",
															"src": "5146:118:7",
															"statements": [
																{
																	"nativeSrc": "5161:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5161:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5175:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5175:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5165:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5165:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5191:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5191:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5226:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5226:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5237:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5237:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5222:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5222:3:7"
																				},
																				"nativeSrc": "5222:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5222:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5246:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5246:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5201:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5201:20:7"
																		},
																		"nativeSrc": "5201:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5201:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5191:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5191:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4797:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4842:9:7",
														"nodeType": "YulTypedName",
														"src": "4842:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4853:7:7",
														"nodeType": "YulTypedName",
														"src": "4853:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4865:6:7",
														"nodeType": "YulTypedName",
														"src": "4865:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4873:6:7",
														"nodeType": "YulTypedName",
														"src": "4873:6:7",
														"type": ""
													}
												],
												"src": "4797:474:7"
											},
											{
												"body": {
													"nativeSrc": "5319:48:7",
													"nodeType": "YulBlock",
													"src": "5319:48:7",
													"statements": [
														{
															"nativeSrc": "5329:32:7",
															"nodeType": "YulAssignment",
															"src": "5329:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5354:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5354:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		},
																		"nativeSrc": "5347:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5340:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:7"
																},
																"nativeSrc": "5340:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5340:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5329:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5329:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5277:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5301:5:7",
														"nodeType": "YulTypedName",
														"src": "5301:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5311:7:7",
														"nodeType": "YulTypedName",
														"src": "5311:7:7",
														"type": ""
													}
												],
												"src": "5277:90:7"
											},
											{
												"body": {
													"nativeSrc": "5432:50:7",
													"nodeType": "YulBlock",
													"src": "5432:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5449:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5449:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5469:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5469:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5454:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "5454:14:7"
																		},
																		"nativeSrc": "5454:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5454:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:7"
																},
																"nativeSrc": "5442:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5442:34:7"
															},
															"nativeSrc": "5442:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5442:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5373:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5420:5:7",
														"nodeType": "YulTypedName",
														"src": "5420:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5427:3:7",
														"nodeType": "YulTypedName",
														"src": "5427:3:7",
														"type": ""
													}
												],
												"src": "5373:109:7"
											},
											{
												"body": {
													"nativeSrc": "5580:118:7",
													"nodeType": "YulBlock",
													"src": "5580:118:7",
													"statements": [
														{
															"nativeSrc": "5590:26:7",
															"nodeType": "YulAssignment",
															"src": "5590:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5602:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5602:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5613:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5613:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5598:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:7"
																},
																"nativeSrc": "5598:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5598:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5590:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5590:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5664:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5664:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5688:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5688:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5673:3:7"
																		},
																		"nativeSrc": "5673:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5673:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5626:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5626:37:7"
																},
																"nativeSrc": "5626:65:7",
																"nodeType": "YulFunctionCall",
																"src": "5626:65:7"
															},
															"nativeSrc": "5626:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "5626:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5488:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5552:9:7",
														"nodeType": "YulTypedName",
														"src": "5552:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5564:6:7",
														"nodeType": "YulTypedName",
														"src": "5564:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5575:4:7",
														"nodeType": "YulTypedName",
														"src": "5575:4:7",
														"type": ""
													}
												],
												"src": "5488:210:7"
											},
											{
												"body": {
													"nativeSrc": "5769:53:7",
													"nodeType": "YulBlock",
													"src": "5769:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5786:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5786:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5809:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5809:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5791:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5791:17:7"
																		},
																		"nativeSrc": "5791:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5779:6:7"
																},
																"nativeSrc": "5779:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5779:37:7"
															},
															"nativeSrc": "5779:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5779:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5704:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5757:5:7",
														"nodeType": "YulTypedName",
														"src": "5757:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5764:3:7",
														"nodeType": "YulTypedName",
														"src": "5764:3:7",
														"type": ""
													}
												],
												"src": "5704:118:7"
											},
											{
												"body": {
													"nativeSrc": "5926:124:7",
													"nodeType": "YulBlock",
													"src": "5926:124:7",
													"statements": [
														{
															"nativeSrc": "5936:26:7",
															"nodeType": "YulAssignment",
															"src": "5936:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5948:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5948:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5959:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5959:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5944:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5944:3:7"
																},
																"nativeSrc": "5944:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5944:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5936:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5936:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6016:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6016:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6029:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6029:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6040:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6040:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:7"
																		},
																		"nativeSrc": "6025:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6025:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5972:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5972:43:7"
																},
																"nativeSrc": "5972:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5972:71:7"
															},
															"nativeSrc": "5972:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5972:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5828:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5898:9:7",
														"nodeType": "YulTypedName",
														"src": "5898:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5910:6:7",
														"nodeType": "YulTypedName",
														"src": "5910:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5921:4:7",
														"nodeType": "YulTypedName",
														"src": "5921:4:7",
														"type": ""
													}
												],
												"src": "5828:222:7"
											},
											{
												"body": {
													"nativeSrc": "6156:519:7",
													"nodeType": "YulBlock",
													"src": "6156:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6202:83:7",
																"nodeType": "YulBlock",
																"src": "6202:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6204:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6204:77:7"
																			},
																			"nativeSrc": "6204:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6204:79:7"
																		},
																		"nativeSrc": "6204:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6204:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6177:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6177:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6186:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6173:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6173:3:7"
																		},
																		"nativeSrc": "6173:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6173:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6198:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6169:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6169:3:7"
																},
																"nativeSrc": "6169:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6169:32:7"
															},
															"nativeSrc": "6166:119:7",
															"nodeType": "YulIf",
															"src": "6166:119:7"
														},
														{
															"nativeSrc": "6295:117:7",
															"nodeType": "YulBlock",
															"src": "6295:117:7",
															"statements": [
																{
																	"nativeSrc": "6310:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6310:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6324:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6324:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6314:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6314:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6370:3:7"
																				},
																				"nativeSrc": "6370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6349:20:7"
																		},
																		"nativeSrc": "6349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6339:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6422:118:7",
															"nodeType": "YulBlock",
															"src": "6422:118:7",
															"statements": [
																{
																	"nativeSrc": "6437:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6437:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6451:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6441:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6441:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6467:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6467:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6502:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6502:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6513:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6513:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6498:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6498:3:7"
																				},
																				"nativeSrc": "6498:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6498:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6522:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6522:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6477:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6477:20:7"
																		},
																		"nativeSrc": "6477:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6467:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6467:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6550:118:7",
															"nodeType": "YulBlock",
															"src": "6550:118:7",
															"statements": [
																{
																	"nativeSrc": "6565:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6565:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6579:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6579:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6569:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6569:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6595:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6595:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6630:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6630:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6641:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6641:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6626:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6626:3:7"
																				},
																				"nativeSrc": "6626:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6626:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6650:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6650:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6605:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6605:20:7"
																		},
																		"nativeSrc": "6605:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6605:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6595:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6595:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6056:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6110:9:7",
														"nodeType": "YulTypedName",
														"src": "6110:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6121:7:7",
														"nodeType": "YulTypedName",
														"src": "6121:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6133:6:7",
														"nodeType": "YulTypedName",
														"src": "6133:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6141:6:7",
														"nodeType": "YulTypedName",
														"src": "6141:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6149:6:7",
														"nodeType": "YulTypedName",
														"src": "6149:6:7",
														"type": ""
													}
												],
												"src": "6056:619:7"
											},
											{
												"body": {
													"nativeSrc": "6724:43:7",
													"nodeType": "YulBlock",
													"src": "6724:43:7",
													"statements": [
														{
															"nativeSrc": "6734:27:7",
															"nodeType": "YulAssignment",
															"src": "6734:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6749:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6749:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6756:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6756:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6745:3:7"
																},
																"nativeSrc": "6745:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6745:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6734:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6734:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6681:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6706:5:7",
														"nodeType": "YulTypedName",
														"src": "6706:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6716:7:7",
														"nodeType": "YulTypedName",
														"src": "6716:7:7",
														"type": ""
													}
												],
												"src": "6681:86:7"
											},
											{
												"body": {
													"nativeSrc": "6834:51:7",
													"nodeType": "YulBlock",
													"src": "6834:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6851:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6872:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6872:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6856:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "6856:15:7"
																		},
																		"nativeSrc": "6856:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6856:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6844:6:7"
																},
																"nativeSrc": "6844:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6844:35:7"
															},
															"nativeSrc": "6844:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "6844:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6773:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6822:5:7",
														"nodeType": "YulTypedName",
														"src": "6822:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6829:3:7",
														"nodeType": "YulTypedName",
														"src": "6829:3:7",
														"type": ""
													}
												],
												"src": "6773:112:7"
											},
											{
												"body": {
													"nativeSrc": "6985:120:7",
													"nodeType": "YulBlock",
													"src": "6985:120:7",
													"statements": [
														{
															"nativeSrc": "6995:26:7",
															"nodeType": "YulAssignment",
															"src": "6995:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7007:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7007:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7003:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7003:3:7"
																},
																"nativeSrc": "7003:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7003:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6995:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6995:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7071:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7095:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7095:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:7"
																		},
																		"nativeSrc": "7080:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7031:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "7031:39:7"
																},
																"nativeSrc": "7031:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7031:67:7"
															},
															"nativeSrc": "7031:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7031:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6891:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6957:9:7",
														"nodeType": "YulTypedName",
														"src": "6957:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6969:6:7",
														"nodeType": "YulTypedName",
														"src": "6969:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6980:4:7",
														"nodeType": "YulTypedName",
														"src": "6980:4:7",
														"type": ""
													}
												],
												"src": "6891:214:7"
											},
											{
												"body": {
													"nativeSrc": "7177:263:7",
													"nodeType": "YulBlock",
													"src": "7177:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7223:83:7",
																"nodeType": "YulBlock",
																"src": "7223:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7225:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7225:77:7"
																			},
																			"nativeSrc": "7225:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7225:79:7"
																		},
																		"nativeSrc": "7225:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7225:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7198:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7198:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7207:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7194:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7194:3:7"
																		},
																		"nativeSrc": "7194:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7194:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7219:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7219:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:7"
																},
																"nativeSrc": "7190:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7190:32:7"
															},
															"nativeSrc": "7187:119:7",
															"nodeType": "YulIf",
															"src": "7187:119:7"
														},
														{
															"nativeSrc": "7316:117:7",
															"nodeType": "YulBlock",
															"src": "7316:117:7",
															"statements": [
																{
																	"nativeSrc": "7331:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7331:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7345:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7345:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7335:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7335:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7360:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7360:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7395:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7395:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7406:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7406:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7391:3:7"
																				},
																				"nativeSrc": "7391:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7391:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7415:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7415:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7370:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7370:20:7"
																		},
																		"nativeSrc": "7370:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7370:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7360:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7360:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7111:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:7",
														"nodeType": "YulTypedName",
														"src": "7147:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7158:7:7",
														"nodeType": "YulTypedName",
														"src": "7158:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7170:6:7",
														"nodeType": "YulTypedName",
														"src": "7170:6:7",
														"type": ""
													}
												],
												"src": "7111:329:7"
											},
											{
												"body": {
													"nativeSrc": "7529:391:7",
													"nodeType": "YulBlock",
													"src": "7529:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7575:83:7",
																"nodeType": "YulBlock",
																"src": "7575:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7577:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7577:77:7"
																			},
																			"nativeSrc": "7577:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7577:79:7"
																		},
																		"nativeSrc": "7577:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7577:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7550:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7550:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7559:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7546:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:7"
																		},
																		"nativeSrc": "7546:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7546:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7571:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7571:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7542:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:7"
																},
																"nativeSrc": "7542:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7542:32:7"
															},
															"nativeSrc": "7539:119:7",
															"nodeType": "YulIf",
															"src": "7539:119:7"
														},
														{
															"nativeSrc": "7668:117:7",
															"nodeType": "YulBlock",
															"src": "7668:117:7",
															"statements": [
																{
																	"nativeSrc": "7683:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7683:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7697:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7697:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7687:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7687:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7712:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7712:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7747:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7747:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7758:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7758:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7743:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7743:3:7"
																				},
																				"nativeSrc": "7743:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7743:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7767:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7767:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7722:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7722:20:7"
																		},
																		"nativeSrc": "7722:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7722:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7712:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7712:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7795:118:7",
															"nodeType": "YulBlock",
															"src": "7795:118:7",
															"statements": [
																{
																	"nativeSrc": "7810:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7810:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7824:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7824:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7814:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7814:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7840:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7840:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7875:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7875:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7886:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7886:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7871:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7871:3:7"
																				},
																				"nativeSrc": "7871:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7871:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7895:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7895:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7850:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7850:20:7"
																		},
																		"nativeSrc": "7850:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7850:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7840:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7840:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7446:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7491:9:7",
														"nodeType": "YulTypedName",
														"src": "7491:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7502:7:7",
														"nodeType": "YulTypedName",
														"src": "7502:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7514:6:7",
														"nodeType": "YulTypedName",
														"src": "7514:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7522:6:7",
														"nodeType": "YulTypedName",
														"src": "7522:6:7",
														"type": ""
													}
												],
												"src": "7446:474:7"
											},
											{
												"body": {
													"nativeSrc": "8032:71:7",
													"nodeType": "YulBlock",
													"src": "8032:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8054:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8054:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8062:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8062:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8050:3:7"
																		},
																		"nativeSrc": "8050:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8050:14:7"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520646576656c6f706572",
																		"kind": "string",
																		"nativeSrc": "8066:29:7",
																		"nodeType": "YulLiteral",
																		"src": "8066:29:7",
																		"type": "",
																		"value": "Caller is not the developer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8043:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8043:6:7"
																},
																"nativeSrc": "8043:53:7",
																"nodeType": "YulFunctionCall",
																"src": "8043:53:7"
															},
															"nativeSrc": "8043:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "8043:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30",
												"nativeSrc": "7926:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8024:6:7",
														"nodeType": "YulTypedName",
														"src": "8024:6:7",
														"type": ""
													}
												],
												"src": "7926:177:7"
											},
											{
												"body": {
													"nativeSrc": "8255:220:7",
													"nodeType": "YulBlock",
													"src": "8255:220:7",
													"statements": [
														{
															"nativeSrc": "8265:74:7",
															"nodeType": "YulAssignment",
															"src": "8265:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8331:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8331:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8272:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8272:58:7"
																},
																"nativeSrc": "8272:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8272:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8265:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8437:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8437:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30",
																	"nativeSrc": "8348:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8348:88:7"
																},
																"nativeSrc": "8348:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8348:93:7"
															},
															"nativeSrc": "8348:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8348:93:7"
														},
														{
															"nativeSrc": "8450:19:7",
															"nodeType": "YulAssignment",
															"src": "8450:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8461:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8461:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8466:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8457:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:7"
																},
																"nativeSrc": "8457:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8457:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8450:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8450:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8109:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8243:3:7",
														"nodeType": "YulTypedName",
														"src": "8243:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8251:3:7",
														"nodeType": "YulTypedName",
														"src": "8251:3:7",
														"type": ""
													}
												],
												"src": "8109:366:7"
											},
											{
												"body": {
													"nativeSrc": "8652:248:7",
													"nodeType": "YulBlock",
													"src": "8652:248:7",
													"statements": [
														{
															"nativeSrc": "8662:26:7",
															"nodeType": "YulAssignment",
															"src": "8662:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8674:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8674:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8685:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8685:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8670:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8670:3:7"
																},
																"nativeSrc": "8670:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8670:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8662:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8662:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8720:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8720:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8705:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:7"
																		},
																		"nativeSrc": "8705:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8705:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8728:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8728:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8734:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:7"
																		},
																		"nativeSrc": "8724:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8724:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8698:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8698:6:7"
																},
																"nativeSrc": "8698:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8698:47:7"
															},
															"nativeSrc": "8698:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8698:47:7"
														},
														{
															"nativeSrc": "8754:139:7",
															"nodeType": "YulAssignment",
															"src": "8754:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8888:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8888:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8762:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8762:124:7"
																},
																"nativeSrc": "8762:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8762:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8754:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8754:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8481:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8632:9:7",
														"nodeType": "YulTypedName",
														"src": "8632:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8647:4:7",
														"nodeType": "YulTypedName",
														"src": "8647:4:7",
														"type": ""
													}
												],
												"src": "8481:419:7"
											},
											{
												"body": {
													"nativeSrc": "9012:116:7",
													"nodeType": "YulBlock",
													"src": "9012:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9034:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9034:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9042:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9042:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9030:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:7"
																		},
																		"nativeSrc": "9030:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9030:14:7"
																	},
																	{
																		"hexValue": "4e6f20646576656c6f706572206368616e676520726571756573742070656e64",
																		"kind": "string",
																		"nativeSrc": "9046:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9046:34:7",
																		"type": "",
																		"value": "No developer change request pend"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9023:6:7"
																},
																"nativeSrc": "9023:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9023:58:7"
															},
															"nativeSrc": "9023:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9023:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9102:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9102:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9110:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9110:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9098:3:7"
																		},
																		"nativeSrc": "9098:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9098:15:7"
																	},
																	{
																		"hexValue": "696e67",
																		"kind": "string",
																		"nativeSrc": "9115:5:7",
																		"nodeType": "YulLiteral",
																		"src": "9115:5:7",
																		"type": "",
																		"value": "ing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:7"
																},
																"nativeSrc": "9091:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9091:30:7"
															},
															"nativeSrc": "9091:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9091:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
												"nativeSrc": "8906:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9004:6:7",
														"nodeType": "YulTypedName",
														"src": "9004:6:7",
														"type": ""
													}
												],
												"src": "8906:222:7"
											},
											{
												"body": {
													"nativeSrc": "9280:220:7",
													"nodeType": "YulBlock",
													"src": "9280:220:7",
													"statements": [
														{
															"nativeSrc": "9290:74:7",
															"nodeType": "YulAssignment",
															"src": "9290:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9356:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9297:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9297:58:7"
																},
																"nativeSrc": "9297:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9297:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9462:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
																	"nativeSrc": "9373:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9373:88:7"
																},
																"nativeSrc": "9373:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9373:93:7"
															},
															"nativeSrc": "9373:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9373:93:7"
														},
														{
															"nativeSrc": "9475:19:7",
															"nodeType": "YulAssignment",
															"src": "9475:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9486:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9491:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9491:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9482:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9482:3:7"
																},
																"nativeSrc": "9482:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9482:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9475:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9134:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9268:3:7",
														"nodeType": "YulTypedName",
														"src": "9268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9276:3:7",
														"nodeType": "YulTypedName",
														"src": "9276:3:7",
														"type": ""
													}
												],
												"src": "9134:366:7"
											},
											{
												"body": {
													"nativeSrc": "9677:248:7",
													"nodeType": "YulBlock",
													"src": "9677:248:7",
													"statements": [
														{
															"nativeSrc": "9687:26:7",
															"nodeType": "YulAssignment",
															"src": "9687:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9699:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9699:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9710:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9710:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9695:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:7"
																},
																"nativeSrc": "9695:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9695:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9687:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9687:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9734:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9734:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9745:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9745:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9730:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:7"
																		},
																		"nativeSrc": "9730:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9730:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9753:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9753:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9759:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9749:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9749:3:7"
																		},
																		"nativeSrc": "9749:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9749:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9723:6:7"
																},
																"nativeSrc": "9723:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9723:47:7"
															},
															"nativeSrc": "9723:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9723:47:7"
														},
														{
															"nativeSrc": "9779:139:7",
															"nodeType": "YulAssignment",
															"src": "9779:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9913:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9913:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9787:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9787:124:7"
																},
																"nativeSrc": "9787:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9787:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9779:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9779:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9506:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9657:9:7",
														"nodeType": "YulTypedName",
														"src": "9657:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9672:4:7",
														"nodeType": "YulTypedName",
														"src": "9672:4:7",
														"type": ""
													}
												],
												"src": "9506:419:7"
											},
											{
												"body": {
													"nativeSrc": "9959:152:7",
													"nodeType": "YulBlock",
													"src": "9959:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9976:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9976:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9979:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9979:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9969:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9969:6:7"
																},
																"nativeSrc": "9969:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9969:88:7"
															},
															"nativeSrc": "9969:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9969:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10073:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10076:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10076:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:7"
																},
																"nativeSrc": "10066:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10066:15:7"
															},
															"nativeSrc": "10066:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10066:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10097:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10100:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10100:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:7"
																},
																"nativeSrc": "10090:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10090:15:7"
															},
															"nativeSrc": "10090:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10090:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9931:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9931:180:7"
											},
											{
												"body": {
													"nativeSrc": "10168:269:7",
													"nodeType": "YulBlock",
													"src": "10168:269:7",
													"statements": [
														{
															"nativeSrc": "10178:22:7",
															"nodeType": "YulAssignment",
															"src": "10178:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10192:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10192:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10198:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10198:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10188:3:7"
																},
																"nativeSrc": "10188:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10188:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10178:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10178:6:7"
																}
															]
														},
														{
															"nativeSrc": "10209:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10209:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10239:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10239:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10245:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10235:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10235:3:7"
																},
																"nativeSrc": "10235:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10235:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10213:18:7",
																	"nodeType": "YulTypedName",
																	"src": "10213:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10286:51:7",
																"nodeType": "YulBlock",
																"src": "10286:51:7",
																"statements": [
																	{
																		"nativeSrc": "10300:27:7",
																		"nodeType": "YulAssignment",
																		"src": "10300:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10314:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10314:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10322:4:7",
																					"nodeType": "YulLiteral",
																					"src": "10322:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10310:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10310:3:7"
																			},
																			"nativeSrc": "10310:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10310:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10300:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10300:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10266:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "10266:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10259:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10259:6:7"
																},
																"nativeSrc": "10259:26:7",
																"nodeType": "YulFunctionCall",
																"src": "10259:26:7"
															},
															"nativeSrc": "10256:81:7",
															"nodeType": "YulIf",
															"src": "10256:81:7"
														},
														{
															"body": {
																"nativeSrc": "10389:42:7",
																"nodeType": "YulBlock",
																"src": "10389:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10403:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10403:16:7"
																			},
																			"nativeSrc": "10403:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10403:18:7"
																		},
																		"nativeSrc": "10403:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10403:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10353:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "10353:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10376:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10376:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10384:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10384:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10373:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10373:2:7"
																		},
																		"nativeSrc": "10373:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10350:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10350:2:7"
																},
																"nativeSrc": "10350:38:7",
																"nodeType": "YulFunctionCall",
																"src": "10350:38:7"
															},
															"nativeSrc": "10347:84:7",
															"nodeType": "YulIf",
															"src": "10347:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10117:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10152:4:7",
														"nodeType": "YulTypedName",
														"src": "10152:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10161:6:7",
														"nodeType": "YulTypedName",
														"src": "10161:6:7",
														"type": ""
													}
												],
												"src": "10117:320:7"
											},
											{
												"body": {
													"nativeSrc": "10549:74:7",
													"nodeType": "YulBlock",
													"src": "10549:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10571:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10571:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10579:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10579:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10567:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10567:3:7"
																		},
																		"nativeSrc": "10567:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10567:14:7"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865205661756c744d616e61676572",
																		"kind": "string",
																		"nativeSrc": "10583:32:7",
																		"nodeType": "YulLiteral",
																		"src": "10583:32:7",
																		"type": "",
																		"value": "Caller is not the VaultManager"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:7"
																},
																"nativeSrc": "10560:56:7",
																"nodeType": "YulFunctionCall",
																"src": "10560:56:7"
															},
															"nativeSrc": "10560:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "10560:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98",
												"nativeSrc": "10443:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10541:6:7",
														"nodeType": "YulTypedName",
														"src": "10541:6:7",
														"type": ""
													}
												],
												"src": "10443:180:7"
											},
											{
												"body": {
													"nativeSrc": "10775:220:7",
													"nodeType": "YulBlock",
													"src": "10775:220:7",
													"statements": [
														{
															"nativeSrc": "10785:74:7",
															"nodeType": "YulAssignment",
															"src": "10785:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10851:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10856:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10856:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10792:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10792:58:7"
																},
																"nativeSrc": "10792:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10792:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10785:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10957:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98",
																	"nativeSrc": "10868:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10868:88:7"
																},
																"nativeSrc": "10868:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10868:93:7"
															},
															"nativeSrc": "10868:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10868:93:7"
														},
														{
															"nativeSrc": "10970:19:7",
															"nodeType": "YulAssignment",
															"src": "10970:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10981:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10981:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10986:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10986:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10977:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10977:3:7"
																},
																"nativeSrc": "10977:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10977:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10970:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10970:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10629:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10763:3:7",
														"nodeType": "YulTypedName",
														"src": "10763:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10771:3:7",
														"nodeType": "YulTypedName",
														"src": "10771:3:7",
														"type": ""
													}
												],
												"src": "10629:366:7"
											},
											{
												"body": {
													"nativeSrc": "11172:248:7",
													"nodeType": "YulBlock",
													"src": "11172:248:7",
													"statements": [
														{
															"nativeSrc": "11182:26:7",
															"nodeType": "YulAssignment",
															"src": "11182:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11205:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11190:3:7"
																},
																"nativeSrc": "11190:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11190:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11182:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11229:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11229:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11240:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11240:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11225:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11225:3:7"
																		},
																		"nativeSrc": "11225:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11225:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11248:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11248:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11254:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11254:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11244:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11244:3:7"
																		},
																		"nativeSrc": "11244:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11244:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11218:6:7"
																},
																"nativeSrc": "11218:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11218:47:7"
															},
															"nativeSrc": "11218:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11218:47:7"
														},
														{
															"nativeSrc": "11274:139:7",
															"nodeType": "YulAssignment",
															"src": "11274:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11408:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11408:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11282:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11282:124:7"
																},
																"nativeSrc": "11282:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11282:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11274:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11274:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11001:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11152:9:7",
														"nodeType": "YulTypedName",
														"src": "11152:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11167:4:7",
														"nodeType": "YulTypedName",
														"src": "11167:4:7",
														"type": ""
													}
												],
												"src": "11001:419:7"
											},
											{
												"body": {
													"nativeSrc": "11532:75:7",
													"nodeType": "YulBlock",
													"src": "11532:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11554:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11554:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11562:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11562:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11550:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11550:3:7"
																		},
																		"nativeSrc": "11550:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11550:14:7"
																	},
																	{
																		"hexValue": "4e6f206f776e6572206368616e676520726571756573742070656e64696e67",
																		"kind": "string",
																		"nativeSrc": "11566:33:7",
																		"nodeType": "YulLiteral",
																		"src": "11566:33:7",
																		"type": "",
																		"value": "No owner change request pending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11543:6:7"
																},
																"nativeSrc": "11543:57:7",
																"nodeType": "YulFunctionCall",
																"src": "11543:57:7"
															},
															"nativeSrc": "11543:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "11543:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
												"nativeSrc": "11426:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11524:6:7",
														"nodeType": "YulTypedName",
														"src": "11524:6:7",
														"type": ""
													}
												],
												"src": "11426:181:7"
											},
											{
												"body": {
													"nativeSrc": "11759:220:7",
													"nodeType": "YulBlock",
													"src": "11759:220:7",
													"statements": [
														{
															"nativeSrc": "11769:74:7",
															"nodeType": "YulAssignment",
															"src": "11769:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11835:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11835:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11840:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11776:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11776:58:7"
																},
																"nativeSrc": "11776:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11776:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11769:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11941:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11941:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
																	"nativeSrc": "11852:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11852:88:7"
																},
																"nativeSrc": "11852:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11852:93:7"
															},
															"nativeSrc": "11852:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11852:93:7"
														},
														{
															"nativeSrc": "11954:19:7",
															"nodeType": "YulAssignment",
															"src": "11954:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11965:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11965:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11970:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11970:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11961:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11961:3:7"
																},
																"nativeSrc": "11961:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11961:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11954:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11954:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11613:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11747:3:7",
														"nodeType": "YulTypedName",
														"src": "11747:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11755:3:7",
														"nodeType": "YulTypedName",
														"src": "11755:3:7",
														"type": ""
													}
												],
												"src": "11613:366:7"
											},
											{
												"body": {
													"nativeSrc": "12156:248:7",
													"nodeType": "YulBlock",
													"src": "12156:248:7",
													"statements": [
														{
															"nativeSrc": "12166:26:7",
															"nodeType": "YulAssignment",
															"src": "12166:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12178:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12178:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12174:3:7"
																},
																"nativeSrc": "12174:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12174:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12166:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12213:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12213:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12224:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12224:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12209:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12209:3:7"
																		},
																		"nativeSrc": "12209:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12209:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12232:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12232:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12238:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12238:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12228:3:7"
																		},
																		"nativeSrc": "12228:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12228:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12202:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12202:6:7"
																},
																"nativeSrc": "12202:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12202:47:7"
															},
															"nativeSrc": "12202:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12202:47:7"
														},
														{
															"nativeSrc": "12258:139:7",
															"nodeType": "YulAssignment",
															"src": "12258:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12392:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12392:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12266:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12266:124:7"
																},
																"nativeSrc": "12266:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12266:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12258:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12258:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11985:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12136:9:7",
														"nodeType": "YulTypedName",
														"src": "12136:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12151:4:7",
														"nodeType": "YulTypedName",
														"src": "12151:4:7",
														"type": ""
													}
												],
												"src": "11985:419:7"
											},
											{
												"body": {
													"nativeSrc": "12516:117:7",
													"nodeType": "YulBlock",
													"src": "12516:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12538:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12538:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12546:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12546:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12534:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:7"
																		},
																		"nativeSrc": "12534:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12534:14:7"
																	},
																	{
																		"hexValue": "4e657720646576656c6f7065722063616e6e6f74206265207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "12550:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12550:34:7",
																		"type": "",
																		"value": "New developer cannot be zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12527:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12527:6:7"
																},
																"nativeSrc": "12527:58:7",
																"nodeType": "YulFunctionCall",
																"src": "12527:58:7"
															},
															"nativeSrc": "12527:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "12527:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12606:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12606:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12614:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12614:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12602:3:7"
																		},
																		"nativeSrc": "12602:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12602:15:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "12619:6:7",
																		"nodeType": "YulLiteral",
																		"src": "12619:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:7"
																},
																"nativeSrc": "12595:31:7",
																"nodeType": "YulFunctionCall",
																"src": "12595:31:7"
															},
															"nativeSrc": "12595:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "12595:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c",
												"nativeSrc": "12410:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12508:6:7",
														"nodeType": "YulTypedName",
														"src": "12508:6:7",
														"type": ""
													}
												],
												"src": "12410:223:7"
											},
											{
												"body": {
													"nativeSrc": "12785:220:7",
													"nodeType": "YulBlock",
													"src": "12785:220:7",
													"statements": [
														{
															"nativeSrc": "12795:74:7",
															"nodeType": "YulAssignment",
															"src": "12795:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12861:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12861:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12866:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12866:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12802:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12802:58:7"
																},
																"nativeSrc": "12802:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12802:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12795:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12795:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12967:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12967:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c",
																	"nativeSrc": "12878:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12878:88:7"
																},
																"nativeSrc": "12878:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12878:93:7"
															},
															"nativeSrc": "12878:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12878:93:7"
														},
														{
															"nativeSrc": "12980:19:7",
															"nodeType": "YulAssignment",
															"src": "12980:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12991:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12991:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12996:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12987:3:7"
																},
																"nativeSrc": "12987:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12987:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12980:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12980:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12639:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12773:3:7",
														"nodeType": "YulTypedName",
														"src": "12773:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12781:3:7",
														"nodeType": "YulTypedName",
														"src": "12781:3:7",
														"type": ""
													}
												],
												"src": "12639:366:7"
											},
											{
												"body": {
													"nativeSrc": "13182:248:7",
													"nodeType": "YulBlock",
													"src": "13182:248:7",
													"statements": [
														{
															"nativeSrc": "13192:26:7",
															"nodeType": "YulAssignment",
															"src": "13192:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13204:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13204:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13215:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13215:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13200:3:7"
																},
																"nativeSrc": "13200:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13200:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13192:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13192:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13239:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13239:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13250:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13250:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13235:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13235:3:7"
																		},
																		"nativeSrc": "13235:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13235:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13258:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13258:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13264:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13254:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13254:3:7"
																		},
																		"nativeSrc": "13254:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13254:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13228:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13228:6:7"
																},
																"nativeSrc": "13228:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13228:47:7"
															},
															"nativeSrc": "13228:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13228:47:7"
														},
														{
															"nativeSrc": "13284:139:7",
															"nodeType": "YulAssignment",
															"src": "13284:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13418:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13418:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13292:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13292:124:7"
																},
																"nativeSrc": "13292:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13292:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13284:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13284:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13011:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13162:9:7",
														"nodeType": "YulTypedName",
														"src": "13162:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13177:4:7",
														"nodeType": "YulTypedName",
														"src": "13177:4:7",
														"type": ""
													}
												],
												"src": "13011:419:7"
											},
											{
												"body": {
													"nativeSrc": "13542:115:7",
													"nodeType": "YulBlock",
													"src": "13542:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13564:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13564:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13572:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13572:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13560:3:7"
																		},
																		"nativeSrc": "13560:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13560:14:7"
																	},
																	{
																		"hexValue": "446576656c6f706572206368616e676520616c72656164792072657175657374",
																		"kind": "string",
																		"nativeSrc": "13576:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13576:34:7",
																		"type": "",
																		"value": "Developer change already request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13553:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13553:6:7"
																},
																"nativeSrc": "13553:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13553:58:7"
															},
															"nativeSrc": "13553:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13553:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13632:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13632:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13640:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13640:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:7"
																		},
																		"nativeSrc": "13628:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "13645:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13645:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13621:6:7"
																},
																"nativeSrc": "13621:29:7",
																"nodeType": "YulFunctionCall",
																"src": "13621:29:7"
															},
															"nativeSrc": "13621:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "13621:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816",
												"nativeSrc": "13436:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13534:6:7",
														"nodeType": "YulTypedName",
														"src": "13534:6:7",
														"type": ""
													}
												],
												"src": "13436:221:7"
											},
											{
												"body": {
													"nativeSrc": "13809:220:7",
													"nodeType": "YulBlock",
													"src": "13809:220:7",
													"statements": [
														{
															"nativeSrc": "13819:74:7",
															"nodeType": "YulAssignment",
															"src": "13819:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13885:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13885:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13890:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13890:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13826:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13826:58:7"
																},
																"nativeSrc": "13826:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13826:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13819:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13991:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13991:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816",
																	"nativeSrc": "13902:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13902:88:7"
																},
																"nativeSrc": "13902:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13902:93:7"
															},
															"nativeSrc": "13902:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13902:93:7"
														},
														{
															"nativeSrc": "14004:19:7",
															"nodeType": "YulAssignment",
															"src": "14004:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14015:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14015:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14020:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14020:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:7"
																},
																"nativeSrc": "14011:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14011:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14004:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14004:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13663:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13797:3:7",
														"nodeType": "YulTypedName",
														"src": "13797:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13805:3:7",
														"nodeType": "YulTypedName",
														"src": "13805:3:7",
														"type": ""
													}
												],
												"src": "13663:366:7"
											},
											{
												"body": {
													"nativeSrc": "14206:248:7",
													"nodeType": "YulBlock",
													"src": "14206:248:7",
													"statements": [
														{
															"nativeSrc": "14216:26:7",
															"nodeType": "YulAssignment",
															"src": "14216:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14228:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14228:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14239:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14239:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14224:3:7"
																},
																"nativeSrc": "14224:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14224:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14216:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14216:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14263:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14274:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14274:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14259:3:7"
																		},
																		"nativeSrc": "14259:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14259:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14282:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14282:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14288:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14288:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14278:3:7"
																		},
																		"nativeSrc": "14278:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14278:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14252:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:7"
																},
																"nativeSrc": "14252:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14252:47:7"
															},
															"nativeSrc": "14252:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14252:47:7"
														},
														{
															"nativeSrc": "14308:139:7",
															"nodeType": "YulAssignment",
															"src": "14308:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14442:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14442:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14316:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14316:124:7"
																},
																"nativeSrc": "14316:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14316:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14308:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14308:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14035:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14186:9:7",
														"nodeType": "YulTypedName",
														"src": "14186:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14201:4:7",
														"nodeType": "YulTypedName",
														"src": "14201:4:7",
														"type": ""
													}
												],
												"src": "14035:419:7"
											},
											{
												"body": {
													"nativeSrc": "14488:152:7",
													"nodeType": "YulBlock",
													"src": "14488:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14505:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14505:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14508:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14508:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14498:6:7"
																},
																"nativeSrc": "14498:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14498:88:7"
															},
															"nativeSrc": "14498:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14498:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14602:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14602:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14605:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14605:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:7"
																},
																"nativeSrc": "14595:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14595:15:7"
															},
															"nativeSrc": "14595:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14595:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14626:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14626:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14629:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14629:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14619:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14619:6:7"
																},
																"nativeSrc": "14619:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14619:15:7"
															},
															"nativeSrc": "14619:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14619:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14460:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14460:180:7"
											},
											{
												"body": {
													"nativeSrc": "14690:147:7",
													"nodeType": "YulBlock",
													"src": "14690:147:7",
													"statements": [
														{
															"nativeSrc": "14700:25:7",
															"nodeType": "YulAssignment",
															"src": "14700:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14723:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14723:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14705:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14705:17:7"
																},
																"nativeSrc": "14705:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14705:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14700:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14700:1:7"
																}
															]
														},
														{
															"nativeSrc": "14734:25:7",
															"nodeType": "YulAssignment",
															"src": "14734:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14757:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14757:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14739:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14739:17:7"
																},
																"nativeSrc": "14739:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14739:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14734:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14734:1:7"
																}
															]
														},
														{
															"nativeSrc": "14768:16:7",
															"nodeType": "YulAssignment",
															"src": "14768:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14779:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14779:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14782:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14782:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14775:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14775:3:7"
																},
																"nativeSrc": "14775:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14775:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14768:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14808:22:7",
																"nodeType": "YulBlock",
																"src": "14808:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14810:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14810:16:7"
																			},
																			"nativeSrc": "14810:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14810:18:7"
																		},
																		"nativeSrc": "14810:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14810:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14800:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14800:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14803:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14803:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14797:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14797:2:7"
																},
																"nativeSrc": "14797:10:7",
																"nodeType": "YulFunctionCall",
																"src": "14797:10:7"
															},
															"nativeSrc": "14794:36:7",
															"nodeType": "YulIf",
															"src": "14794:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14646:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14677:1:7",
														"nodeType": "YulTypedName",
														"src": "14677:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14680:1:7",
														"nodeType": "YulTypedName",
														"src": "14680:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14686:3:7",
														"nodeType": "YulTypedName",
														"src": "14686:3:7",
														"type": ""
													}
												],
												"src": "14646:191:7"
											},
											{
												"body": {
													"nativeSrc": "14949:74:7",
													"nodeType": "YulBlock",
													"src": "14949:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14971:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14971:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14979:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14979:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14967:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14967:3:7"
																		},
																		"nativeSrc": "14967:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14967:14:7"
																	},
																	{
																		"hexValue": "446576656c6f706572206368616e67652064656c6179206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "14983:32:7",
																		"nodeType": "YulLiteral",
																		"src": "14983:32:7",
																		"type": "",
																		"value": "Developer change delay not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14960:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:7"
																},
																"nativeSrc": "14960:56:7",
																"nodeType": "YulFunctionCall",
																"src": "14960:56:7"
															},
															"nativeSrc": "14960:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "14960:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592",
												"nativeSrc": "14843:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14941:6:7",
														"nodeType": "YulTypedName",
														"src": "14941:6:7",
														"type": ""
													}
												],
												"src": "14843:180:7"
											},
											{
												"body": {
													"nativeSrc": "15175:220:7",
													"nodeType": "YulBlock",
													"src": "15175:220:7",
													"statements": [
														{
															"nativeSrc": "15185:74:7",
															"nodeType": "YulAssignment",
															"src": "15185:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15251:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15251:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15256:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15192:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15192:58:7"
																},
																"nativeSrc": "15192:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15192:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15185:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15357:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15357:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592",
																	"nativeSrc": "15268:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15268:88:7"
																},
																"nativeSrc": "15268:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15268:93:7"
															},
															"nativeSrc": "15268:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15268:93:7"
														},
														{
															"nativeSrc": "15370:19:7",
															"nodeType": "YulAssignment",
															"src": "15370:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15381:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15381:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15386:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15377:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15377:3:7"
																},
																"nativeSrc": "15377:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15377:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15370:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15029:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15163:3:7",
														"nodeType": "YulTypedName",
														"src": "15163:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15171:3:7",
														"nodeType": "YulTypedName",
														"src": "15171:3:7",
														"type": ""
													}
												],
												"src": "15029:366:7"
											},
											{
												"body": {
													"nativeSrc": "15572:248:7",
													"nodeType": "YulBlock",
													"src": "15572:248:7",
													"statements": [
														{
															"nativeSrc": "15582:26:7",
															"nodeType": "YulAssignment",
															"src": "15582:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15594:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15594:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15605:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15590:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15590:3:7"
																},
																"nativeSrc": "15590:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15590:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15582:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15582:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15629:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15629:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15640:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15625:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15625:3:7"
																		},
																		"nativeSrc": "15625:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15625:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15648:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15648:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15654:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15644:3:7"
																		},
																		"nativeSrc": "15644:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15644:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15618:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15618:6:7"
																},
																"nativeSrc": "15618:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15618:47:7"
															},
															"nativeSrc": "15618:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15618:47:7"
														},
														{
															"nativeSrc": "15674:139:7",
															"nodeType": "YulAssignment",
															"src": "15674:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15808:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15808:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15682:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15682:124:7"
																},
																"nativeSrc": "15682:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15682:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15674:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15674:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15401:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15552:9:7",
														"nodeType": "YulTypedName",
														"src": "15552:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15567:4:7",
														"nodeType": "YulTypedName",
														"src": "15567:4:7",
														"type": ""
													}
												],
												"src": "15401:419:7"
											},
											{
												"body": {
													"nativeSrc": "15932:76:7",
													"nodeType": "YulBlock",
													"src": "15932:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15954:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15954:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15962:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15962:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15950:3:7"
																		},
																		"nativeSrc": "15950:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15950:14:7"
																	},
																	{
																		"hexValue": "4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "15966:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15966:34:7",
																		"type": "",
																		"value": "New owner cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15943:6:7"
																},
																"nativeSrc": "15943:58:7",
																"nodeType": "YulFunctionCall",
																"src": "15943:58:7"
															},
															"nativeSrc": "15943:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "15943:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
												"nativeSrc": "15826:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15924:6:7",
														"nodeType": "YulTypedName",
														"src": "15924:6:7",
														"type": ""
													}
												],
												"src": "15826:182:7"
											},
											{
												"body": {
													"nativeSrc": "16160:220:7",
													"nodeType": "YulBlock",
													"src": "16160:220:7",
													"statements": [
														{
															"nativeSrc": "16170:74:7",
															"nodeType": "YulAssignment",
															"src": "16170:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16236:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16236:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16177:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16177:58:7"
																},
																"nativeSrc": "16177:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16177:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16170:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16342:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16342:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
																	"nativeSrc": "16253:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16253:88:7"
																},
																"nativeSrc": "16253:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16253:93:7"
															},
															"nativeSrc": "16253:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16253:93:7"
														},
														{
															"nativeSrc": "16355:19:7",
															"nodeType": "YulAssignment",
															"src": "16355:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16366:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16362:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16362:3:7"
																},
																"nativeSrc": "16362:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16362:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16355:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16355:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16014:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16148:3:7",
														"nodeType": "YulTypedName",
														"src": "16148:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16156:3:7",
														"nodeType": "YulTypedName",
														"src": "16156:3:7",
														"type": ""
													}
												],
												"src": "16014:366:7"
											},
											{
												"body": {
													"nativeSrc": "16557:248:7",
													"nodeType": "YulBlock",
													"src": "16557:248:7",
													"statements": [
														{
															"nativeSrc": "16567:26:7",
															"nodeType": "YulAssignment",
															"src": "16567:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16579:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16579:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16590:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16590:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16575:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16575:3:7"
																},
																"nativeSrc": "16575:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16575:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16567:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16567:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16614:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16614:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16625:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16625:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16610:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16610:3:7"
																		},
																		"nativeSrc": "16610:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16610:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16633:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16633:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16639:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16639:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16629:3:7"
																		},
																		"nativeSrc": "16629:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16629:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16603:6:7"
																},
																"nativeSrc": "16603:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16603:47:7"
															},
															"nativeSrc": "16603:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16603:47:7"
														},
														{
															"nativeSrc": "16659:139:7",
															"nodeType": "YulAssignment",
															"src": "16659:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16793:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16793:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16667:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16667:124:7"
																},
																"nativeSrc": "16667:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16667:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16659:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16659:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16386:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16537:9:7",
														"nodeType": "YulTypedName",
														"src": "16537:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16552:4:7",
														"nodeType": "YulTypedName",
														"src": "16552:4:7",
														"type": ""
													}
												],
												"src": "16386:419:7"
											},
											{
												"body": {
													"nativeSrc": "16917:74:7",
													"nodeType": "YulBlock",
													"src": "16917:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16939:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16939:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16947:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16947:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16935:3:7"
																		},
																		"nativeSrc": "16935:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16935:14:7"
																	},
																	{
																		"hexValue": "4f776e6572206368616e676520616c726561647920726571756573746564",
																		"kind": "string",
																		"nativeSrc": "16951:32:7",
																		"nodeType": "YulLiteral",
																		"src": "16951:32:7",
																		"type": "",
																		"value": "Owner change already requested"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16928:6:7"
																},
																"nativeSrc": "16928:56:7",
																"nodeType": "YulFunctionCall",
																"src": "16928:56:7"
															},
															"nativeSrc": "16928:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "16928:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d",
												"nativeSrc": "16811:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16909:6:7",
														"nodeType": "YulTypedName",
														"src": "16909:6:7",
														"type": ""
													}
												],
												"src": "16811:180:7"
											},
											{
												"body": {
													"nativeSrc": "17143:220:7",
													"nodeType": "YulBlock",
													"src": "17143:220:7",
													"statements": [
														{
															"nativeSrc": "17153:74:7",
															"nodeType": "YulAssignment",
															"src": "17153:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17219:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17219:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17224:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17224:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17160:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17160:58:7"
																},
																"nativeSrc": "17160:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17160:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17153:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17325:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17325:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d",
																	"nativeSrc": "17236:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17236:88:7"
																},
																"nativeSrc": "17236:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17236:93:7"
															},
															"nativeSrc": "17236:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17236:93:7"
														},
														{
															"nativeSrc": "17338:19:7",
															"nodeType": "YulAssignment",
															"src": "17338:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17349:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17349:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17354:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17354:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17345:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17345:3:7"
																},
																"nativeSrc": "17345:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17345:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17338:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17338:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16997:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17131:3:7",
														"nodeType": "YulTypedName",
														"src": "17131:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17139:3:7",
														"nodeType": "YulTypedName",
														"src": "17139:3:7",
														"type": ""
													}
												],
												"src": "16997:366:7"
											},
											{
												"body": {
													"nativeSrc": "17540:248:7",
													"nodeType": "YulBlock",
													"src": "17540:248:7",
													"statements": [
														{
															"nativeSrc": "17550:26:7",
															"nodeType": "YulAssignment",
															"src": "17550:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17562:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17562:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17573:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17573:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17558:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17558:3:7"
																},
																"nativeSrc": "17558:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17558:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17550:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17550:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17597:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17597:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17608:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17608:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17593:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17593:3:7"
																		},
																		"nativeSrc": "17593:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17593:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17616:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17616:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17622:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17622:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17612:3:7"
																		},
																		"nativeSrc": "17612:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17612:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17586:6:7"
																},
																"nativeSrc": "17586:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17586:47:7"
															},
															"nativeSrc": "17586:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17586:47:7"
														},
														{
															"nativeSrc": "17642:139:7",
															"nodeType": "YulAssignment",
															"src": "17642:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17776:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17776:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17650:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17650:124:7"
																},
																"nativeSrc": "17650:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17650:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17642:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17642:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17369:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17520:9:7",
														"nodeType": "YulTypedName",
														"src": "17520:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17535:4:7",
														"nodeType": "YulTypedName",
														"src": "17535:4:7",
														"type": ""
													}
												],
												"src": "17369:419:7"
											},
											{
												"body": {
													"nativeSrc": "17900:116:7",
													"nodeType": "YulBlock",
													"src": "17900:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17922:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17922:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17930:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17930:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17918:3:7"
																		},
																		"nativeSrc": "17918:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17918:14:7"
																	},
																	{
																		"hexValue": "5661756c744d616e6167657220616464726573732063616e6e6f74206265207a",
																		"kind": "string",
																		"nativeSrc": "17934:34:7",
																		"nodeType": "YulLiteral",
																		"src": "17934:34:7",
																		"type": "",
																		"value": "VaultManager address cannot be z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17911:6:7"
																},
																"nativeSrc": "17911:58:7",
																"nodeType": "YulFunctionCall",
																"src": "17911:58:7"
															},
															"nativeSrc": "17911:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "17911:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17990:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17990:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17998:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17998:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17986:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17986:3:7"
																		},
																		"nativeSrc": "17986:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17986:15:7"
																	},
																	{
																		"hexValue": "65726f",
																		"kind": "string",
																		"nativeSrc": "18003:5:7",
																		"nodeType": "YulLiteral",
																		"src": "18003:5:7",
																		"type": "",
																		"value": "ero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17979:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17979:6:7"
																},
																"nativeSrc": "17979:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17979:30:7"
															},
															"nativeSrc": "17979:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "17979:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90",
												"nativeSrc": "17794:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17892:6:7",
														"nodeType": "YulTypedName",
														"src": "17892:6:7",
														"type": ""
													}
												],
												"src": "17794:222:7"
											},
											{
												"body": {
													"nativeSrc": "18168:220:7",
													"nodeType": "YulBlock",
													"src": "18168:220:7",
													"statements": [
														{
															"nativeSrc": "18178:74:7",
															"nodeType": "YulAssignment",
															"src": "18178:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18244:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18244:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18249:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18249:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18185:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18185:58:7"
																},
																"nativeSrc": "18185:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18185:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18178:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18178:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18350:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18350:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90",
																	"nativeSrc": "18261:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18261:88:7"
																},
																"nativeSrc": "18261:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18261:93:7"
															},
															"nativeSrc": "18261:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18261:93:7"
														},
														{
															"nativeSrc": "18363:19:7",
															"nodeType": "YulAssignment",
															"src": "18363:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18374:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18374:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18379:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18370:3:7"
																},
																"nativeSrc": "18370:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18370:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18363:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18022:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18156:3:7",
														"nodeType": "YulTypedName",
														"src": "18156:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18164:3:7",
														"nodeType": "YulTypedName",
														"src": "18164:3:7",
														"type": ""
													}
												],
												"src": "18022:366:7"
											},
											{
												"body": {
													"nativeSrc": "18565:248:7",
													"nodeType": "YulBlock",
													"src": "18565:248:7",
													"statements": [
														{
															"nativeSrc": "18575:26:7",
															"nodeType": "YulAssignment",
															"src": "18575:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18587:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18587:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18598:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18598:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18583:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18583:3:7"
																},
																"nativeSrc": "18583:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18583:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18575:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18575:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18622:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18622:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18633:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18633:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18618:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18618:3:7"
																		},
																		"nativeSrc": "18618:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18618:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18641:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18641:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18647:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18637:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18637:3:7"
																		},
																		"nativeSrc": "18637:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18637:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18611:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18611:6:7"
																},
																"nativeSrc": "18611:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18611:47:7"
															},
															"nativeSrc": "18611:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18611:47:7"
														},
														{
															"nativeSrc": "18667:139:7",
															"nodeType": "YulAssignment",
															"src": "18667:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18801:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18801:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18675:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18675:124:7"
																},
																"nativeSrc": "18675:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18675:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18667:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18667:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18394:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18545:9:7",
														"nodeType": "YulTypedName",
														"src": "18545:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18560:4:7",
														"nodeType": "YulTypedName",
														"src": "18560:4:7",
														"type": ""
													}
												],
												"src": "18394:419:7"
											},
											{
												"body": {
													"nativeSrc": "18925:70:7",
													"nodeType": "YulBlock",
													"src": "18925:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18947:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18947:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18955:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18955:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18943:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:7"
																		},
																		"nativeSrc": "18943:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18943:14:7"
																	},
																	{
																		"hexValue": "4f776e6572206368616e67652064656c6179206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "18959:28:7",
																		"nodeType": "YulLiteral",
																		"src": "18959:28:7",
																		"type": "",
																		"value": "Owner change delay not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:7"
																},
																"nativeSrc": "18936:52:7",
																"nodeType": "YulFunctionCall",
																"src": "18936:52:7"
															},
															"nativeSrc": "18936:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "18936:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4",
												"nativeSrc": "18819:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18917:6:7",
														"nodeType": "YulTypedName",
														"src": "18917:6:7",
														"type": ""
													}
												],
												"src": "18819:176:7"
											},
											{
												"body": {
													"nativeSrc": "19147:220:7",
													"nodeType": "YulBlock",
													"src": "19147:220:7",
													"statements": [
														{
															"nativeSrc": "19157:74:7",
															"nodeType": "YulAssignment",
															"src": "19157:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19223:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19223:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19228:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19228:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19164:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19164:58:7"
																},
																"nativeSrc": "19164:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19164:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19157:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19157:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19329:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19329:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4",
																	"nativeSrc": "19240:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19240:88:7"
																},
																"nativeSrc": "19240:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19240:93:7"
															},
															"nativeSrc": "19240:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19240:93:7"
														},
														{
															"nativeSrc": "19342:19:7",
															"nodeType": "YulAssignment",
															"src": "19342:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19353:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19353:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19358:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19349:3:7"
																},
																"nativeSrc": "19349:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19349:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19342:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19001:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19135:3:7",
														"nodeType": "YulTypedName",
														"src": "19135:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19143:3:7",
														"nodeType": "YulTypedName",
														"src": "19143:3:7",
														"type": ""
													}
												],
												"src": "19001:366:7"
											},
											{
												"body": {
													"nativeSrc": "19544:248:7",
													"nodeType": "YulBlock",
													"src": "19544:248:7",
													"statements": [
														{
															"nativeSrc": "19554:26:7",
															"nodeType": "YulAssignment",
															"src": "19554:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19566:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19566:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19577:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19577:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19562:3:7"
																},
																"nativeSrc": "19562:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19562:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19554:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19554:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19601:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19601:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19612:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19612:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19597:3:7"
																		},
																		"nativeSrc": "19597:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19597:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19620:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19620:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19626:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19626:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19616:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19616:3:7"
																		},
																		"nativeSrc": "19616:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19616:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19590:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19590:6:7"
																},
																"nativeSrc": "19590:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19590:47:7"
															},
															"nativeSrc": "19590:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19590:47:7"
														},
														{
															"nativeSrc": "19646:139:7",
															"nodeType": "YulAssignment",
															"src": "19646:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19780:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19780:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19654:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19654:124:7"
																},
																"nativeSrc": "19654:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19654:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19646:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19646:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19373:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19524:9:7",
														"nodeType": "YulTypedName",
														"src": "19524:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19539:4:7",
														"nodeType": "YulTypedName",
														"src": "19539:4:7",
														"type": ""
													}
												],
												"src": "19373:419:7"
											},
											{
												"body": {
													"nativeSrc": "19952:288:7",
													"nodeType": "YulBlock",
													"src": "19952:288:7",
													"statements": [
														{
															"nativeSrc": "19962:26:7",
															"nodeType": "YulAssignment",
															"src": "19962:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19974:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19974:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19985:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19985:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19970:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19970:3:7"
																},
																"nativeSrc": "19970:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19970:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19962:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19962:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20042:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20042:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20055:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20055:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20066:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20066:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20051:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20051:3:7"
																		},
																		"nativeSrc": "20051:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20051:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19998:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19998:43:7"
																},
																"nativeSrc": "19998:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19998:71:7"
															},
															"nativeSrc": "19998:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19998:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20123:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20123:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20136:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20136:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20147:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20147:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20132:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20132:3:7"
																		},
																		"nativeSrc": "20132:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20132:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20079:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20079:43:7"
																},
																"nativeSrc": "20079:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20079:72:7"
															},
															"nativeSrc": "20079:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20079:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20205:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20205:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20218:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20218:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20229:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20229:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20214:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20214:3:7"
																		},
																		"nativeSrc": "20214:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20214:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20161:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20161:43:7"
																},
																"nativeSrc": "20161:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20161:72:7"
															},
															"nativeSrc": "20161:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20161:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19798:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19908:9:7",
														"nodeType": "YulTypedName",
														"src": "19908:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19920:6:7",
														"nodeType": "YulTypedName",
														"src": "19920:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19928:6:7",
														"nodeType": "YulTypedName",
														"src": "19928:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19936:6:7",
														"nodeType": "YulTypedName",
														"src": "19936:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19947:4:7",
														"nodeType": "YulTypedName",
														"src": "19947:4:7",
														"type": ""
													}
												],
												"src": "19798:442:7"
											},
											{
												"body": {
													"nativeSrc": "20274:152:7",
													"nodeType": "YulBlock",
													"src": "20274:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20291:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20291:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20294:77:7",
																		"nodeType": "YulLiteral",
																		"src": "20294:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20284:6:7"
																},
																"nativeSrc": "20284:88:7",
																"nodeType": "YulFunctionCall",
																"src": "20284:88:7"
															},
															"nativeSrc": "20284:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "20284:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20388:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20388:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20391:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20381:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20381:6:7"
																},
																"nativeSrc": "20381:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20381:15:7"
															},
															"nativeSrc": "20381:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20381:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20412:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20415:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20415:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20405:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20405:6:7"
																},
																"nativeSrc": "20405:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20405:15:7"
															},
															"nativeSrc": "20405:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20405:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20246:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "20246:180:7"
											},
											{
												"body": {
													"nativeSrc": "20477:149:7",
													"nodeType": "YulBlock",
													"src": "20477:149:7",
													"statements": [
														{
															"nativeSrc": "20487:25:7",
															"nodeType": "YulAssignment",
															"src": "20487:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20510:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20510:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20492:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20492:17:7"
																},
																"nativeSrc": "20492:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20492:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20487:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20487:1:7"
																}
															]
														},
														{
															"nativeSrc": "20521:25:7",
															"nodeType": "YulAssignment",
															"src": "20521:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20544:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20544:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20526:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20526:17:7"
																},
																"nativeSrc": "20526:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20526:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20521:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20521:1:7"
																}
															]
														},
														{
															"nativeSrc": "20555:17:7",
															"nodeType": "YulAssignment",
															"src": "20555:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20567:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20567:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20570:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20570:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20563:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20563:3:7"
																},
																"nativeSrc": "20563:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20563:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20555:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20555:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20597:22:7",
																"nodeType": "YulBlock",
																"src": "20597:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20599:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20599:16:7"
																			},
																			"nativeSrc": "20599:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20599:18:7"
																		},
																		"nativeSrc": "20599:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20599:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "20588:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20588:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "20594:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20594:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20585:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20585:2:7"
																},
																"nativeSrc": "20585:11:7",
																"nodeType": "YulFunctionCall",
																"src": "20585:11:7"
															},
															"nativeSrc": "20582:37:7",
															"nodeType": "YulIf",
															"src": "20582:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20432:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20463:1:7",
														"nodeType": "YulTypedName",
														"src": "20463:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20466:1:7",
														"nodeType": "YulTypedName",
														"src": "20466:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20472:4:7",
														"nodeType": "YulTypedName",
														"src": "20472:4:7",
														"type": ""
													}
												],
												"src": "20432:194:7"
											},
											{
												"body": {
													"nativeSrc": "20660:152:7",
													"nodeType": "YulBlock",
													"src": "20660:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20677:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20677:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20680:77:7",
																		"nodeType": "YulLiteral",
																		"src": "20680:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20670:6:7"
																},
																"nativeSrc": "20670:88:7",
																"nodeType": "YulFunctionCall",
																"src": "20670:88:7"
															},
															"nativeSrc": "20670:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "20670:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20774:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20774:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20777:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20777:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20767:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20767:6:7"
																},
																"nativeSrc": "20767:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20767:15:7"
															},
															"nativeSrc": "20767:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20767:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20798:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20798:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20801:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20801:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20791:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20791:6:7"
																},
																"nativeSrc": "20791:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20791:15:7"
															},
															"nativeSrc": "20791:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20791:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "20632:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "20632:180:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the developer\")\n\n    }\n\n    function abi_encode_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200(memPtr) {\n\n        mstore(add(memPtr, 0), \"No developer change request pend\")\n\n        mstore(add(memPtr, 32), \"ing\")\n\n    }\n\n    function abi_encode_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the VaultManager\")\n\n    }\n\n    function abi_encode_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No owner change request pending\")\n\n    }\n\n    function abi_encode_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c(memPtr) {\n\n        mstore(add(memPtr, 0), \"New developer cannot be zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816(memPtr) {\n\n        mstore(add(memPtr, 0), \"Developer change already request\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592(memPtr) {\n\n        mstore(add(memPtr, 0), \"Developer change delay not met\")\n\n    }\n\n    function abi_encode_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"New owner cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner change already requested\")\n\n    }\n\n    function abi_encode_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90(memPtr) {\n\n        mstore(add(memPtr, 0), \"VaultManager address cannot be z\")\n\n        mstore(add(memPtr, 32), \"ero\")\n\n    }\n\n    function abi_encode_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner change delay not met\")\n\n    }\n\n    function abi_encode_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101cc575f3560e01c806388dacbcc11610102578063a9059cbb116100a0578063dd62ed3e1161006f578063dd62ed3e146104c0578063dd940cb5146104f0578063e9c559a9146104fa578063f2fde38b14610518576101cc565b8063a9059cbb14610438578063b543503e14610468578063b9c28d2914610484578063ca4b208b146104a2576101cc565b806395d89b41116100dc57806395d89b41146103d85780639e12279d146103f6578063a67a91e314610412578063a86c83741461041c576101cc565b806388dacbcc146103925780638a4adf241461039c5780638da5cb5b146103ba576101cc565b80632b7df8041161016f57806340c10f191161014957806340c10f191461030c578063477348921461032857806370a0823114610358578063715018a614610388576101cc565b80632b7df804146102b25780632ff2e9dc146102d0578063313ce567146102ee576101cc565b806306fdde03116101ab57806306fdde0314610216578063095ea7b31461023457806318160ddd1461026457806323b872dd14610282576101cc565b8062ce8e3e146101d057806305069f22146101ee578063067453a61461020c575b5f5ffd5b6101d8610534565b6040516101e59190612098565b60405180910390f35b6101f66105bf565b60405161020391906120c7565b60405180910390f35b6102146105e4565b005b61021e610743565b60405161022b9190612150565b60405180910390f35b61024e600480360381019061024991906121d1565b6107d3565b60405161025b9190612229565b60405180910390f35b61026c6107f5565b6040516102799190612251565b60405180910390f35b61029c6004803603810190610297919061226a565b6107fe565b6040516102a99190612229565b60405180910390f35b6102ba61082c565b6040516102c79190612251565b60405180910390f35b6102d8610832565b6040516102e59190612251565b60405180910390f35b6102f661083e565b60405161030391906122d5565b60405180910390f35b610326600480360381019061032191906121d1565b610846565b005b610342600480360381019061033d91906122ee565b6108e3565b60405161034f9190612251565b60405180910390f35b610372600480360381019061036d91906122ee565b610929565b60405161037f9190612251565b60405180910390f35b61039061096e565b005b61039a610981565b005b6103a4610a59565b6040516103b191906120c7565b60405180910390f35b6103c2610a7e565b6040516103cf91906120c7565b60405180910390f35b6103e0610aa6565b6040516103ed9190612150565b60405180910390f35b610410600480360381019061040b91906122ee565b610b36565b005b61041a610c94565b005b610436600480360381019061043191906122ee565b610e62565b005b610452600480360381019061044d91906121d1565b611047565b60405161045f9190612229565b60405180910390f35b610482600480360381019061047d91906122ee565b611069565b005b61048c611122565b60405161049991906120c7565b60405180910390f35b6104aa611147565b6040516104b791906120c7565b60405180910390f35b6104da60048036038101906104d59190612319565b61116c565b6040516104e79190612251565b60405180910390f35b6104f86111ee565b005b6105026113f2565b60405161050f9190612251565b60405180910390f35b610532600480360381019061052d91906122ee565b6113f8565b005b606060088054806020026020016040519081016040528092919081815260200182805480156105b557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161056c575b5050505050905090565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a906123a1565b60405180910390fd5b5f600e54116106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae9061242f565b60405180910390fd5b5f600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600e819055503373ffffffffffffffffffffffffffffffffffffffff167fccd8c9d5857ed509892cb6ba9a608f25fa4cfed016a475a02e39837f019461cc60405160405180910390a2565b6060600380546107529061247a565b80601f016020809104026020016040519081016040528092919081815260200182805461077e9061247a565b80156107c95780601f106107a0576101008083540402835291602001916107c9565b820191905f5260205f20905b8154815290600101906020018083116107ac57829003601f168201915b5050505050905090565b5f5f6107dd61147c565b90506107ea818585611483565b600191505092915050565b5f600254905090565b5f5f61080861147c565b9050610815858285611495565b610820858585611528565b60019150509392505050565b600d5481565b671bc16d674ec8000081565b5f6012905090565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc906124f4565b60405180910390fd5b6108df828261155c565b5050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61097661157c565b61097f5f611603565b565b61098961157c565b5f600d54116109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c49061255c565b60405180910390fd5b5f600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600d819055503373ffffffffffffffffffffffffffffffffffffffff167f71929bfc41c49ae5e05a53003b97907866c902f9807734ce3a0507bfdae425f960405160405180910390a2565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610ab59061247a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae19061247a565b8015610b2c5780601f10610b0357610100808354040283529160200191610b2c565b820191905f5260205f20905b815481529060010190602001808311610b0f57829003601f168201915b5050505050905090565b610b3e61157c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba3906125ea565b60405180910390fd5b5f600e5414610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be790612678565b60405180910390fd5b80600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600e819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f11d251823298414f86a55ee989c577145357724264d4f6d10632f865a55488fb60405160405180910390a350565b610c9c61157c565b5f600e5411610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd79061242f565b60405180910390fd5b6276a700600e54610cf191906126c3565b421015610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90612740565b60405180910390fd5b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600e819055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fe823578be672ebcfc6a23fce5293a8769dd2449c1ae45d769b8ba0fc3435625f60405160405180910390a35050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee8906123a1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f56906127a8565b60405180910390fd5b5f600d5414610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a90612810565b60405180910390fd5b80600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600d819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe4d82e46d7a4a49d024ed3cdf35530213f02413245e7bf0d20121174c089e0d260405160405180910390a350565b5f5f61105161147c565b905061105e818585611528565b600191505092915050565b61107161157c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d69061289e565b60405180910390fd5b80600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611274906123a1565b60405180910390fd5b5f600d54116112c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b89061255c565b60405180910390fd5b6276a700600d546112d291906126c3565b421015611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b90612906565b60405180910390fd5b5f61131d610a7e565b90505f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061134d81611603565b5f600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600d819055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600e5481565b61140061157c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611470575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161146791906120c7565b60405180910390fd5b61147981611603565b50565b5f33905090565b61149083838360016116c6565b505050565b5f6114a0848461116c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156115225781811015611513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161150a93929190612924565b60405180910390fd5b61152184848484035f6116c6565b5b50505050565b611533838383611895565b6115458361154085610929565b611985565b6115578261155284610929565b611985565b505050565b6115668282611b99565b6115788261157384610929565b611985565b5050565b61158461147c565b73ffffffffffffffffffffffffffffffffffffffff166115a2610a7e565b73ffffffffffffffffffffffffffffffffffffffff1614611601576115c561147c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115f891906120c7565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611736575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161172d91906120c7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117a6575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161179d91906120c7565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561188f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118869190612251565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611905575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118fc91906120c7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611975575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161196c91906120c7565b60405180910390fd5b611980838383611c18565b505050565b5f811180156119db575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611a9a57600160065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600882908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b53565b5f81148015611aef575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15611b52575f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611b5182611e31565b5b5b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c09575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c0091906120c7565b60405180910390fd5b611c145f8383611c18565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c68578060025f828254611c5c91906126c3565b92505081905550611d36565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611cf1578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ce893929190612924565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d7d578060025f8282540392505081905550611dc7565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e249190612251565b60405180910390a3505050565b5f5f90505b600880549050811015611fad578173ffffffffffffffffffffffffffffffffffffffff1660088281548110611e6e57611e6d612959565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611fa05760086001600880549050611ec59190612986565b81548110611ed657611ed5612959565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660088281548110611f1257611f11612959565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008805480611f6957611f686129b9565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611fad565b8080600101915050611e36565b5050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61200382611fda565b9050919050565b61201381611ff9565b82525050565b5f612024838361200a565b60208301905092915050565b5f602082019050919050565b5f61204682611fb1565b6120508185611fbb565b935061205b83611fcb565b805f5b8381101561208b5781516120728882612019565b975061207d83612030565b92505060018101905061205e565b5085935050505092915050565b5f6020820190508181035f8301526120b0818461203c565b905092915050565b6120c181611ff9565b82525050565b5f6020820190506120da5f8301846120b8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612122826120e0565b61212c81856120ea565b935061213c8185602086016120fa565b61214581612108565b840191505092915050565b5f6020820190508181035f8301526121688184612118565b905092915050565b5f5ffd5b61217d81611ff9565b8114612187575f5ffd5b50565b5f8135905061219881612174565b92915050565b5f819050919050565b6121b08161219e565b81146121ba575f5ffd5b50565b5f813590506121cb816121a7565b92915050565b5f5f604083850312156121e7576121e6612170565b5b5f6121f48582860161218a565b9250506020612205858286016121bd565b9150509250929050565b5f8115159050919050565b6122238161220f565b82525050565b5f60208201905061223c5f83018461221a565b92915050565b61224b8161219e565b82525050565b5f6020820190506122645f830184612242565b92915050565b5f5f5f6060848603121561228157612280612170565b5b5f61228e8682870161218a565b935050602061229f8682870161218a565b92505060406122b0868287016121bd565b9150509250925092565b5f60ff82169050919050565b6122cf816122ba565b82525050565b5f6020820190506122e85f8301846122c6565b92915050565b5f6020828403121561230357612302612170565b5b5f6123108482850161218a565b91505092915050565b5f5f6040838503121561232f5761232e612170565b5b5f61233c8582860161218a565b925050602061234d8582860161218a565b9150509250929050565b7f43616c6c6572206973206e6f742074686520646576656c6f70657200000000005f82015250565b5f61238b601b836120ea565b915061239682612357565b602082019050919050565b5f6020820190508181035f8301526123b88161237f565b9050919050565b7f4e6f20646576656c6f706572206368616e676520726571756573742070656e645f8201527f696e670000000000000000000000000000000000000000000000000000000000602082015250565b5f6124196023836120ea565b9150612424826123bf565b604082019050919050565b5f6020820190508181035f8301526124468161240d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061249157607f821691505b6020821081036124a4576124a361244d565b5b50919050565b7f43616c6c6572206973206e6f7420746865205661756c744d616e6167657200005f82015250565b5f6124de601e836120ea565b91506124e9826124aa565b602082019050919050565b5f6020820190508181035f83015261250b816124d2565b9050919050565b7f4e6f206f776e6572206368616e676520726571756573742070656e64696e67005f82015250565b5f612546601f836120ea565b915061255182612512565b602082019050919050565b5f6020820190508181035f8301526125738161253a565b9050919050565b7f4e657720646576656c6f7065722063616e6e6f74206265207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6125d46024836120ea565b91506125df8261257a565b604082019050919050565b5f6020820190508181035f830152612601816125c8565b9050919050565b7f446576656c6f706572206368616e676520616c726561647920726571756573745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f6126626022836120ea565b915061266d82612608565b604082019050919050565b5f6020820190508181035f83015261268f81612656565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126cd8261219e565b91506126d88361219e565b92508282019050808211156126f0576126ef612696565b5b92915050565b7f446576656c6f706572206368616e67652064656c6179206e6f74206d657400005f82015250565b5f61272a601e836120ea565b9150612735826126f6565b602082019050919050565b5f6020820190508181035f8301526127578161271e565b9050919050565b7f4e6577206f776e65722063616e6e6f74206265207a65726f20616464726573735f82015250565b5f6127926020836120ea565b915061279d8261275e565b602082019050919050565b5f6020820190508181035f8301526127bf81612786565b9050919050565b7f4f776e6572206368616e676520616c72656164792072657175657374656400005f82015250565b5f6127fa601e836120ea565b9150612805826127c6565b602082019050919050565b5f6020820190508181035f830152612827816127ee565b9050919050565b7f5661756c744d616e6167657220616464726573732063616e6e6f74206265207a5f8201527f65726f0000000000000000000000000000000000000000000000000000000000602082015250565b5f6128886023836120ea565b91506128938261282e565b604082019050919050565b5f6020820190508181035f8301526128b58161287c565b9050919050565b7f4f776e6572206368616e67652064656c6179206e6f74206d65740000000000005f82015250565b5f6128f0601a836120ea565b91506128fb826128bc565b602082019050919050565b5f6020820190508181035f83015261291d816128e4565b9050919050565b5f6060820190506129375f8301866120b8565b6129446020830185612242565b6129516040830184612242565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6129908261219e565b915061299b8361219e565b92508282039050818111156129b3576129b2612696565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea26469706673582212204563d810cf716e9e405592decb62b6d71af319d9ac52b3d35c6faefd41ee487e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88DACBCC GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xDD940CB5 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xE9C559A9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x518 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xB543503E EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xB9C28D29 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xCA4B208B EQ PUSH2 0x4A2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x9E12279D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xA67A91E3 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA86C8374 EQ PUSH2 0x41C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x88DACBCC EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BA JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2B7DF804 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x47734892 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x388 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2B7DF804 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EE JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x282 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH3 0xCE8E3E EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x5069F22 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x67453A6 EQ PUSH2 0x20C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D8 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F8 PUSH2 0x11EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x502 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x13F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x56C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD GT PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCCD8C9D5857ED509892CB6BA9A608F25FA4CFED016A475A02E39837F019461CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x752 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DD PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x7EA DUP2 DUP6 DUP6 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x808 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x815 DUP6 DUP3 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x820 DUP6 DUP6 DUP6 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF DUP3 DUP3 PUSH2 0x155C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x97F PUSH0 PUSH2 0x1603 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x989 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD GT PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71929BFC41C49AE5E05A53003B97907866C902F9807734CE3A0507BFDAE425F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAB5 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE1 SWAP1 PUSH2 0x247A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3E PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA3 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11D251823298414F86A55EE989C577145357724264D4F6D10632F865A55488FB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xC9C PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH1 0xE SLOAD GT PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xE SLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2A SWAP1 PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE823578BE672EBCFC6A23FCE5293A8769DD2449C1AE45D769B8BA0FC3435625F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD SLOAD EQ PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE4D82E46D7A4A49D024ED3CDF35530213F02413245E7BF0D20121174C089E0D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1051 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP PUSH2 0x105E DUP2 DUP6 DUP6 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1071 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD SLOAD GT PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xD SLOAD PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP1 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x131D PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x134D DUP2 PUSH2 0x1603 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x157C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1470 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1479 DUP2 PUSH2 0x1603 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A0 DUP5 DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1522 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1521 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x16C6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1533 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x1545 DUP4 PUSH2 0x1540 DUP6 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1557 DUP3 PUSH2 0x1552 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1566 DUP3 DUP3 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x1578 DUP3 PUSH2 0x1573 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1584 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A2 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1601 JUMPI PUSH2 0x15C5 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1736 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172D SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179D SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x188F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1975 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1980 DUP4 DUP4 DUP4 PUSH2 0x1C18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x19DB JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1A9A JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B53 JUMP JUMPDEST PUSH0 DUP2 EQ DUP1 ISZERO PUSH2 0x1AEF JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B52 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B51 DUP3 PUSH2 0x1E31 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C14 PUSH0 DUP4 DUP4 PUSH2 0x1C18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C68 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x26C3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D36 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DC7 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E24 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1FAD JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA0 JUMPI PUSH1 0x8 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x1EC5 SWAP2 SWAP1 PUSH2 0x2986 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x2959 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x29B9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1FAD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1E36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2024 DUP4 DUP4 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2046 DUP3 PUSH2 0x1FB1 JUMP JUMPDEST PUSH2 0x2050 DUP2 DUP6 PUSH2 0x1FBB JUMP JUMPDEST SWAP4 POP PUSH2 0x205B DUP4 PUSH2 0x1FCB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x208B JUMPI DUP2 MLOAD PUSH2 0x2072 DUP9 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP8 POP PUSH2 0x207D DUP4 PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x205E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B0 DUP2 DUP5 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20DA PUSH0 DUP4 ADD DUP5 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2122 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0x212C DUP2 DUP6 PUSH2 0x20EA JUMP JUMPDEST SWAP4 POP PUSH2 0x213C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x2145 DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2168 DUP2 DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x217D DUP2 PUSH2 0x1FF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2198 DUP2 PUSH2 0x2174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x219E JUMP JUMPDEST DUP2 EQ PUSH2 0x21BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x21A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2223 DUP2 PUSH2 0x220F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP5 PUSH2 0x221A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x219E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2264 PUSH0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228E DUP7 DUP3 DUP8 ADD PUSH2 0x218A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x229F DUP7 DUP3 DUP8 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22B0 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x22BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2303 JUMPI PUSH2 0x2302 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2310 DUP5 DUP3 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232F JUMPI PUSH2 0x232E PUSH2 0x2170 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x233C DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x234D DUP6 DUP3 DUP7 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742074686520646576656C6F7065720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238B PUSH1 0x1B DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20646576656C6F706572206368616E676520726571756573742070656E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E670000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2419 PUSH1 0x23 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2446 DUP2 PUSH2 0x240D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2491 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x244D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865205661756C744D616E616765720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206F776E6572206368616E676520726571756573742070656E64696E6700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2546 PUSH1 0x1F DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2551 DUP3 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2573 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720646576656C6F7065722063616E6E6F74206265207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D4 PUSH1 0x24 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x25DF DUP3 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2601 DUP2 PUSH2 0x25C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446576656C6F706572206368616E676520616C72656164792072657175657374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2662 PUSH1 0x22 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x266D DUP3 PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x268F DUP2 PUSH2 0x2656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26CD DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x26D8 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x2696 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446576656C6F706572206368616E67652064656C6179206E6F74206D65740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x272A PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2735 DUP3 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2792 PUSH1 0x20 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27BF DUP2 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206368616E676520616C7265616479207265717565737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27FA PUSH1 0x1E DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2805 DUP3 PUSH2 0x27C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2827 DUP2 PUSH2 0x27EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C744D616E6167657220616464726573732063616E6E6F74206265207A PUSH0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2888 PUSH1 0x23 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2893 DUP3 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B5 DUP2 PUSH2 0x287C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206368616E67652064656C6179206E6F74206D6574000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28F0 PUSH1 0x1A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x28FB DUP3 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x291D DUP2 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2937 PUSH0 DUP4 ADD DUP7 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2951 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2990 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x299B DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29B3 JUMPI PUSH2 0x29B2 PUSH2 0x2696 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT PUSH4 0xD810CF71 PUSH15 0x9E405592DECB62B6D71AF319D9AC52 0xB3 0xD3 TLOAD PUSH16 0xAEFD41EE487E64736F6C634300081C00 CALLER ",
							"sourceMap": "540:7687:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4279:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1115:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7306:285;;;:::i;:::-;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1192:37:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;599:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2382:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5097:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4417:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;5833:257:6;;;:::i;:::-;;1042:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6810:422:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7682:543;;;:::i;:::-;;5381:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4681:197:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1151:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6177:505:6;;;:::i;:::-;;1235:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4279:90:6;4322:16;4357:5;4350:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4279:90;:::o;1115:30::-;;;;;;;;;;;;;:::o;7306:285::-;2624:9;;;;;;;;;;;2610:23;;:10;:23;;;2602:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7409:1:::1;7380:26;;:30;7372:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7491:1;7461:19;;:32;;;;;;;;;;;;;;;;;;7532:1;7503:26;:30;;;;7573:10;7549:35;;;;;;;;;;;;7306:285::o:0;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1192:37:6:-;;;;:::o;599:51::-;640:10;599:51;:::o;2382:91::-;2440:5;2464:2;2457:9;;2382:91;:::o;5097:164::-;5180:12;;;;;;;;;;;5166:26;;:10;:26;;;5158:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5237:17;5243:2;5247:6;5237:5;:17::i;:::-;5097:164;;:::o;4417:112::-;4478:7;4504:12;:18;4517:4;4504:18;;;;;;;;;;;;;;;;4497:25;;4417:112;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5833:257:6:-;1531:13:0;:11;:13::i;:::-;5924:1:6::1;5899:22;;:26;5891:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5998:1;5972:15;;:28;;;;;;;;;;;;;;;;;;6035:1;6010:22;:26;;;;6072:10;6052:31;;;;;;;;;;;;5833:257::o:0;1042:27::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;6810:422:6:-;1531:13:0;:11;:13::i;:::-;6927:1:6::1;6902:27;;:13;:27;;::::0;6894:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7018:1;6988:26;;:31;6980:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7091:13;7069:19;;:35;;;;;;;;;;;;;;;;;;7143:15;7114:26;:44;;;;7211:13;7174:51;;7199:10;7174:51;;;;;;;;;;;;6810:422:::0;:::o;7682:543::-;1531:13:0;:11;:13::i;:::-;7783:1:6::1;7754:26;;:30;7746:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:7;7861:26;;:49;;;;:::i;:::-;7842:15;:68;;7834:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;7956:20;7979:9;;;;;;;;;;;7956:32;;7998:20;8021:19;;;;;;;;;;;7998:42;;8063:12;8051:9;;:24;;;;;;;;;;;;;;;;;;8116:1;8086:19;;:32;;;;;;;;;;;;;;;;;;8157:1;8128:26;:30;;;;8205:12;8174:44;;8191:12;8174:44;;;;;;;;;;;;7736:489;;7682:543::o:0;5381:382::-;2624:9;;;;;;;;;;;2610:23;;:10;:23;;;2602:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5490:1:::1;5469:23;;:9;:23;;::::0;5461:68:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5573:1;5547:22;;:27;5539:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5638:9;5620:15;;:27;;;;;;;;;;;;;;;;;;5682:15;5657:22;:40;;;;5746:9;5713:43;;5734:10;5713:43;;;;;;;;;;;;5381:382:::0;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;4681:197:6:-;1531:13:0;:11;:13::i;:::-;4791:1:6::1;4766:27;;:13;:27;;::::0;4758:75:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4858:13;4843:12;;:28;;;;;;;;;;;;;;;;;;4681:197:::0;:::o;1151:34::-;;;;;;;;;;;;;:::o;984:24::-;;;;;;;;;;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;6177:505:6:-;2624:9;;;;;;;;;;;2610:23;;:10;:23;;;2602:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6274:1:::1;6249:22;;:26;6241:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:7;6348:22;;:45;;;;:::i;:::-;6329:15;:64;;6321:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;6435:16;6454:7;:5;:7::i;:::-;6435:26;;6471:16;6490:15;;;;;;;;;;;6471:34;;6516:28;6535:8;6516:18;:28::i;:::-;6581:1;6555:15;;:28;;;;;;;;;;;;;;;;;;6618:1;6593:22;:26;;;;6666:8;6635:40;;6656:8;6635:40;;;;;;;;;;;;6231:451;;6177:505::o:0;1235:41::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8742:128:2:-;8826:37;8835:5;8842:7;8851:5;8858:4;8826:8;:37::i;:::-;8742:128;;;:::o;10431:476::-;10530:24;10557:25;10567:5;10574:7;10557:9;:25::i;:::-;10530:52;;10615:17;10596:16;:36;10592:309;;;10671:5;10652:16;:24;10648:130;;;10730:7;10739:16;10757:5;10703:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10648:130;10819:57;10828:5;10835:7;10863:5;10844:16;:24;10870:5;10819:8;:57::i;:::-;10592:309;10520:387;10431:476;;;:::o;2988:392:6:-;3116:42;3132:6;3140:9;3151:6;3116:15;:42::i;:::-;3217:44;3235:6;3243:17;3253:6;3243:9;:17::i;:::-;3217;:44::i;:::-;3323:50;3341:9;3352:20;3362:9;3352;:20::i;:::-;3323:17;:50::i;:::-;2988:392;;;:::o;2743:167::-;2819:28;2831:7;2840:6;2819:11;:28::i;:::-;2857:46;2875:7;2884:18;2894:7;2884:9;:18::i;:::-;2857:17;:46::i;:::-;2743:167;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9717:432:2:-;9846:1;9829:19;;:5;:19;;;9825:89;;9900:1;9871:32;;;;;;;;;;;:::i;:::-;;;;;;;;9825:89;9946:1;9927:21;;:7;:21;;;9923:90;;9999:1;9971:31;;;;;;;;;;;:::i;:::-;;;;;;;;9923:90;10052:5;10022:11;:18;10034:5;10022:18;;;;;;;;;;;;;;;:27;10041:7;10022:27;;;;;;;;;;;;;;;:35;;;;10071:9;10067:76;;;10117:7;10101:31;;10110:5;10101:31;;;10126:5;10101:31;;;;;;:::i;:::-;;;;;;;;10067:76;9717:432;;;;:::o;5393:308::-;5500:1;5484:18;;:4;:18;;;5480:86;;5552:1;5525:30;;;;;;;;;;;:::i;:::-;;;;;;;;5480:86;5593:1;5579:16;;:2;:16;;;5575:86;;5647:1;5618:32;;;;;;;;;;;:::i;:::-;;;;;;;;5575:86;5670:24;5678:4;5684:2;5688:5;5670:7;:24::i;:::-;5393:308;;;:::o;3465:361:6:-;3556:1;3546:7;:11;:32;;;;;3562:10;:16;3573:4;3562:16;;;;;;;;;;;;;;;;;;;;;;;;;3561:17;3546:32;3542:240;;;3613:4;3594:10;:16;3605:4;3594:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3631:5;3642:4;3631:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3542:240;;;3679:1;3668:7;:12;:32;;;;;3684:10;:16;3695:4;3684:16;;;;;;;;;;;;;;;;;;;;;;;;;3668:32;3664:118;;;3735:5;3716:10;:16;3727:4;3716:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3754:17;3766:4;3754:11;:17::i;:::-;3664:118;3542:240;3812:7;3791:12;:18;3804:4;3791:18;;;;;;;;;;;;;;;:28;;;;3465:361;;:::o;7466:216:2:-;7563:1;7544:21;;:7;:21;;;7540:91;;7617:1;7588:32;;;;;;;;;;;:::i;:::-;;;;;;;;7540:91;7640:35;7656:1;7660:7;7669:5;7640:7;:35::i;:::-;7466:216;;:::o;6016:1107::-;6121:1;6105:18;;:4;:18;;;6101:540;;6257:5;6241:12;;:21;;;;;;;:::i;:::-;;;;;;;;6101:540;;;6293:19;6315:9;:15;6325:4;6315:15;;;;;;;;;;;;;;;;6293:37;;6362:5;6348:11;:19;6344:115;;;6419:4;6425:11;6438:5;6394:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6344:115;6611:5;6597:11;:19;6579:9;:15;6589:4;6579:15;;;;;;;;;;;;;;;:37;;;;6279:362;6101:540;6669:1;6655:16;;:2;:16;;;6651:425;;6834:5;6818:12;;:21;;;;;;;;;;;6651:425;;;7046:5;7029:9;:13;7039:2;7029:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6651:425;7106:2;7091:25;;7100:4;7091:25;;;7110:5;7091:25;;;;;;:::i;:::-;;;;;;;;6016:1107;;;:::o;3895:322:6:-;3954:9;3966:1;3954:13;;3949:262;3973:5;:12;;;;3969:1;:16;3949:262;;;4022:4;4010:16;;:5;4016:1;4010:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:16;;;4006:195;;4057:5;4078:1;4063:5;:12;;;;:16;;;;:::i;:::-;4057:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4046:5;4052:1;4046:8;;;;;;;;:::i;:::-;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;4128:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4181:5;;4006:195;3987:3;;;;;;;3949:262;;;;3895:322;:::o;7:114:7:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2254:118::-;2341:24;2359:5;2341:24;:::i;:::-;2336:3;2329:37;2254:118;;:::o;2378:222::-;2471:4;2509:2;2498:9;2494:18;2486:26;;2522:71;2590:1;2579:9;2575:17;2566:6;2522:71;:::i;:::-;2378:222;;;;:::o;2606:99::-;2658:6;2692:5;2686:12;2676:22;;2606:99;;;:::o;2711:169::-;2795:11;2829:6;2824:3;2817:19;2869:4;2864:3;2860:14;2845:29;;2711:169;;;;:::o;2886:139::-;2975:6;2970:3;2965;2959:23;3016:1;3007:6;3002:3;2998:16;2991:27;2886:139;;;:::o;3031:102::-;3072:6;3123:2;3119:7;3114:2;3107:5;3103:14;3099:28;3089:38;;3031:102;;;:::o;3139:377::-;3227:3;3255:39;3288:5;3255:39;:::i;:::-;3310:71;3374:6;3369:3;3310:71;:::i;:::-;3303:78;;3390:65;3448:6;3443:3;3436:4;3429:5;3425:16;3390:65;:::i;:::-;3480:29;3502:6;3480:29;:::i;:::-;3475:3;3471:39;3464:46;;3231:285;3139:377;;;;:::o;3522:313::-;3635:4;3673:2;3662:9;3658:18;3650:26;;3722:9;3716:4;3712:20;3708:1;3697:9;3693:17;3686:47;3750:78;3823:4;3814:6;3750:78;:::i;:::-;3742:86;;3522:313;;;;:::o;3922:117::-;4031:1;4028;4021:12;4168:122;4241:24;4259:5;4241:24;:::i;:::-;4234:5;4231:35;4221:63;;4280:1;4277;4270:12;4221:63;4168:122;:::o;4296:139::-;4342:5;4380:6;4367:20;4358:29;;4396:33;4423:5;4396:33;:::i;:::-;4296:139;;;;:::o;4441:77::-;4478:7;4507:5;4496:16;;4441:77;;;:::o;4524:122::-;4597:24;4615:5;4597:24;:::i;:::-;4590:5;4587:35;4577:63;;4636:1;4633;4626:12;4577:63;4524:122;:::o;4652:139::-;4698:5;4736:6;4723:20;4714:29;;4752:33;4779:5;4752:33;:::i;:::-;4652:139;;;;:::o;4797:474::-;4865:6;4873;4922:2;4910:9;4901:7;4897:23;4893:32;4890:119;;;4928:79;;:::i;:::-;4890:119;5048:1;5073:53;5118:7;5109:6;5098:9;5094:22;5073:53;:::i;:::-;5063:63;;5019:117;5175:2;5201:53;5246:7;5237:6;5226:9;5222:22;5201:53;:::i;:::-;5191:63;;5146:118;4797:474;;;;;:::o;5277:90::-;5311:7;5354:5;5347:13;5340:21;5329:32;;5277:90;;;:::o;5373:109::-;5454:21;5469:5;5454:21;:::i;:::-;5449:3;5442:34;5373:109;;:::o;5488:210::-;5575:4;5613:2;5602:9;5598:18;5590:26;;5626:65;5688:1;5677:9;5673:17;5664:6;5626:65;:::i;:::-;5488:210;;;;:::o;5704:118::-;5791:24;5809:5;5791:24;:::i;:::-;5786:3;5779:37;5704:118;;:::o;5828:222::-;5921:4;5959:2;5948:9;5944:18;5936:26;;5972:71;6040:1;6029:9;6025:17;6016:6;5972:71;:::i;:::-;5828:222;;;;:::o;6056:619::-;6133:6;6141;6149;6198:2;6186:9;6177:7;6173:23;6169:32;6166:119;;;6204:79;;:::i;:::-;6166:119;6324:1;6349:53;6394:7;6385:6;6374:9;6370:22;6349:53;:::i;:::-;6339:63;;6295:117;6451:2;6477:53;6522:7;6513:6;6502:9;6498:22;6477:53;:::i;:::-;6467:63;;6422:118;6579:2;6605:53;6650:7;6641:6;6630:9;6626:22;6605:53;:::i;:::-;6595:63;;6550:118;6056:619;;;;;:::o;6681:86::-;6716:7;6756:4;6749:5;6745:16;6734:27;;6681:86;;;:::o;6773:112::-;6856:22;6872:5;6856:22;:::i;:::-;6851:3;6844:35;6773:112;;:::o;6891:214::-;6980:4;7018:2;7007:9;7003:18;6995:26;;7031:67;7095:1;7084:9;7080:17;7071:6;7031:67;:::i;:::-;6891:214;;;;:::o;7111:329::-;7170:6;7219:2;7207:9;7198:7;7194:23;7190:32;7187:119;;;7225:79;;:::i;:::-;7187:119;7345:1;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;:::i;:::-;7360:63;;7316:117;7111:329;;;;:::o;7446:474::-;7514:6;7522;7571:2;7559:9;7550:7;7546:23;7542:32;7539:119;;;7577:79;;:::i;:::-;7539:119;7697:1;7722:53;7767:7;7758:6;7747:9;7743:22;7722:53;:::i;:::-;7712:63;;7668:117;7824:2;7850:53;7895:7;7886:6;7875:9;7871:22;7850:53;:::i;:::-;7840:63;;7795:118;7446:474;;;;;:::o;7926:177::-;8066:29;8062:1;8054:6;8050:14;8043:53;7926:177;:::o;8109:366::-;8251:3;8272:67;8336:2;8331:3;8272:67;:::i;:::-;8265:74;;8348:93;8437:3;8348:93;:::i;:::-;8466:2;8461:3;8457:12;8450:19;;8109:366;;;:::o;8481:419::-;8647:4;8685:2;8674:9;8670:18;8662:26;;8734:9;8728:4;8724:20;8720:1;8709:9;8705:17;8698:47;8762:131;8888:4;8762:131;:::i;:::-;8754:139;;8481:419;;;:::o;8906:222::-;9046:34;9042:1;9034:6;9030:14;9023:58;9115:5;9110:2;9102:6;9098:15;9091:30;8906:222;:::o;9134:366::-;9276:3;9297:67;9361:2;9356:3;9297:67;:::i;:::-;9290:74;;9373:93;9462:3;9373:93;:::i;:::-;9491:2;9486:3;9482:12;9475:19;;9134:366;;;:::o;9506:419::-;9672:4;9710:2;9699:9;9695:18;9687:26;;9759:9;9753:4;9749:20;9745:1;9734:9;9730:17;9723:47;9787:131;9913:4;9787:131;:::i;:::-;9779:139;;9506:419;;;:::o;9931:180::-;9979:77;9976:1;9969:88;10076:4;10073:1;10066:15;10100:4;10097:1;10090:15;10117:320;10161:6;10198:1;10192:4;10188:12;10178:22;;10245:1;10239:4;10235:12;10266:18;10256:81;;10322:4;10314:6;10310:17;10300:27;;10256:81;10384:2;10376:6;10373:14;10353:18;10350:38;10347:84;;10403:18;;:::i;:::-;10347:84;10168:269;10117:320;;;:::o;10443:180::-;10583:32;10579:1;10571:6;10567:14;10560:56;10443:180;:::o;10629:366::-;10771:3;10792:67;10856:2;10851:3;10792:67;:::i;:::-;10785:74;;10868:93;10957:3;10868:93;:::i;:::-;10986:2;10981:3;10977:12;10970:19;;10629:366;;;:::o;11001:419::-;11167:4;11205:2;11194:9;11190:18;11182:26;;11254:9;11248:4;11244:20;11240:1;11229:9;11225:17;11218:47;11282:131;11408:4;11282:131;:::i;:::-;11274:139;;11001:419;;;:::o;11426:181::-;11566:33;11562:1;11554:6;11550:14;11543:57;11426:181;:::o;11613:366::-;11755:3;11776:67;11840:2;11835:3;11776:67;:::i;:::-;11769:74;;11852:93;11941:3;11852:93;:::i;:::-;11970:2;11965:3;11961:12;11954:19;;11613:366;;;:::o;11985:419::-;12151:4;12189:2;12178:9;12174:18;12166:26;;12238:9;12232:4;12228:20;12224:1;12213:9;12209:17;12202:47;12266:131;12392:4;12266:131;:::i;:::-;12258:139;;11985:419;;;:::o;12410:223::-;12550:34;12546:1;12538:6;12534:14;12527:58;12619:6;12614:2;12606:6;12602:15;12595:31;12410:223;:::o;12639:366::-;12781:3;12802:67;12866:2;12861:3;12802:67;:::i;:::-;12795:74;;12878:93;12967:3;12878:93;:::i;:::-;12996:2;12991:3;12987:12;12980:19;;12639:366;;;:::o;13011:419::-;13177:4;13215:2;13204:9;13200:18;13192:26;;13264:9;13258:4;13254:20;13250:1;13239:9;13235:17;13228:47;13292:131;13418:4;13292:131;:::i;:::-;13284:139;;13011:419;;;:::o;13436:221::-;13576:34;13572:1;13564:6;13560:14;13553:58;13645:4;13640:2;13632:6;13628:15;13621:29;13436:221;:::o;13663:366::-;13805:3;13826:67;13890:2;13885:3;13826:67;:::i;:::-;13819:74;;13902:93;13991:3;13902:93;:::i;:::-;14020:2;14015:3;14011:12;14004:19;;13663:366;;;:::o;14035:419::-;14201:4;14239:2;14228:9;14224:18;14216:26;;14288:9;14282:4;14278:20;14274:1;14263:9;14259:17;14252:47;14316:131;14442:4;14316:131;:::i;:::-;14308:139;;14035:419;;;:::o;14460:180::-;14508:77;14505:1;14498:88;14605:4;14602:1;14595:15;14629:4;14626:1;14619:15;14646:191;14686:3;14705:20;14723:1;14705:20;:::i;:::-;14700:25;;14739:20;14757:1;14739:20;:::i;:::-;14734:25;;14782:1;14779;14775:9;14768:16;;14803:3;14800:1;14797:10;14794:36;;;14810:18;;:::i;:::-;14794:36;14646:191;;;;:::o;14843:180::-;14983:32;14979:1;14971:6;14967:14;14960:56;14843:180;:::o;15029:366::-;15171:3;15192:67;15256:2;15251:3;15192:67;:::i;:::-;15185:74;;15268:93;15357:3;15268:93;:::i;:::-;15386:2;15381:3;15377:12;15370:19;;15029:366;;;:::o;15401:419::-;15567:4;15605:2;15594:9;15590:18;15582:26;;15654:9;15648:4;15644:20;15640:1;15629:9;15625:17;15618:47;15682:131;15808:4;15682:131;:::i;:::-;15674:139;;15401:419;;;:::o;15826:182::-;15966:34;15962:1;15954:6;15950:14;15943:58;15826:182;:::o;16014:366::-;16156:3;16177:67;16241:2;16236:3;16177:67;:::i;:::-;16170:74;;16253:93;16342:3;16253:93;:::i;:::-;16371:2;16366:3;16362:12;16355:19;;16014:366;;;:::o;16386:419::-;16552:4;16590:2;16579:9;16575:18;16567:26;;16639:9;16633:4;16629:20;16625:1;16614:9;16610:17;16603:47;16667:131;16793:4;16667:131;:::i;:::-;16659:139;;16386:419;;;:::o;16811:180::-;16951:32;16947:1;16939:6;16935:14;16928:56;16811:180;:::o;16997:366::-;17139:3;17160:67;17224:2;17219:3;17160:67;:::i;:::-;17153:74;;17236:93;17325:3;17236:93;:::i;:::-;17354:2;17349:3;17345:12;17338:19;;16997:366;;;:::o;17369:419::-;17535:4;17573:2;17562:9;17558:18;17550:26;;17622:9;17616:4;17612:20;17608:1;17597:9;17593:17;17586:47;17650:131;17776:4;17650:131;:::i;:::-;17642:139;;17369:419;;;:::o;17794:222::-;17934:34;17930:1;17922:6;17918:14;17911:58;18003:5;17998:2;17990:6;17986:15;17979:30;17794:222;:::o;18022:366::-;18164:3;18185:67;18249:2;18244:3;18185:67;:::i;:::-;18178:74;;18261:93;18350:3;18261:93;:::i;:::-;18379:2;18374:3;18370:12;18363:19;;18022:366;;;:::o;18394:419::-;18560:4;18598:2;18587:9;18583:18;18575:26;;18647:9;18641:4;18637:20;18633:1;18622:9;18618:17;18611:47;18675:131;18801:4;18675:131;:::i;:::-;18667:139;;18394:419;;;:::o;18819:176::-;18959:28;18955:1;18947:6;18943:14;18936:52;18819:176;:::o;19001:366::-;19143:3;19164:67;19228:2;19223:3;19164:67;:::i;:::-;19157:74;;19240:93;19329:3;19240:93;:::i;:::-;19358:2;19353:3;19349:12;19342:19;;19001:366;;;:::o;19373:419::-;19539:4;19577:2;19566:9;19562:18;19554:26;;19626:9;19620:4;19616:20;19612:1;19601:9;19597:17;19590:47;19654:131;19780:4;19654:131;:::i;:::-;19646:139;;19373:419;;;:::o;19798:442::-;19947:4;19985:2;19974:9;19970:18;19962:26;;19998:71;20066:1;20055:9;20051:17;20042:6;19998:71;:::i;:::-;20079:72;20147:2;20136:9;20132:18;20123:6;20079:72;:::i;:::-;20161;20229:2;20218:9;20214:18;20205:6;20161:72;:::i;:::-;19798:442;;;;;;:::o;20246:180::-;20294:77;20291:1;20284:88;20391:4;20388:1;20381:15;20415:4;20412:1;20405:15;20432:194;20472:4;20492:20;20510:1;20492:20;:::i;:::-;20487:25;;20526:20;20544:1;20526:20;:::i;:::-;20521:25;;20570:1;20567;20563:9;20555:17;;20594:1;20588:4;20585:11;20582:37;;;20599:18;;:::i;:::-;20582:37;20432:194;;;;:::o;20632:180::-;20680:77;20677:1;20670:88;20777:4;20774:1;20767:15;20801:4;20798:1;20791:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2156000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "393",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"cancelDeveloperChange()": "34963",
								"cancelOwnerChange()": "infinite",
								"decimals()": "428",
								"developer()": "2619",
								"developerChangeRequestTime()": "2513",
								"finalizeDeveloperChange()": "infinite",
								"finalizeOwnerChange()": "infinite",
								"getUserBalance(address)": "2896",
								"getUsers()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2605",
								"ownerChangeRequestTime()": "2471",
								"pendingNewDeveloper()": "2597",
								"pendingNewOwner()": "2577",
								"renounceOwnership()": "infinite",
								"requestDeveloperChange(address)": "infinite",
								"requestOwnerChange(address)": "52808",
								"setVaultManager(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vaultManager()": "2576"
							},
							"internal": {
								"_mint(address,uint256)": "infinite",
								"_removeUser(address)": "infinite",
								"_trackUserBalance(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1938,
									"end": 2199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2007,
									"end": 2019,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4E415349434F494E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4E41534943000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2094,
									"end": 2104,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2091,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2082,
									"end": 2091,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2104,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2165,
									"end": 2175,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 640,
									"end": 650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 2159,
									"end": 2164,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2159,
									"end": 2164,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2159,
									"end": 2164,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2159,
									"end": 2192,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2192,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2192,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2159,
									"end": 2192,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 2199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2743,
									"end": 2910,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2743,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2847,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2831,
									"end": 2838,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2840,
									"end": 2846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2819,
									"end": 2830,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2819,
									"end": 2830,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2847,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2819,
									"end": 2847,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2847,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2819,
									"end": 2847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2875,
									"end": 2882,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2894,
									"end": 2901,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2902,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2884,
									"end": 2902,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2902,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2884,
									"end": 2902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2857,
									"end": 2874,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2857,
									"end": 2874,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2903,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2857,
									"end": 2903,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2903,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2857,
									"end": 2903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2910,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7682,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7466,
									"end": 7682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7563,
									"end": 7564,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 7565,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7544,
									"end": 7565,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7544,
									"end": 7565,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7544,
									"end": 7565,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7544,
									"end": 7565,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7540,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7540,
									"end": 7631,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7617,
									"end": 7618,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7588,
									"end": 7620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7588,
									"end": 7620,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7540,
									"end": 7631,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7540,
									"end": 7631,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7656,
									"end": 7657,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7660,
									"end": 7667,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7669,
									"end": 7674,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7647,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7640,
									"end": 7647,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7640,
									"end": 7647,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7675,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7640,
									"end": 7675,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7675,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7466,
									"end": 7682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7466,
									"end": 7682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7466,
									"end": 7682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3069,
									"end": 3076,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 3104,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3105,
									"end": 3112,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3465,
									"end": 3826,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3465,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3556,
									"end": 3557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3546,
									"end": 3553,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3557,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3572,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3562,
									"end": 3578,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3561,
									"end": 3578,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3546,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3613,
									"end": 3617,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3594,
									"end": 3604,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3609,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3617,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3636,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3642,
									"end": 3646,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3680,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3668,
									"end": 3675,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3680,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3694,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3695,
									"end": 3699,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3684,
									"end": 3700,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3668,
									"end": 3700,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3782,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3664,
									"end": 3782,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3716,
									"end": 3726,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3727,
									"end": 3731,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3732,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3766,
									"end": 3770,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3765,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3754,
									"end": 3765,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3754,
									"end": 3765,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3771,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3754,
									"end": 3771,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3771,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3754,
									"end": 3771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3782,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3664,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3542,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3812,
									"end": 3819,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3819,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3819,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3465,
									"end": 3826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3465,
									"end": 3826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3465,
									"end": 3826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6121,
									"end": 6122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6257,
									"end": 6262,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6241,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6293,
									"end": 6312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6324,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6329,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6330,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6293,
									"end": 6330,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6367,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6348,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6348,
									"end": 6367,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6425,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6443,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6394,
									"end": 6444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6394,
									"end": 6444,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6344,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6611,
									"end": 6616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6597,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6597,
									"end": 6616,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6588,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6589,
									"end": 6593,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6579,
									"end": 6594,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6279,
									"end": 6641,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6101,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6669,
									"end": 6670,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6655,
									"end": 6657,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6655,
									"end": 6671,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6839,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6818,
									"end": 6830,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7046,
									"end": 7051,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7039,
									"end": 7041,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7042,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6651,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7106,
									"end": 7108,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7104,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7110,
									"end": 7115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7091,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7116,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6016,
									"end": 7123,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6016,
									"end": 7123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3895,
									"end": 4217,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3895,
									"end": 4217,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3954,
									"end": 3963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3966,
									"end": 3967,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3954,
									"end": 3967,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3954,
									"end": 3967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3978,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3973,
									"end": 3985,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3985,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3985,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3969,
									"end": 3970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3969,
									"end": 3985,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4026,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4010,
									"end": 4026,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4015,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4016,
									"end": 4017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4010,
									"end": 4018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4010,
									"end": 4018,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4026,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4010,
									"end": 4026,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4026,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4006,
									"end": 4201,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4062,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4078,
									"end": 4079,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4063,
									"end": 4068,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4063,
									"end": 4075,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4075,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4075,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 4063,
									"end": 4079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 4063,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4057,
									"end": 4080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4057,
									"end": 4080,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4051,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4052,
									"end": 4053,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4046,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4080,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4133,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 4128,
									"end": 4139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4139,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4181,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4181,
									"end": 4186,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4201,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4006,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3949,
									"end": 4211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 4217,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 4217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7964,
									"end": 8144,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 7964,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8012,
									"end": 8089,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8009,
									"end": 8010,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8002,
									"end": 8090,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8109,
									"end": 8113,
									"name": "PUSH",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 8106,
									"end": 8107,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8099,
									"end": 8114,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8133,
									"end": 8137,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8130,
									"end": 8131,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8123,
									"end": 8138,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8190,
									"end": 8194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8210,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8228,
									"end": 8229,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 8210,
									"end": 8230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8230,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8210,
									"end": 8230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8205,
									"end": 8230,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8205,
									"end": 8230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8244,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8262,
									"end": 8263,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8244,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 8244,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8244,
									"end": 8264,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8244,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8264,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8264,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8288,
									"end": 8289,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8285,
									"end": 8286,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8281,
									"end": 8290,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8312,
									"end": 8313,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8306,
									"end": 8310,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8303,
									"end": 8314,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8337,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8300,
									"end": 8337,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8317,
									"end": 8335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 8317,
									"end": 8335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 8317,
									"end": 8335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8317,
									"end": 8335,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 8317,
									"end": 8335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8337,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8300,
									"end": 8337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8150,
									"end": 8344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8530,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8350,
									"end": 8530,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8398,
									"end": 8475,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8395,
									"end": 8396,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8388,
									"end": 8476,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8495,
									"end": 8499,
									"name": "PUSH",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 8492,
									"end": 8493,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8485,
									"end": 8500,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8519,
									"end": 8523,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8516,
									"end": 8517,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8509,
									"end": 8524,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 8227,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204563d810cf716e9e405592decb62b6d71af319d9ac52b3d35c6faefd41ee487e64736f6c634300081c0033",
									".code": [
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "88DACBCC"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "DD940CB5"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "E9C559A9"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "B543503E"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "B9C28D29"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "CA4B208B"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "9E12279D"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "A67A91E3"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "A86C8374"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "88DACBCC"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "8A4ADF24"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "2B7DF804"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "47734892"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "2B7DF804"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "2FF2E9DC"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "CE8E3E"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "5069F22"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "67453A6"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 8227,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4279,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1115,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1115,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7306,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1192,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1192,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 599,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 599,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2382,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2382,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5097,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5097,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4417,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4417,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4417,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5833,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1042,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1042,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6810,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6810,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7682,
											"end": 8225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5381,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5381,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4681,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4681,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1151,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1151,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 984,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 984,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6177,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1235,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1235,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4338,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7306,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2602,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7380,
											"end": 7406,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7410,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7372,
											"end": 7450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7372,
											"end": 7450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7461,
											"end": 7480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7503,
											"end": 7533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7503,
											"end": 7533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7503,
											"end": 7533,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7503,
											"end": 7533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7583,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "CCD8C9D5857ED509892CB6BA9A608F25FA4CFED016A475A02E39837F019461CC"
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7584,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 599,
											"end": 650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5176,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5192,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5158,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5158,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5237,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5254,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5237,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4516,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5833,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 5925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5899,
											"end": 5921,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5925,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5891,
											"end": 5961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5891,
											"end": 5961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 5999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5972,
											"end": 5987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6010,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6036,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6082,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "71929BFC41C49AE5E05A53003B97907866C902F9807734CE3A0507BFDAE425F9"
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6083,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 6090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6894,
											"end": 6970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6894,
											"end": 6970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 7014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6988,
											"end": 7014,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7019,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6980,
											"end": 7058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6980,
											"end": 7058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7069,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7143,
											"end": 7158,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7114,
											"end": 7158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7209,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "11D251823298414F86A55EE989C577145357724264D4F6D10632F865A55488FB"
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7225,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 7232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7682,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7754,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7746,
											"end": 7824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7746,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 7861,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7861,
											"end": 7887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 7861,
											"end": 7910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 7861,
											"end": 7910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7857,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7910,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7910,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7834,
											"end": 7945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7834,
											"end": 7945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 7988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8021,
											"end": 8040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 8051,
											"end": 8060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 8086,
											"end": 8105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 8128,
											"end": 8158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8128,
											"end": 8158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8203,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E823578BE672EBCFC6A23FCE5293A8769DD2449C1AE45D769B8BA0FC3435625F"
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8218,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 8225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 8225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2602,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5469,
											"end": 5492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5469,
											"end": 5492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5492,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5461,
											"end": 5529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5461,
											"end": 5529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5547,
											"end": 5569,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5574,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5539,
											"end": 5609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5539,
											"end": 5609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 5647,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5620,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5647,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5697,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5657,
											"end": 5697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5697,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5744,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E4D82E46D7A4A49D024ED3CDF35530213F02413245E7BF0D20121174C089E0D2"
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5756,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4766,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4766,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4758,
											"end": 4833,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4758,
											"end": 4833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4843,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6177,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2633,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2602,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2602,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6249,
											"end": 6271,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6275,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6241,
											"end": 6311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6241,
											"end": 6311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 6348,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6348,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6348,
											"end": 6393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6348,
											"end": 6393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6344,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6393,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6321,
											"end": 6424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6321,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6435,
											"end": 6451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6454,
											"end": 6459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6454,
											"end": 6461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6454,
											"end": 6461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6435,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6435,
											"end": 6461,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6490,
											"end": 6505,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6535,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6516,
											"end": 6544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6516,
											"end": 6544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6593,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6675,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8870,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 8742,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8851,
											"end": 8856,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8858,
											"end": 8862,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8826,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8826,
											"end": 8863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8863,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8826,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10907,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10431,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10567,
											"end": 10572,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10574,
											"end": 10581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10557,
											"end": 10582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10596,
											"end": 10612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10596,
											"end": 10632,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10592,
											"end": 10901,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10592,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10592,
											"end": 10901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10652,
											"end": 10668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10652,
											"end": 10676,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10648,
											"end": 10778,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10730,
											"end": 10737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10757,
											"end": 10762,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10703,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10763,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10778,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10648,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10842,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10863,
											"end": 10868,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10844,
											"end": 10868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10870,
											"end": 10875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10819,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10876,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10819,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10592,
											"end": 10901,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10592,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10520,
											"end": 10907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3380,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2988,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3116,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3116,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3253,
											"end": 3259,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3243,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3260,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3243,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3217,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3352,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3323,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3373,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3323,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2910,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2743,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2819,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2819,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2894,
											"end": 2901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2884,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2857,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2903,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2857,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9834,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9825,
											"end": 9914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9900,
											"end": 9901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 9871,
											"end": 9903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9903,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9914,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9825,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9946,
											"end": 9947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9927,
											"end": 9948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9927,
											"end": 9948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9927,
											"end": 9948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9923,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 9923,
											"end": 10013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 9971,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9971,
											"end": 10002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9923,
											"end": 10013,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 9923,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10052,
											"end": 10057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10039,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10048,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10057,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10067,
											"end": 10143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10117,
											"end": 10124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10126,
											"end": 10131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 10101,
											"end": 10132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10143,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10067,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 10149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 10149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5500,
											"end": 5501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5502,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5525,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5480,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5618,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5575,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5670,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5670,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5670,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3826,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3465,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3557,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3572,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 3546,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3594,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3609,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3731,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 3754,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3771,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3754,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3542,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3803,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7682,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7466,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7565,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7565,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7565,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7540,
											"end": 7631,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7588,
											"end": 7620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7631,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7540,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7640,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7640,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7640,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7640,
											"end": 7675,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7640,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6241,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6367,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6438,
											"end": 6443,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6394,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6344,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6597,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6597,
											"end": 6616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6279,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6101,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6818,
											"end": 6839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6651,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7110,
											"end": 7115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 7091,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7091,
											"end": 7116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 4217,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 3895,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 3967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3985,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4015,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 4010,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4018,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4026,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4006,
											"end": 4201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4078,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4063,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 4057,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 4046,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4128,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4139,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 4181,
											"end": 4186,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4201,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4006,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 4211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 4217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 4217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 121,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7,
											"end": 121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 74,
											"end": 80,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 127,
											"end": 311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 226,
											"end": 237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 248,
											"end": 267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 291,
											"end": 305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 127,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 317,
											"end": 449,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 317,
											"end": 449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 384,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 399,
											"end": 410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 399,
											"end": 410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 428,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 420,
											"end": 442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 317,
											"end": 449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 317,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 455,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 455,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 492,
											"end": 499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 510,
											"end": 575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 455,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 455,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 642,
											"end": 677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 642,
											"end": 677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 797,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 689,
											"end": 797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 766,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 766,
											"end": 790,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 766,
											"end": 790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 761,
											"end": 764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 754,
											"end": 791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 689,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 803,
											"end": 982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 872,
											"end": 882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 935,
											"end": 938,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 893,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 893,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 971,
											"end": 975,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1285,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1432,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1355,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 1465,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1747,
											"end": 1750,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1688,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 1774,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2022,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2115,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2133,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2372,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2254,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2522,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2593,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2522,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2705,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2606,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2864,
											"end": 2867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 3025,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2886,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3018,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 3025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 3025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 3025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 3025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3133,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3031,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3107,
											"end": 3112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 3288,
											"end": 3293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3255,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3294,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 3255,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3310,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3381,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3310,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3390,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3480,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3478,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3464,
											"end": 3510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3464,
											"end": 3510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3732,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 3710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3733,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3823,
											"end": 3827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3750,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3750,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4039,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3922,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4290,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4168,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4259,
											"end": 4264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4241,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4231,
											"end": 4266,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4221,
											"end": 4284,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4284,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4221,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4387,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4423,
											"end": 4428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4396,
											"end": 4429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4429,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4396,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4518,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4441,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4646,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4524,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4615,
											"end": 4620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4597,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4622,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4752,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 4752,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4890,
											"end": 5009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 4928,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5009,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4890,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 5118,
											"end": 5125,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5107,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5073,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5177,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5235,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5201,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5367,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5277,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5360,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5361,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5482,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5373,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 5469,
											"end": 5474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5454,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5442,
											"end": 5476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5615,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5626,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5691,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 5626,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5822,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5704,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5791,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 5789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6040,
											"end": 6041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6022,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5972,
											"end": 6043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 6043,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 5972,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 6050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6184,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6196,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6166,
											"end": 6285,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6166,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6166,
											"end": 6285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6204,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 6204,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6283,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6204,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6166,
											"end": 6285,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6166,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6349,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6477,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6477,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 6650,
											"end": 6657,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6626,
											"end": 6648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6605,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 6605,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6550,
											"end": 6668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6767,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6681,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6885,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6773,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 6872,
											"end": 6877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6856,
											"end": 6878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 7031,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7098,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7031,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 7105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7207,
											"end": 7216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7205,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7217,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7187,
											"end": 7306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7225,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7225,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7304,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7225,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7306,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7187,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7415,
											"end": 7422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7370,
											"end": 7423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7423,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7370,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7573,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7568,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7569,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7574,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7539,
											"end": 7658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7577,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7577,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7656,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7577,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7658,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7539,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 7767,
											"end": 7774,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7722,
											"end": 7775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7775,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 7722,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7775,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7824,
											"end": 7826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 7895,
											"end": 7902,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7884,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7871,
											"end": 7893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7850,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7903,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 7850,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8103,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 7926,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8095,
											"name": "PUSH",
											"source": 7,
											"value": "43616C6C6572206973206E6F742074686520646576656C6F7065720000000000"
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8043,
											"end": 8096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8475,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8109,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8336,
											"end": 8338,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 8331,
											"end": 8334,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8272,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8339,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8272,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 8437,
											"end": 8440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8348,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8441,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 8348,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8900,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 8481,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8647,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8687,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8674,
											"end": 8683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8698,
											"end": 8745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 8888,
											"end": 8892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8762,
											"end": 8893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8893,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 8762,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 8893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 8893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 9128,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8906,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9080,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20646576656C6F706572206368616E676520726571756573742070656E64"
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "696E670000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9102,
											"end": 9108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 9128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 9128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 9297,
											"end": 9364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9462,
											"end": 9465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9373,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9491,
											"end": 9493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9486,
											"end": 9489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9482,
											"end": 9494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9475,
											"end": 9494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9475,
											"end": 9494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9710,
											"end": 9712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9743,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9787,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9779,
											"end": 9918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9779,
											"end": 9918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9506,
											"end": 9925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9931,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 10056,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9976,
											"end": 9977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 10057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10066,
											"end": 10081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10104,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10097,
											"end": 10098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10105,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10437,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 10117,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10161,
											"end": 10167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10192,
											"end": 10196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10188,
											"end": 10200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10239,
											"end": 10243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10256,
											"end": 10337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10326,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 10314,
											"end": 10320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10310,
											"end": 10327,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10327,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10337,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10256,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10384,
											"end": 10386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10376,
											"end": 10382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10387,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10350,
											"end": 10388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10347,
											"end": 10431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10403,
											"end": 10421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10431,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10347,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10623,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10443,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10615,
											"name": "PUSH",
											"source": 7,
											"value": "43616C6C6572206973206E6F7420746865205661756C744D616E616765720000"
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10560,
											"end": 10616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10995,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10629,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10771,
											"end": 10774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 10856,
											"end": 10858,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 10851,
											"end": 10854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 10792,
											"end": 10859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10859,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 10792,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10868,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10961,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 10868,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10986,
											"end": 10988,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10981,
											"end": 10984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 10989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10970,
											"end": 10989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10970,
											"end": 10989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11420,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 11001,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11194,
											"end": 11203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11238,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11225,
											"end": 11242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 11282,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11413,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 11282,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11426,
											"end": 11607,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11426,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11599,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206F776E6572206368616E676520726571756573742070656E64696E6700"
										},
										{
											"begin": 11562,
											"end": 11563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11426,
											"end": 11607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11426,
											"end": 11607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11979,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11613,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11755,
											"end": 11758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11840,
											"end": 11842,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11835,
											"end": 11838,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11776,
											"end": 11843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11843,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11776,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11769,
											"end": 11843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11769,
											"end": 11843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11852,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11852,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11852,
											"end": 11945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11852,
											"end": 11945,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 11852,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11970,
											"end": 11972,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 11973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11954,
											"end": 11973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11954,
											"end": 11973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12404,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 11985,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12232,
											"end": 12236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12228,
											"end": 12248,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12209,
											"end": 12226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12202,
											"end": 12249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 12266,
											"end": 12397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12397,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 12266,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11985,
											"end": 12404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12410,
											"end": 12633,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 12410,
											"end": 12633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12550,
											"end": 12584,
											"name": "PUSH",
											"source": 7,
											"value": "4E657720646576656C6F7065722063616E6E6F74206265207A65726F20616464"
										},
										{
											"begin": 12546,
											"end": 12547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "PUSH",
											"source": 7,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12614,
											"end": 12616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12606,
											"end": 12612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12410,
											"end": 12633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12410,
											"end": 12633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12639,
											"end": 13005,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 12639,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12866,
											"end": 12868,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12861,
											"end": 12864,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 12802,
											"end": 12869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12802,
											"end": 12869,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12802,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12967,
											"end": 12970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 12878,
											"end": 12971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12971,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12878,
											"end": 12971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12991,
											"end": 12994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 12999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12980,
											"end": 12999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12980,
											"end": 12999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12639,
											"end": 13005,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12639,
											"end": 13005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12639,
											"end": 13005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12639,
											"end": 13005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13430,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 13011,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13177,
											"end": 13181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13215,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13204,
											"end": 13213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13200,
											"end": 13218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13192,
											"end": 13218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13192,
											"end": 13218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13250,
											"end": 13251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13239,
											"end": 13248,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13252,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13228,
											"end": 13275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 13292,
											"end": 13423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13423,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 13292,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13284,
											"end": 13423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13284,
											"end": 13423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13436,
											"end": 13657,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13436,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13576,
											"end": 13610,
											"name": "PUSH",
											"source": 7,
											"value": "446576656C6F706572206368616E676520616C72656164792072657175657374"
										},
										{
											"begin": 13572,
											"end": 13573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13564,
											"end": 13570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13560,
											"end": 13574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13645,
											"end": 13649,
											"name": "PUSH",
											"source": 7,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13640,
											"end": 13642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13628,
											"end": 13643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13621,
											"end": 13650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13436,
											"end": 13657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13436,
											"end": 13657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 14029,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13663,
											"end": 14029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13805,
											"end": 13808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13826,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 13890,
											"end": 13892,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13885,
											"end": 13888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 13826,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13893,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 13826,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 13893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 13893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13991,
											"end": 13994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13902,
											"end": 13995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13902,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14022,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14015,
											"end": 14018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14011,
											"end": 14023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14004,
											"end": 14023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14004,
											"end": 14023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 14029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 14029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 14029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 14029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14454,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 14035,
											"end": 14454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14205,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14241,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14224,
											"end": 14242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14288,
											"end": 14297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14278,
											"end": 14298,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14274,
											"end": 14275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14259,
											"end": 14276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14252,
											"end": 14299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 14442,
											"end": 14446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 14316,
											"end": 14447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14447,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 14316,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14460,
											"end": 14640,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 14460,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14508,
											"end": 14585,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14498,
											"end": 14586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 14602,
											"end": 14603,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14595,
											"end": 14610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14629,
											"end": 14633,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14626,
											"end": 14627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14619,
											"end": 14634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14686,
											"end": 14689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14705,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 14723,
											"end": 14724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14705,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 14705,
											"end": 14725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14705,
											"end": 14725,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 14705,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14739,
											"end": 14759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14757,
											"end": 14758,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14739,
											"end": 14759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 14739,
											"end": 14759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14739,
											"end": 14759,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14739,
											"end": 14759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14734,
											"end": 14759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14734,
											"end": 14759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 14780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 14784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14768,
											"end": 14784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14768,
											"end": 14784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14800,
											"end": 14801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14797,
											"end": 14807,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14794,
											"end": 14830,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14794,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14794,
											"end": 14830,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 14810,
											"end": 14828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14794,
											"end": 14830,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14794,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15023,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 14843,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14983,
											"end": 15015,
											"name": "PUSH",
											"source": 7,
											"value": "446576656C6F706572206368616E67652064656C6179206E6F74206D65740000"
										},
										{
											"begin": 14979,
											"end": 14980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 14981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 15016,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 15023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15171,
											"end": 15174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15256,
											"end": 15258,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 15251,
											"end": 15254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 15192,
											"end": 15259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15192,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15185,
											"end": 15259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15185,
											"end": 15259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 15357,
											"end": 15360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 15268,
											"end": 15361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 15268,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15386,
											"end": 15388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15381,
											"end": 15384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15377,
											"end": 15389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15370,
											"end": 15389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15370,
											"end": 15389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15820,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 15401,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15567,
											"end": 15571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15605,
											"end": 15607,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15594,
											"end": 15603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15590,
											"end": 15608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15582,
											"end": 15608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15582,
											"end": 15608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15654,
											"end": 15663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15648,
											"end": 15652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15640,
											"end": 15641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15638,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15625,
											"end": 15642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15618,
											"end": 15665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15682,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15808,
											"end": 15812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15682,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 15682,
											"end": 15813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15682,
											"end": 15813,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15682,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15674,
											"end": 15813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15674,
											"end": 15813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 16008,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 15826,
											"end": 16008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15966,
											"end": 16000,
											"name": "PUSH",
											"source": 7,
											"value": "4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 15962,
											"end": 15963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15954,
											"end": 15960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15950,
											"end": 15964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15943,
											"end": 16001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 16008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 16008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16380,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 16014,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16156,
											"end": 16159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16241,
											"end": 16243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16236,
											"end": 16239,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16177,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 16177,
											"end": 16244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16177,
											"end": 16244,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16177,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16253,
											"end": 16346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 16342,
											"end": 16345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16253,
											"end": 16346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 16253,
											"end": 16346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16253,
											"end": 16346,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 16253,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16366,
											"end": 16369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16362,
											"end": 16374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16386,
											"end": 16805,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 16386,
											"end": 16805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16552,
											"end": 16556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16590,
											"end": 16592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16579,
											"end": 16588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16575,
											"end": 16593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16639,
											"end": 16648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16633,
											"end": 16637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16649,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16625,
											"end": 16626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16614,
											"end": 16623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16610,
											"end": 16627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16603,
											"end": 16650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16667,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 16793,
											"end": 16797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16667,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 16667,
											"end": 16798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16667,
											"end": 16798,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 16667,
											"end": 16798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16659,
											"end": 16798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16659,
											"end": 16798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16386,
											"end": 16805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16386,
											"end": 16805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16386,
											"end": 16805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16386,
											"end": 16805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16811,
											"end": 16991,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 16811,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16951,
											"end": 16983,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E6572206368616E676520616C7265616479207265717565737465640000"
										},
										{
											"begin": 16947,
											"end": 16948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16939,
											"end": 16945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16935,
											"end": 16949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16928,
											"end": 16984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16811,
											"end": 16991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16811,
											"end": 16991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17139,
											"end": 17142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 17224,
											"end": 17226,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 17219,
											"end": 17222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17160,
											"end": 17227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 17325,
											"end": 17328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 17236,
											"end": 17329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17354,
											"end": 17356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17345,
											"end": 17357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17535,
											"end": 17539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17562,
											"end": 17571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17558,
											"end": 17576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17616,
											"end": 17620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17612,
											"end": 17632,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17606,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17593,
											"end": 17610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17586,
											"end": 17633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 17776,
											"end": 17780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 17650,
											"end": 17781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17642,
											"end": 17781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17642,
											"end": 17781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17369,
											"end": 17788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17794,
											"end": 18016,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 17794,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 17968,
											"name": "PUSH",
											"source": 7,
											"value": "5661756C744D616E6167657220616464726573732063616E6E6F74206265207A"
										},
										{
											"begin": 17930,
											"end": 17931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17918,
											"end": 17932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17911,
											"end": 17969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "PUSH",
											"source": 7,
											"value": "65726F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17998,
											"end": 18000,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17990,
											"end": 17996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17986,
											"end": 18001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17979,
											"end": 18009,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17794,
											"end": 18016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17794,
											"end": 18016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18388,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 18022,
											"end": 18388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18164,
											"end": 18167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18185,
											"end": 18252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18249,
											"end": 18251,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 18244,
											"end": 18247,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18185,
											"end": 18252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 18185,
											"end": 18252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18185,
											"end": 18252,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18185,
											"end": 18252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18178,
											"end": 18252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18178,
											"end": 18252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18261,
											"end": 18354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 18350,
											"end": 18353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18261,
											"end": 18354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 18261,
											"end": 18354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18261,
											"end": 18354,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 18261,
											"end": 18354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18379,
											"end": 18381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18374,
											"end": 18377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18370,
											"end": 18382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18363,
											"end": 18382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18363,
											"end": 18382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18394,
											"end": 18813,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 18394,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18560,
											"end": 18564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18598,
											"end": 18600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18587,
											"end": 18596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18583,
											"end": 18601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18575,
											"end": 18601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18575,
											"end": 18601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18647,
											"end": 18656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18641,
											"end": 18645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18637,
											"end": 18657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18633,
											"end": 18634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18622,
											"end": 18631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18618,
											"end": 18635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18611,
											"end": 18658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18675,
											"end": 18806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 18801,
											"end": 18805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18675,
											"end": 18806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 18675,
											"end": 18806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18675,
											"end": 18806,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 18675,
											"end": 18806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18394,
											"end": 18813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18394,
											"end": 18813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18394,
											"end": 18813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18394,
											"end": 18813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18819,
											"end": 18995,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 18819,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18959,
											"end": 18987,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E6572206368616E67652064656C6179206E6F74206D6574000000000000"
										},
										{
											"begin": 18955,
											"end": 18956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 18953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18943,
											"end": 18957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18936,
											"end": 18988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18819,
											"end": 18995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18819,
											"end": 18995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19367,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 19001,
											"end": 19367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19143,
											"end": 19146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19164,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 19228,
											"end": 19230,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 19223,
											"end": 19226,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19164,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 19164,
											"end": 19231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19164,
											"end": 19231,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 19164,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19157,
											"end": 19231,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19157,
											"end": 19231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19240,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 19329,
											"end": 19332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19240,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 19240,
											"end": 19333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19240,
											"end": 19333,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 19240,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19358,
											"end": 19360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19353,
											"end": 19356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19349,
											"end": 19361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19342,
											"end": 19361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19342,
											"end": 19361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19792,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 19373,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19539,
											"end": 19543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19577,
											"end": 19579,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19562,
											"end": 19580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19626,
											"end": 19635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19620,
											"end": 19624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19616,
											"end": 19636,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19612,
											"end": 19613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19601,
											"end": 19610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19590,
											"end": 19637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19654,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 19780,
											"end": 19784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19654,
											"end": 19785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 19654,
											"end": 19785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19654,
											"end": 19785,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 19654,
											"end": 19785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19646,
											"end": 19785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19646,
											"end": 19785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19947,
											"end": 19951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19985,
											"end": 19987,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19974,
											"end": 19983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19970,
											"end": 19988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19962,
											"end": 19988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19962,
											"end": 19988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19998,
											"end": 20069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 20066,
											"end": 20067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20055,
											"end": 20064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20051,
											"end": 20068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20042,
											"end": 20048,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19998,
											"end": 20069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 19998,
											"end": 20069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19998,
											"end": 20069,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 19998,
											"end": 20069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 20147,
											"end": 20149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20136,
											"end": 20145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20132,
											"end": 20150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20123,
											"end": 20129,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 20079,
											"end": 20151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20151,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 20079,
											"end": 20151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20161,
											"end": 20233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 20229,
											"end": 20231,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20218,
											"end": 20227,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20214,
											"end": 20232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20205,
											"end": 20211,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20161,
											"end": 20233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 20161,
											"end": 20233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20161,
											"end": 20233,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 20161,
											"end": 20233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19798,
											"end": 20240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20246,
											"end": 20426,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 20246,
											"end": 20426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20294,
											"end": 20371,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20291,
											"end": 20292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20284,
											"end": 20372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20391,
											"end": 20395,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 20388,
											"end": 20389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20381,
											"end": 20396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20415,
											"end": 20419,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 20412,
											"end": 20413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20405,
											"end": 20420,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20472,
											"end": 20476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20492,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 20510,
											"end": 20511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20492,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 20492,
											"end": 20512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20492,
											"end": 20512,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 20492,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20526,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20526,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 20526,
											"end": 20546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20526,
											"end": 20546,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 20526,
											"end": 20546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20521,
											"end": 20546,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20521,
											"end": 20546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20567,
											"end": 20568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20563,
											"end": 20572,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20555,
											"end": 20572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20555,
											"end": 20572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20594,
											"end": 20595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20588,
											"end": 20592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20585,
											"end": 20596,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20582,
											"end": 20619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20582,
											"end": 20619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 20582,
											"end": 20619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 20599,
											"end": 20617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20582,
											"end": 20619,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 20582,
											"end": 20619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20632,
											"end": 20812,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 20632,
											"end": 20812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20680,
											"end": 20757,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20677,
											"end": 20678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20670,
											"end": 20758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20777,
											"end": 20781,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 20774,
											"end": 20775,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20767,
											"end": 20782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20801,
											"end": 20805,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 20798,
											"end": 20799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20791,
											"end": 20806,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/NASICOIN.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cancelDeveloperChange()": "067453a6",
							"cancelOwnerChange()": "88dacbcc",
							"decimals()": "313ce567",
							"developer()": "ca4b208b",
							"developerChangeRequestTime()": "e9c559a9",
							"finalizeDeveloperChange()": "a67a91e3",
							"finalizeOwnerChange()": "dd940cb5",
							"getUserBalance(address)": "47734892",
							"getUsers()": "00ce8e3e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerChangeRequestTime()": "2b7df804",
							"pendingNewDeveloper()": "b9c28d29",
							"pendingNewOwner()": "05069f22",
							"renounceOwnership()": "715018a6",
							"requestDeveloperChange(address)": "9e12279d",
							"requestOwnerChange(address)": "a86c8374",
							"setVaultManager(address)": "b543503e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vaultManager()": "8a4adf24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currentDeveloper\",\"type\":\"address\"}],\"name\":\"DeveloperChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDeveloper\",\"type\":\"address\"}],\"name\":\"DeveloperChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldDeveloper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDeveloper\",\"type\":\"address\"}],\"name\":\"DeveloperChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"name\":\"OwnerChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDeveloperChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developerChangeRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeDeveloperChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeOwnerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerChangeRequestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingNewDeveloper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingNewOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDeveloper\",\"type\":\"address\"}],\"name\":\"requestDeveloperChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestOwnerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"}],\"name\":\"setVaultManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"NASICOIN is a token created to support the owner of a cat named NASIC.       It has unique functionalities such as staking, donations, and weekly lottery-based prize distributions.      The fractional unit of NASICOIN is called \\\"FISH\\\".\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"initialOwner\":\"The initial owner of the contract (passed to the Ownable constructor).\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to receive the newly minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requestDeveloperChange(address)\":{\"params\":{\"_newDeveloper\":\"Address of the new developer.\"}},\"requestOwnerChange(address)\":{\"params\":{\"_newOwner\":\"Address of the new owner.\"}},\"setVaultManager(address)\":{\"params\":{\"_vaultManager\":\"The address of the VaultManager contract.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NASICOIN (NASIC)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelDeveloperChange()\":{\"notice\":\"Cancel the developer change request.\"},\"cancelOwnerChange()\":{\"notice\":\"Cancel the owner change request.\"},\"constructor\":{\"notice\":\"Constructor to deploy the NASICOIN token.\"},\"decimals()\":{\"notice\":\"Override the decimals function to return 18, standard for ERC20 tokens.         The smallest fractional unit of NASICOIN is called \\\"FISH\\\".\"},\"finalizeDeveloperChange()\":{\"notice\":\"Finalize the developer change after the delay period.\"},\"finalizeOwnerChange()\":{\"notice\":\"Finalize the owner change after the delay period.\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens. Can only be called by the VaultManager contract.\"},\"requestDeveloperChange(address)\":{\"notice\":\"Request to change the developer.\"},\"requestOwnerChange(address)\":{\"notice\":\"Request to change the owner.\"},\"setVaultManager(address)\":{\"notice\":\"Set the address of the VaultManager contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NASICOIN.sol\":\"NASICOIN\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf50537f86409cf4c2f0a0f95de8ab9b6bcdddf060ebac951b848b96d41e911d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3edcbaa7c52d536233da5f20d9d5d3db0f3d757fb9242ba7a32fd72142503fe\",\"dweb:/ipfs/QmXjHGg5CstsLqYNZeBU2PHCjHAqFvTFigJnP7YAmqDM7U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/NASICOIN.sol\":{\"keccak256\":\"0x4107fea269a1d10455a99220e7c5ffc7c9c290b59567d1b14acd56e5981541c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa3f063477ec6e590de851fef210f0d03a298f20f8a756413a8da4ff08632bf\",\"dweb:/ipfs/QmQ3B1pvhS3mVnMHWMzBgCWYLDjoMibBnkQQiZdiAwcWEr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 953,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "hasBalance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 957,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "userBalances",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 960,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "users",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 962,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "developer",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 964,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "vaultManager",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "pendingNewOwner",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 968,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "pendingNewDeveloper",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "ownerChangeRequestTime",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 972,
								"contract": "contracts/NASICOIN.sol:NASICOIN",
								"label": "developerChangeRequestTime",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"cancelDeveloperChange()": {
								"notice": "Cancel the developer change request."
							},
							"cancelOwnerChange()": {
								"notice": "Cancel the owner change request."
							},
							"constructor": {
								"notice": "Constructor to deploy the NASICOIN token."
							},
							"decimals()": {
								"notice": "Override the decimals function to return 18, standard for ERC20 tokens.         The smallest fractional unit of NASICOIN is called \"FISH\"."
							},
							"finalizeDeveloperChange()": {
								"notice": "Finalize the developer change after the delay period."
							},
							"finalizeOwnerChange()": {
								"notice": "Finalize the owner change after the delay period."
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens. Can only be called by the VaultManager contract."
							},
							"requestDeveloperChange(address)": {
								"notice": "Request to change the developer."
							},
							"requestOwnerChange(address)": {
								"notice": "Request to change the owner."
							},
							"setVaultManager(address)": {
								"notice": "Set the address of the VaultManager contract."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5470:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5484:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5500:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5492:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5492:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5492:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5484:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5480:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5504:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5552:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5544:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5544:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5544:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5525:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5525:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5518:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5579:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5593:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5585:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5585:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5585:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5579:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5575:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5597:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5647:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5639:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5639:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5639:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5618:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5618:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5611:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5678:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5684:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5688:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5670:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5670:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5670:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5470:0:2"
									},
									"scope": 799,
									"src": "5393:308:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6091:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6105:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6121:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6113:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6113:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6113:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6105:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6279:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6301:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6293:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6293:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6315:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6325:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6315:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6293:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6348:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6362:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6348:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6344:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6369:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6419:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6425:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6438:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6394:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6394:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6387:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6472:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6579:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6589:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6579:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6597:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6611:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6597:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6579:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6579:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6101:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6125:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6241:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6257:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6241:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6241:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6655:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6669:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6661:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6661:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6655:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6870:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6884:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7029:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7039:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7029:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7046:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7029:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7029:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6651:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6673:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6687:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6818:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6834:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6818:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6818:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7100:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7106:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7110:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7091:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7091:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7086:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5707:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6025:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6041:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6033:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6055:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6047:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6067:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6059:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6091:0:2"
									},
									"scope": 799,
									"src": "6016:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7530:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7563:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7555:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7555:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7555:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7544:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7540:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7567:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7617:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7609:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7609:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7609:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7588:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7588:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7581:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7656:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7648:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7648:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7648:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7640:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7640:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7640:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7129:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7475:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7489:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7481:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7506:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7498:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7530:0:2"
									},
									"scope": 799,
									"src": "7466:216:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8056:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8070:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8089:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8081:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8081:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8070:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8066:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8093:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8141:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8133:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8133:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8133:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8114:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8114:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8107:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8189:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8181:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8181:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8181:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8193:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8164:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8164:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8164:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7688:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8009:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8056:0:2"
									},
									"scope": 799,
									"src": "8000:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8816:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8842:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8851:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8858:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8826:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8826:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8212:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8768:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8760:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8783:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8800:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8792:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8792:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8759:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8816:0:2"
									},
									"scope": 799,
									"src": "8742:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9815:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9829:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9846:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9838:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9838:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9838:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9829:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9825:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9850:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9900:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9892:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9892:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9892:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9871:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9871:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9864:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9927:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9938:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9938:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9938:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9927:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9923:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9950:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9999:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9991:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9991:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9991:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9971:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9971:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9964:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10022:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10034:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10022:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10041:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10022:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10052:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10022:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10022:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10071:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10067:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10082:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10117:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10126:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10101:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10101:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10096:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8876:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9726:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9743:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9735:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9750:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9775:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9767:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9767:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9787:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9782:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9782:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9734:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9815:0:2"
									},
									"scope": 799,
									"src": "9717:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10520:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10538:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10530:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10530:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10567:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10557:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10557:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10530:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10596:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10620:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10620:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10615:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10615:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10629:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10615:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10596:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10592:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10634:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10652:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10671:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10652:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10648:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10678:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10730:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10739:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10757:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10703:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10703:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10696:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10791:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10828:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10835:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10844:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10863:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10844:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10870:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10819:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10819:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10819:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10155:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10440:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10464:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10456:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10456:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10479:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10471:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10496:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10488:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10455:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10520:0:2"
									},
									"scope": 799,
									"src": "10431:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9803:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10805:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/NASICOIN.sol": {
				"ast": {
					"absolutePath": "contracts/NASICOIN.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"NASICOIN": [
							1517
						],
						"Ownable": [
							147
						]
					},
					"id": 1518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "48:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1518,
							"sourceUnit": 800,
							"src": "145:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1518,
							"sourceUnit": 148,
							"src": "201:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"561:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "561:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "561:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"568:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "568:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "568:7:6"
								}
							],
							"canonicalName": "NASICOIN",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "255:284:6",
								"text": " @title NASICOIN (NASIC)\n @dev NASICOIN is a token created to support the owner of a cat named NASIC. \n      It has unique functionalities such as staking, donations, and weekly lottery-based prize distributions.\n      The fractional unit of NASICOIN is called \"FISH\"."
							},
							"fullyImplemented": true,
							"id": 1517,
							"linearizedBaseContracts": [
								1517,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "NASICOIN",
							"nameLocation": "549:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 949,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "623:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "599:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000"
										},
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 944,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "640:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 947,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 945,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "644:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 946,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "648:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "644:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "640:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 953,
									"mutability": "mutable",
									"name": "hasBalance",
									"nameLocation": "732:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "699:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 952,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 950,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "707:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "699:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 951,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "718:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 957,
									"mutability": "mutable",
									"name": "userBalances",
									"nameLocation": "834:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "798:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 956,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 954,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "806:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "798:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 955,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "817:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 960,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "906:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "888:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 958,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 959,
										"nodeType": "ArrayTypeName",
										"src": "888:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ca4b208b",
									"id": 962,
									"mutability": "mutable",
									"name": "developer",
									"nameLocation": "999:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "984:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a4adf24",
									"id": 964,
									"mutability": "mutable",
									"name": "vaultManager",
									"nameLocation": "1057:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1042:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1042:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05069f22",
									"id": 966,
									"mutability": "mutable",
									"name": "pendingNewOwner",
									"nameLocation": "1130:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1115:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1115:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9c28d29",
									"id": 968,
									"mutability": "mutable",
									"name": "pendingNewDeveloper",
									"nameLocation": "1166:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1151:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1151:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b7df804",
									"id": 970,
									"mutability": "mutable",
									"name": "ownerChangeRequestTime",
									"nameLocation": "1207:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1192:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1192:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9c559a9",
									"id": 972,
									"mutability": "mutable",
									"name": "developerChangeRequestTime",
									"nameLocation": "1250:26:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1235:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1235:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 975,
									"mutability": "constant",
									"name": "CHANGE_REQUEST_DELAY",
									"nameLocation": "1308:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1517,
									"src": "1283:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1331:7:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "90"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e823578be672ebcfc6a23fce5293a8769dd2449c1ae45d769b8ba0fc3435625f",
									"id": 981,
									"name": "DeveloperChanged",
									"nameLocation": "1376:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldDeveloper",
												"nameLocation": "1409:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1393:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": true,
												"mutability": "mutable",
												"name": "newDeveloper",
												"nameLocation": "1439:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1423:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:60:6"
									},
									"src": "1370:83:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e4d82e46d7a4a49d024ed3cdf35530213f02413245e7bf0d20121174c089e0d2",
									"id": 987,
									"name": "OwnerChangeRequested",
									"nameLocation": "1464:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "1501:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1485:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1528:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1512:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:53:6"
									},
									"src": "1458:80:6"
								},
								{
									"anonymous": false,
									"eventSelector": "11d251823298414f86a55ee989c577145357724264d4f6d10632f865a55488fb",
									"id": 993,
									"name": "DeveloperChangeRequested",
									"nameLocation": "1549:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "1590:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1574:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "newDeveloper",
												"nameLocation": "1617:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1601:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:57:6"
									},
									"src": "1543:88:6"
								},
								{
									"anonymous": false,
									"eventSelector": "71929bfc41c49ae5e05a53003b97907866c902f9807734ce3a0507bfdae425f9",
									"id": 997,
									"name": "OwnerChangeCanceled",
									"nameLocation": "1642:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "currentOwner",
												"nameLocation": "1678:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1662:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:30:6"
									},
									"src": "1636:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "ccd8c9d5857ed509892cb6ba9a608f25fa4cfed016a475a02e39837f019461cc",
									"id": 1001,
									"name": "DeveloperChangeCanceled",
									"nameLocation": "1703:23:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "currentDeveloper",
												"nameLocation": "1743:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1727:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:34:6"
									},
									"src": "1697:64:6"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "2021:178:6",
										"statements": [
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "developer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2082:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1015,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2094:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2098:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2094:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2082:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2082:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2165:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2169:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2165:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "2177:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1072
														],
														"referencedDeclaration": 1072,
														"src": "2159:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2159:33:6"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1767:166:6",
										"text": " @notice Constructor to deploy the NASICOIN token.\n @param initialOwner The initial owner of the contract (passed to the Ownable constructor)."
									},
									"id": 1026,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e415349434f494e",
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1978:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b84469b941d8686dedb315011f4c002c0bbfd1cc036310ee574cc877b938890f",
														"typeString": "literal_string \"NASICOIN\""
													},
													"value": "NASICOIN"
												},
												{
													"hexValue": "4e41534943",
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_45999eb7a8a2ec375a62d19439b9d631b17141fd4fe9d55d2ad9637532370d01",
														"typeString": "literal_string \"NASIC\""
													},
													"value": "NASIC"
												}
											],
											"id": 1009,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1006,
												"name": "ERC20",
												"nameLocations": [
													"1972:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1972:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1972:26:6"
										},
										{
											"arguments": [
												{
													"id": 1011,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "2007:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1012,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1010,
												"name": "Ownable",
												"nameLocations": [
													"1999:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1999:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1999:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1958:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1950:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:22:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:6"
									},
									"scope": 1517,
									"src": "1938:261:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2447:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2464:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1032,
												"id": 1034,
												"nodeType": "Return",
												"src": "2457:9:6"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2205:172:6",
										"text": " @notice Override the decimals function to return 18, standard for ERC20 tokens.\n         The smallest fractional unit of NASICOIN is called \"FISH\"."
									},
									"functionSelector": "313ce567",
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2391:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1029,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2422:8:6"
									},
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:2:6"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2440:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1030,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2440:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:7:6"
									},
									"scope": 1517,
									"src": "2382:91:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2592:91:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1040,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2610:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2614:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2610:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1042,
																"name": "developer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2624:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2610:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742074686520646576656c6f706572",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2635:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30",
																"typeString": "literal_string \"Caller is not the developer\""
															},
															"value": "Caller is not the developer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74cc9c12b20435cd6a514d4534eaca245eaefd075296c98526342741c4d27f30",
																"typeString": "literal_string \"Caller is not the developer\""
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2602:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2602:63:6"
											},
											{
												"id": 1047,
												"nodeType": "PlaceholderStatement",
												"src": "2675:1:6"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "2479:83:6",
										"text": " @notice Modifier to restrict access to developer-only functions."
									},
									"id": 1049,
									"name": "onlyDeveloper",
									"nameLocation": "2576:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2589:2:6"
									},
									"src": "2567:116:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										639
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "2809:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "2831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2840:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1057,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2819:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NASICOIN_$1517_$",
																"typeString": "type(contract super NASICOIN)"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2825:5:6",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "2819:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2819:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "2875:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1067,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2894:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1066,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2884:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2884:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_trackUserBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "2857:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2857:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2857:46:6"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "2752:5:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1055,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2800:8:6"
									},
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2766:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2758:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2783:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2775:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:33:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:0:6"
									},
									"scope": 1517,
									"src": "2743:167:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										529
									],
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "3106:274:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "3132:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3140:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "3151:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1082,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NASICOIN_$1517_$",
																"typeString": "type(contract super NASICOIN)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3122:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "3116:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3116:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "3116:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "3235:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1093,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "3253:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1092,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "3243:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3243:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "_trackUserBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3217:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3217:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "3217:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1098,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3341:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1100,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "3362:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1099,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "3352:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3352:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "_trackUserBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3323:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3323:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "3323:50:6"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2997:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3097:8:6"
									},
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3024:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "3016:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3048:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "3040:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3075:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "3067:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3006:81:6"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:0:6"
									},
									"scope": 1517,
									"src": "2988:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "3532:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1112,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "3546:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3556:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3546:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3561:17:6",
														"subExpression": {
															"baseExpression": {
																"id": 1115,
																"name": "hasBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "3562:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1117,
															"indexExpression": {
																"id": 1116,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3573:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3562:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3546:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "3668:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3668:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1136,
																"name": "hasBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "3684:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1138,
															"indexExpression": {
																"id": 1137,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3695:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3684:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3668:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1151,
													"nodeType": "IfStatement",
													"src": "3664:118:6",
													"trueBody": {
														"id": 1150,
														"nodeType": "Block",
														"src": "3702:80:6",
														"statements": [
															{
																"expression": {
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1140,
																			"name": "hasBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "3716:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1142,
																		"indexExpression": {
																			"id": 1141,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "3727:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "3716:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3735:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3716:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1145,
																"nodeType": "ExpressionStatement",
																"src": "3716:24:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1147,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "3766:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1146,
																		"name": "_removeUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "3754:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																			"typeString": "function (address)"
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3754:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1149,
																"nodeType": "ExpressionStatement",
																"src": "3754:17:6"
															}
														]
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "3542:240:6",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "3580:78:6",
													"statements": [
														{
															"expression": {
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1120,
																		"name": "hasBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "3594:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1122,
																	"indexExpression": {
																		"id": 1121,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3605:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3594:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3613:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3594:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3594:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1129,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3642:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1126,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "3631:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3637:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3631:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3631:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "3631:16:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1153,
															"name": "userBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "3791:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1155,
														"indexExpression": {
															"id": 1154,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "3804:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3791:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1156,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "3812:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3791:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "3791:28:6"
											}
										]
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_trackUserBalance",
									"nameLocation": "3474:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3514:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "3506:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:31:6"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:0:6"
									},
									"scope": 1517,
									"src": "3465:361:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "3939:278:6",
										"statements": [
											{
												"body": {
													"id": 1200,
													"nodeType": "Block",
													"src": "3992:219:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1176,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "4010:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1178,
																	"indexExpression": {
																		"id": 1177,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "4016:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4010:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1179,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "4022:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4010:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1199,
															"nodeType": "IfStatement",
															"src": "4006:195:6",
															"trueBody": {
																"id": 1198,
																"nodeType": "Block",
																"src": "4028:173:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1181,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "4046:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1183,
																				"indexExpression": {
																					"id": 1182,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "4052:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4046:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1184,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "4057:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1189,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1185,
																							"name": "users",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 960,
																							"src": "4063:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1186,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4069:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "4063:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1187,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4078:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4063:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4057:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4046:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1191,
																		"nodeType": "ExpressionStatement",
																		"src": "4046:34:6"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1192,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "4128:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4134:3:6",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4128:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4128:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1196,
																		"nodeType": "ExpressionStatement",
																		"src": "4128:11:6"
																	},
																	{
																		"id": 1197,
																		"nodeType": "Break",
																		"src": "4181:5:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "3969:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1170,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "3973:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3973:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3969:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"initializationExpression": {
													"assignments": [
														1166
													],
													"declarations": [
														{
															"constant": false,
															"id": 1166,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3962:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1201,
															"src": "3954:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1165,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3954:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1168,
													"initialValue": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3954:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3987:3:6",
														"subExpression": {
															"id": 1173,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3987:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1175,
													"nodeType": "ExpressionStatement",
													"src": "3987:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3949:262:6"
											}
										]
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeUser",
									"nameLocation": "3904:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3924:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3916:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:14:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3939:0:6"
									},
									"scope": 1517,
									"src": "3895:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "4340:29:6",
										"statements": [
											{
												"expression": {
													"id": 1209,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "4357:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1210,
												"nodeType": "Return",
												"src": "4350:12:6"
											}
										]
									},
									"functionSelector": "00ce8e3e",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsers",
									"nameLocation": "4288:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:2:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "4322:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1205,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4322:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1206,
													"nodeType": "ArrayTypeName",
													"src": "4322:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:18:6"
									},
									"scope": 1517,
									"src": "4279:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "4487:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1219,
														"name": "userBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4504:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1221,
													"indexExpression": {
														"id": 1220,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "4517:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4504:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1222,
												"nodeType": "Return",
												"src": "4497:25:6"
											}
										]
									},
									"functionSelector": "47734892",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBalance",
									"nameLocation": "4426:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4449:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "4441:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:14:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "4478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:6"
									},
									"scope": 1517,
									"src": "4417:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "4748:130:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1233,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "4766:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4791:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4783:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1234,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4783:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4783:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4766:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c744d616e6167657220616464726573732063616e6e6f74206265207a65726f",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4795:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90",
																"typeString": "literal_string \"VaultManager address cannot be zero\""
															},
															"value": "VaultManager address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52ff7801acb81823312eef4ad181e0e1cb2eaf78350b1ac894f01aacc0629c90",
																"typeString": "literal_string \"VaultManager address cannot be zero\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4758:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4758:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "4758:75:6"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "vaultManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "4843:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1243,
														"name": "_vaultManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "4858:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4843:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "4843:28:6"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "4534:142:6",
										"text": " @notice Set the address of the VaultManager contract.\n @param _vaultManager The address of the VaultManager contract."
									},
									"functionSelector": "b543503e",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1229,
												"name": "onlyOwner",
												"nameLocations": [
													"4738:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4738:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4738:9:6"
										}
									],
									"name": "setVaultManager",
									"nameLocation": "4690:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "4714:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "4706:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4706:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4705:23:6"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4748:0:6"
									},
									"scope": 1517,
									"src": "4681:197:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "5148:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1256,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5166:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5170:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5166:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1258,
																"name": "vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "5180:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5166:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865205661756c744d616e61676572",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5194:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98",
																"typeString": "literal_string \"Caller is not the VaultManager\""
															},
															"value": "Caller is not the VaultManager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_812827aab76c105db7259515431fe32ef0c02446f255a390c10d5a6fdad14c98",
																"typeString": "literal_string \"Caller is not the VaultManager\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5158:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5158:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "5158:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1264,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5243:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5247:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1072
														],
														"referencedDeclaration": 1072,
														"src": "5237:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "5237:17:6"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "4884:208:6",
										"text": " @notice Mint new tokens. Can only be called by the VaultManager contract.\n @param to The address to receive the newly minted tokens.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "40c10f19",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5106:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5119:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5111:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5131:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5123:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:28:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5148:0:6"
									},
									"scope": 1517,
									"src": "5097:164:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "5451:312:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "5469:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5490:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5482:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5482:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5482:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5469:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5494:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
																"typeString": "literal_string \"New owner cannot be zero address\""
															},
															"value": "New owner cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
																"typeString": "literal_string \"New owner cannot be zero address\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5461:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5461:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "5461:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1288,
																"name": "ownerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "5547:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5573:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5547:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e6572206368616e676520616c726561647920726571756573746564",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5576:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d",
																"typeString": "literal_string \"Owner change already requested\""
															},
															"value": "Owner change already requested"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f73d15b91a0c83b864e5b660e6f041463bcc071acb6c93251eac40276a3e027d",
																"typeString": "literal_string \"Owner change already requested\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5539:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5539:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "5539:70:6"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "pendingNewOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5620:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "5638:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5620:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "5620:27:6"
											},
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "ownerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "5657:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1299,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5682:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5688:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5682:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5657:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "5657:40:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1304,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5734:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5738:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5734:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "5746:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1303,
														"name": "OwnerChangeRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "5713:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5713:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "EmitStatement",
												"src": "5708:48:6"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "5271:105:6",
										"text": " @notice Request to change the owner.\n @param _newOwner Address of the new owner."
									},
									"functionSelector": "a86c8374",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1274,
												"name": "onlyDeveloper",
												"nameLocations": [
													"5437:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1049,
												"src": "5437:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5437:13:6"
										}
									],
									"name": "requestOwnerChange",
									"nameLocation": "5390:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "5417:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "5409:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:19:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:6"
									},
									"scope": 1517,
									"src": "5381:382:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "5881:209:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1317,
																"name": "ownerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "5899:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5924:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5899:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206f776e6572206368616e676520726571756573742070656e64696e67",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5927:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
																"typeString": "literal_string \"No owner change request pending\""
															},
															"value": "No owner change request pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
																"typeString": "literal_string \"No owner change request pending\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5891:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "5891:70:6"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "pendingNewOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5972:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5998:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5990:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5990:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5990:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5972:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "5972:28:6"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1330,
														"name": "ownerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "6010:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6035:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6010:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "6010:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1335,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6072:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6076:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6072:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1334,
														"name": "OwnerChangeCanceled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "6052:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6052:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "EmitStatement",
												"src": "6047:36:6"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "5769:59:6",
										"text": " @notice Cancel the owner change request."
									},
									"functionSelector": "88dacbcc",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1313,
												"name": "onlyOwner",
												"nameLocations": [
													"5871:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5871:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5871:9:6"
										}
									],
									"name": "cancelOwnerChange",
									"nameLocation": "5842:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5859:2:6"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5881:0:6"
									},
									"scope": 1517,
									"src": "5833:257:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "6231:451:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "ownerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "6249:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6274:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6249:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206f776e6572206368616e676520726571756573742070656e64696e67",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6277:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
																"typeString": "literal_string \"No owner change request pending\""
															},
															"value": "No owner change request pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2250d1ceffdc811ba877ba6d5adca74bdd0b5e81577d7aeff133abcf0f36c47a",
																"typeString": "literal_string \"No owner change request pending\""
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6241:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6241:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "6241:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1354,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6329:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6335:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6329:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "ownerChangeRequestTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "6348:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1357,
																	"name": "CHANGE_REQUEST_DELAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "6373:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6348:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6329:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e6572206368616e67652064656c6179206e6f74206d6574",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6395:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4",
																"typeString": "literal_string \"Owner change delay not met\""
															},
															"value": "Owner change delay not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8cf0bf51234aa3ecb157e1846e9a7cd44f5f74b2aa5e2b39836124cc1991cae4",
																"typeString": "literal_string \"Owner change delay not met\""
															}
														],
														"id": 1353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6321:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:103:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "6321:103:6"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6443:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "6435:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1363,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6435:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1365,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "6454:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6454:7:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6435:26:6"
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "newOwner",
														"nameLocation": "6479:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "6471:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1368,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6471:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"id": 1370,
													"name": "pendingNewOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "6490:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6471:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1373,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6535:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1372,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "6516:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6516:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "6516:28:6"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "pendingNewOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6555:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6581:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6573:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1377,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6573:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6573:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6555:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "6555:28:6"
											},
											{
												"expression": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1383,
														"name": "ownerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "6593:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6618:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6593:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "6593:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1388,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "6656:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6666:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1387,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6635:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "EmitStatement",
												"src": "6630:45:6"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "6096:76:6",
										"text": " @notice Finalize the owner change after the delay period."
									},
									"functionSelector": "dd940cb5",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1343,
												"name": "onlyDeveloper",
												"nameLocations": [
													"6217:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1049,
												"src": "6217:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6217:13:6"
										}
									],
									"name": "finalizeOwnerChange",
									"nameLocation": "6186:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6205:2:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6231:0:6"
									},
									"scope": 1517,
									"src": "6177:505:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "6884:348:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1402,
																"name": "_newDeveloper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "6902:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6927:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6919:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1403,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6919:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6919:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6902:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720646576656c6f7065722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6931:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c",
																"typeString": "literal_string \"New developer cannot be zero address\""
															},
															"value": "New developer cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f68a9c05253eddc1a64800b18e7d9823dd7f15f1ef3bfacef8b609ec9c25c97c",
																"typeString": "literal_string \"New developer cannot be zero address\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6894:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "6894:76:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1412,
																"name": "developerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "6988:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7018:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6988:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576656c6f706572206368616e676520616c726561647920726571756573746564",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7021:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816",
																"typeString": "literal_string \"Developer change already requested\""
															},
															"value": "Developer change already requested"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c923f4f37f90864b45b7f088d85cba962f3d39632d91cf97af0419db4918a816",
																"typeString": "literal_string \"Developer change already requested\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6980:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6980:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "6980:78:6"
											},
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1418,
														"name": "pendingNewDeveloper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "7069:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1419,
														"name": "_newDeveloper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "7091:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7069:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "7069:35:6"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1422,
														"name": "developerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7114:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1423,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7143:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7149:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7143:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7114:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "7114:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1428,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7199:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7203:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7199:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1430,
															"name": "_newDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "7211:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1427,
														"name": "DeveloperChangeRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "7174:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7174:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "EmitStatement",
												"src": "7169:56:6"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "6688:117:6",
										"text": " @notice Request to change the developer.\n @param _newDeveloper Address of the new developer."
									},
									"functionSelector": "9e12279d",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1398,
												"name": "onlyOwner",
												"nameLocations": [
													"6874:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6874:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6874:9:6"
										}
									],
									"name": "requestDeveloperChange",
									"nameLocation": "6819:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_newDeveloper",
												"nameLocation": "6850:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "6842:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6841:23:6"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6884:0:6"
									},
									"scope": 1517,
									"src": "6810:422:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "7362:229:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "developerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7380:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7409:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7380:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20646576656c6f706572206368616e676520726571756573742070656e64696e67",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
																"typeString": "literal_string \"No developer change request pending\""
															},
															"value": "No developer change request pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
																"typeString": "literal_string \"No developer change request pending\""
															}
														],
														"id": 1440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7372:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7372:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "7372:78:6"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1447,
														"name": "pendingNewDeveloper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "7461:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7491:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7483:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1448,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7483:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7483:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7461:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "7461:32:6"
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "developerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7503:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7532:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7503:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "7503:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7573:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7577:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7573:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1458,
														"name": "DeveloperChangeCanceled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "7549:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7549:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "EmitStatement",
												"src": "7544:40:6"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "7238:63:6",
										"text": " @notice Cancel the developer change request."
									},
									"functionSelector": "067453a6",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1438,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1437,
												"name": "onlyDeveloper",
												"nameLocations": [
													"7348:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1049,
												"src": "7348:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7348:13:6"
										}
									],
									"name": "cancelDeveloperChange",
									"nameLocation": "7315:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7336:2:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7362:0:6"
									},
									"scope": 1517,
									"src": "7306:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "7736:489:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1471,
																"name": "developerChangeRequestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7754:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7783:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7754:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20646576656c6f706572206368616e676520726571756573742070656e64696e67",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7786:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
																"typeString": "literal_string \"No developer change request pending\""
															},
															"value": "No developer change request pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64206a8016dfb6c16be55b2e66e132f0da78cf2c79c1606f4156fd577b156200",
																"typeString": "literal_string \"No developer change request pending\""
															}
														],
														"id": 1470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7746:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "7746:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1478,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7842:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7848:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7842:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1480,
																	"name": "developerChangeRequestTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "7861:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1481,
																	"name": "CHANGE_REQUEST_DELAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "7890:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7861:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576656c6f706572206368616e67652064656c6179206e6f74206d6574",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7912:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592",
																"typeString": "literal_string \"Developer change delay not met\""
															},
															"value": "Developer change delay not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d674ff9af400fc8f6ef089851704e2838ad291791a4092f82e0480914d15a592",
																"typeString": "literal_string \"Developer change delay not met\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7834:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7834:111:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "7834:111:6"
											},
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "oldDeveloper",
														"nameLocation": "7964:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1515,
														"src": "7956:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1487,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7956:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"id": 1489,
													"name": "developer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "7979:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7956:32:6"
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "newDeveloper",
														"nameLocation": "8006:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1515,
														"src": "7998:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1491,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7998:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"id": 1493,
													"name": "pendingNewDeveloper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "8021:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7998:42:6"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1495,
														"name": "developer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "8051:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1496,
														"name": "newDeveloper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "8063:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8051:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "8051:24:6"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "pendingNewDeveloper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "8086:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8108:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8108:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8108:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8086:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "8086:32:6"
											},
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1506,
														"name": "developerChangeRequestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "8128:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8157:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8128:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "8128:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1511,
															"name": "oldDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "8191:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "newDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8205:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1510,
														"name": "DeveloperChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8174:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "EmitStatement",
												"src": "8169:49:6"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "7597:80:6",
										"text": " @notice Finalize the developer change after the delay period."
									},
									"functionSelector": "a67a91e3",
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1467,
												"name": "onlyOwner",
												"nameLocations": [
													"7726:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7726:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7726:9:6"
										}
									],
									"name": "finalizeDeveloperChange",
									"nameLocation": "7691:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7714:2:6"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7736:0:6"
									},
									"scope": 1517,
									"src": "7682:543:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1518,
							"src": "540:7687:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								981,
								987,
								993,
								997,
								1001
							]
						}
					],
					"src": "48:8180:6"
				},
				"id": 6
			}
		}
	}
}