{
	"id": "59cfdebb8446995e97db846cb21c0e59",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PrizeManager.sol": {
				"content": "// PrizeManager.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title PrizeManager\r\n * @dev Manages prize pools, distributions, and random winner selection.\r\n */\r\ncontract PrizeManager is Ownable {\r\n    // Prize pools\r\n    uint256 public superPrize;\r\n    uint256 public highPrize;\r\n    uint256 public middlePrize;\r\n    uint256 public lowPrize;\r\n\r\n    // Dividends\r\n    uint256 public ownerDividend;\r\n    uint256 public developerDividend;\r\n\r\n    // Prize distribution settings\r\n    uint256 public prizeScale = 10;\r\n    uint256 private lastPrizeScaleUpdate;\r\n\r\n    // Flags for dividend withdrawal\r\n    bool public distributeOwnerDividends = false;\r\n    bool public distributeDeveloperDividends = false;\r\n\r\n    // Events\r\n    event PrizePoolsUpdated(uint256 superPrize, uint256 highPrize, uint256 middlePrize, uint256 lowPrize);\r\n    event DividendsUpdated(uint256 ownerDividend, uint256 developerDividend);\r\n    event PrizeScaleUpdated(uint256 newPrizeScale);\r\n    event PrizesDistributed(uint256 superPrizeWinners, uint256 highPrizeWinners, uint256 middlePrizeWinners, uint256 lowPrizeWinners);\r\n\r\n    /**\r\n     * @notice Constructor to initialize the contract with an initial owner.\r\n     * @param initialOwner Address of the initial owner.\r\n     */\r\n    constructor(address initialOwner) Ownable(initialOwner) {}\r\n\r\n    /**\r\n     * @notice Updates the prize pools and dividends based on weekly profits.\r\n     * @param profits Total profits accumulated over the week.\r\n     */\r\n    function updatePrizePools(uint256 profits) external onlyOwner {\r\n        require(profits > 0, \"No profits to distribute\");\r\n\r\n        uint256 prizeShare = (profits * 50) / 100; // 50% for prize pools\r\n        uint256 dividendShare = (profits * 5) / 100; // 5% for each dividend\r\n\r\n        // Update prize pools\r\n        superPrize += (prizeShare * 10) / 100; // 10% to super prize\r\n        highPrize += (prizeShare * 10) / 100; // 10% to high prize\r\n        middlePrize += (prizeShare * 10) / 100; // 10% to middle prize\r\n        lowPrize += (prizeShare * 10) / 100; // 10% to low prize\r\n\r\n        // Update dividends\r\n        ownerDividend += dividendShare;\r\n        developerDividend += dividendShare;\r\n\r\n        emit PrizePoolsUpdated(superPrize, highPrize, middlePrize, lowPrize);\r\n        emit DividendsUpdated(ownerDividend, developerDividend);\r\n    }\r\n\r\n    /**\r\n     * @notice Allows owner or developer to update the prize scale once per week.\r\n     * @param newScale The new prize scale value.\r\n     */\r\n    function updatePrizeScale(uint256 newScale) external {\r\n        require(msg.sender == owner() || msg.sender == tx.origin, \"Not authorized\");\r\n        require(block.timestamp >= lastPrizeScaleUpdate + 1 weeks, \"Prize scale can only be updated once per week\");\r\n        require(newScale > 0, \"Prize scale must be greater than zero\");\r\n\r\n        prizeScale = newScale;\r\n        lastPrizeScaleUpdate = block.timestamp;\r\n\r\n        emit PrizeScaleUpdated(newScale);\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if there are sufficient funds in prize pools for distribution.\r\n     * @dev This function prepares for distribution but does not execute it.\r\n     */\r\n    function checkPrizePoolDistribution() external view returns (bool) {\r\n        uint256 totalNeeded =\r\n            prizeScale * 1000 + // Super prize\r\n            prizeScale * 100 +  // High prize\r\n            prizeScale * 10 +   // Middle prize\r\n            prizeScale * 1;     // Low prize\r\n\r\n        return (superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded || lowPrize >= totalNeeded);\r\n    }\r\n\r\n    /**\r\n     * @notice Generates winners for each prize pool.\r\n     * @dev This function will later be connected to a Chainlink oracle for randomness.\r\n     */\r\n    function generateWinners() external onlyOwner {\r\n        // TODO: Implement Chainlink VRF for random winner selection\r\n        emit PrizesDistributed(0, 0, 0, 0); // Placeholder\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PrizeManager.sol": {
				"PrizeManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerDividend",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "developerDividend",
									"type": "uint256"
								}
							],
							"name": "DividendsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "superPrize",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highPrize",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "middlePrize",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowPrize",
									"type": "uint256"
								}
							],
							"name": "PrizePoolsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPrizeScale",
									"type": "uint256"
								}
							],
							"name": "PrizeScaleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "superPrizeWinners",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highPrizeWinners",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "middlePrizeWinners",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowPrizeWinners",
									"type": "uint256"
								}
							],
							"name": "PrizesDistributed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "checkPrizePoolDistribution",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developerDividend",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeDeveloperDividends",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeOwnerDividends",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "generateWinners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lowPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "middlePrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerDividend",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prizeScale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "superPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profits",
									"type": "uint256"
								}
							],
							"name": "updatePrizePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newScale",
									"type": "uint256"
								}
							],
							"name": "updatePrizeScale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Manages prize pools, distributions, and random winner selection.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"checkPrizePoolDistribution()": {
								"details": "This function prepares for distribution but does not execute it."
							},
							"constructor": {
								"params": {
									"initialOwner": "Address of the initial owner."
								}
							},
							"generateWinners()": {
								"details": "This function will later be connected to a Chainlink oracle for randomness."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updatePrizePools(uint256)": {
								"params": {
									"profits": "Total profits accumulated over the week."
								}
							},
							"updatePrizeScale(uint256)": {
								"params": {
									"newScale": "The new prize scale value."
								}
							}
						},
						"title": "PrizeManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PrizeManager.sol\":246:4024  contract PrizeManager is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PrizeManager.sol\":592:594  10 */\n  0x0a\n    /* \"contracts/PrizeManager.sol\":564:594  uint256 public prizeScale = 10 */\n  0x07\n  sstore\n    /* \"contracts/PrizeManager.sol\":723:728  false */\n  0x00\n    /* \"contracts/PrizeManager.sol\":684:728  bool public distributeOwnerDividends = false */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PrizeManager.sol\":778:783  false */\n  0x00\n    /* \"contracts/PrizeManager.sol\":735:783  bool public distributeDeveloperDividends = false */\n  0x09\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PrizeManager.sol\":1339:1397  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PrizeManager.sol\":1381:1393  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PrizeManager.sol\":1339:1397  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/PrizeManager.sol\":246:4024  contract PrizeManager is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PrizeManager.sol\":246:4024  contract PrizeManager is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PrizeManager.sol\":246:4024  contract PrizeManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xab4d819f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xf1a002b1\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xf1a002b1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2e27b65\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfb5274e5\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xab4d819f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xacdcf5f2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcb3ebec2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xed22723a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7b820b83\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9ad97fa0\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x11a1c8bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1934c786\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1f63000f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x638ad71d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/PrizeManager.sol\":306:331  uint256 public superPrize */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":487:519  uint256 public developerDividend */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":735:783  bool public distributeDeveloperDividends = false */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":402:425  uint256 public lowPrize */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/PrizeManager.sol\":338:362  uint256 public highPrize */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":1566:2423  function updatePrizePools(uint256 profits) external onlyOwner {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/PrizeManager.sol\":369:395  uint256 public middlePrize */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":3239:3667  function checkPrizePoolDistribution() external view returns (bool) {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":452:480  uint256 public ownerDividend */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":564:594  uint256 public prizeScale = 10 */\n    tag_14:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":684:728  bool public distributeOwnerDividends = false */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PrizeManager.sol\":2583:3049  function updatePrizeScale(uint256 newScale) external {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/PrizeManager.sol\":3837:4021  function generateWinners() external onlyOwner {... */\n    tag_18:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/PrizeManager.sol\":306:331  uint256 public superPrize */\n    tag_23:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":487:519  uint256 public developerDividend */\n    tag_27:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":735:783  bool public distributeDeveloperDividends = false */\n    tag_30:\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":402:425  uint256 public lowPrize */\n    tag_34:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":338:362  uint256 public highPrize */\n    tag_39:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":1566:2423  function updatePrizePools(uint256 profits) external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/PrizeManager.sol\":1657:1658  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":1647:1654  profits */\n      dup2\n        /* \"contracts/PrizeManager.sol\":1647:1658  profits > 0 */\n      gt\n        /* \"contracts/PrizeManager.sol\":1639:1687  require(profits > 0, \"No profits to distribute\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/PrizeManager.sol\":1700:1718  uint256 prizeShare */\n      0x00\n        /* \"contracts/PrizeManager.sol\":1738:1741  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":1732:1734  50 */\n      0x32\n        /* \"contracts/PrizeManager.sol\":1722:1729  profits */\n      dup4\n        /* \"contracts/PrizeManager.sol\":1722:1734  profits * 50 */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/PrizeManager.sol\":1721:1741  (profits * 50) / 100 */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/PrizeManager.sol\":1700:1741  uint256 prizeShare = (profits * 50) / 100 */\n      swap1\n      pop\n        /* \"contracts/PrizeManager.sol\":1775:1796  uint256 dividendShare */\n      0x00\n        /* \"contracts/PrizeManager.sol\":1815:1818  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":1810:1811  5 */\n      0x05\n        /* \"contracts/PrizeManager.sol\":1800:1807  profits */\n      dup5\n        /* \"contracts/PrizeManager.sol\":1800:1811  profits * 5 */\n      tag_90\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_90:\n        /* \"contracts/PrizeManager.sol\":1799:1818  (profits * 5) / 100 */\n      tag_91\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_91:\n        /* \"contracts/PrizeManager.sol\":1775:1818  uint256 dividendShare = (profits * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/PrizeManager.sol\":1920:1923  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":1914:1916  10 */\n      0x0a\n        /* \"contracts/PrizeManager.sol\":1901:1911  prizeShare */\n      dup4\n        /* \"contracts/PrizeManager.sol\":1901:1916  prizeShare * 10 */\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n        /* \"contracts/PrizeManager.sol\":1900:1923  (prizeShare * 10) / 100 */\n      tag_93\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_93:\n        /* \"contracts/PrizeManager.sol\":1886:1896  superPrize */\n      0x01\n      0x00\n        /* \"contracts/PrizeManager.sol\":1886:1923  superPrize += (prizeShare * 10) / 100 */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":1989:1992  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":1983:1985  10 */\n      0x0a\n        /* \"contracts/PrizeManager.sol\":1970:1980  prizeShare */\n      dup4\n        /* \"contracts/PrizeManager.sol\":1970:1985  prizeShare * 10 */\n      tag_96\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_96:\n        /* \"contracts/PrizeManager.sol\":1969:1992  (prizeShare * 10) / 100 */\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n        /* \"contracts/PrizeManager.sol\":1956:1965  highPrize */\n      0x02\n      0x00\n        /* \"contracts/PrizeManager.sol\":1956:1992  highPrize += (prizeShare * 10) / 100 */\n      dup3\n      dup3\n      sload\n      tag_98\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_98:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2059:2062  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":2053:2055  10 */\n      0x0a\n        /* \"contracts/PrizeManager.sol\":2040:2050  prizeShare */\n      dup4\n        /* \"contracts/PrizeManager.sol\":2040:2055  prizeShare * 10 */\n      tag_99\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_99:\n        /* \"contracts/PrizeManager.sol\":2039:2062  (prizeShare * 10) / 100 */\n      tag_100\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_100:\n        /* \"contracts/PrizeManager.sol\":2024:2035  middlePrize */\n      0x03\n      0x00\n        /* \"contracts/PrizeManager.sol\":2024:2062  middlePrize += (prizeShare * 10) / 100 */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2128:2131  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":2122:2124  10 */\n      0x0a\n        /* \"contracts/PrizeManager.sol\":2109:2119  prizeShare */\n      dup4\n        /* \"contracts/PrizeManager.sol\":2109:2124  prizeShare * 10 */\n      tag_102\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_102:\n        /* \"contracts/PrizeManager.sol\":2108:2131  (prizeShare * 10) / 100 */\n      tag_103\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_103:\n        /* \"contracts/PrizeManager.sol\":2096:2104  lowPrize */\n      0x04\n      0x00\n        /* \"contracts/PrizeManager.sol\":2096:2131  lowPrize += (prizeShare * 10) / 100 */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2210:2223  dividendShare */\n      dup1\n        /* \"contracts/PrizeManager.sol\":2193:2206  ownerDividend */\n      0x05\n      0x00\n        /* \"contracts/PrizeManager.sol\":2193:2223  ownerDividend += dividendShare */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2255:2268  dividendShare */\n      dup1\n        /* \"contracts/PrizeManager.sol\":2234:2251  developerDividend */\n      0x06\n      0x00\n        /* \"contracts/PrizeManager.sol\":2234:2268  developerDividend += dividendShare */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2286:2349  PrizePoolsUpdated(superPrize, highPrize, middlePrize, lowPrize) */\n      0xc1879f0406577975a5876a8db2ec1549e2a3194f0f01e15bde4292d6e4b36824\n        /* \"contracts/PrizeManager.sol\":2304:2314  superPrize */\n      sload(0x01)\n        /* \"contracts/PrizeManager.sol\":2316:2325  highPrize */\n      sload(0x02)\n        /* \"contracts/PrizeManager.sol\":2327:2338  middlePrize */\n      sload(0x03)\n        /* \"contracts/PrizeManager.sol\":2340:2348  lowPrize */\n      sload(0x04)\n        /* \"contracts/PrizeManager.sol\":2286:2349  PrizePoolsUpdated(superPrize, highPrize, middlePrize, lowPrize) */\n      mload(0x40)\n      tag_107\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PrizeManager.sol\":2365:2415  DividendsUpdated(ownerDividend, developerDividend) */\n      0xbbb79063c8e8bcd7691a017e4e76c5de1369686b9f0674f946b0129041525b59\n        /* \"contracts/PrizeManager.sol\":2382:2395  ownerDividend */\n      sload(0x05)\n        /* \"contracts/PrizeManager.sol\":2397:2414  developerDividend */\n      sload(0x06)\n        /* \"contracts/PrizeManager.sol\":2365:2415  DividendsUpdated(ownerDividend, developerDividend) */\n      mload(0x40)\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PrizeManager.sol\":1628:2423  {... */\n      pop\n      pop\n        /* \"contracts/PrizeManager.sol\":1566:2423  function updatePrizePools(uint256 profits) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":369:395  uint256 public middlePrize */\n    tag_50:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":3239:3667  function checkPrizePoolDistribution() external view returns (bool) {... */\n    tag_53:\n        /* \"contracts/PrizeManager.sol\":3300:3304  bool */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3317:3336  uint256 totalNeeded */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3509:3510  1 */\n      0x01\n        /* \"contracts/PrizeManager.sol\":3496:3506  prizeScale */\n      sload(0x07)\n        /* \"contracts/PrizeManager.sol\":3496:3510  prizeScale * 1 */\n      tag_112\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_112:\n        /* \"contracts/PrizeManager.sol\":3460:3462  10 */\n      0x0a\n        /* \"contracts/PrizeManager.sol\":3447:3457  prizeScale */\n      sload(0x07)\n        /* \"contracts/PrizeManager.sol\":3447:3462  prizeScale * 10 */\n      tag_113\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_113:\n        /* \"contracts/PrizeManager.sol\":3413:3416  100 */\n      0x64\n        /* \"contracts/PrizeManager.sol\":3400:3410  prizeScale */\n      sload(0x07)\n        /* \"contracts/PrizeManager.sol\":3400:3416  prizeScale * 100 */\n      tag_114\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_114:\n        /* \"contracts/PrizeManager.sol\":3365:3369  1000 */\n      0x03e8\n        /* \"contracts/PrizeManager.sol\":3352:3362  prizeScale */\n      sload(0x07)\n        /* \"contracts/PrizeManager.sol\":3352:3369  prizeScale * 1000 */\n      tag_115\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_115:\n        /* \"contracts/PrizeManager.sol\":3352:3416  prizeScale * 1000 + // Super prize... */\n      tag_116\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_116:\n        /* \"contracts/PrizeManager.sol\":3352:3462  prizeScale * 1000 + // Super prize... */\n      tag_117\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_117:\n        /* \"contracts/PrizeManager.sol\":3352:3510  prizeScale * 1000 + // Super prize... */\n      tag_118\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_118:\n        /* \"contracts/PrizeManager.sol\":3317:3510  uint256 totalNeeded =... */\n      swap1\n      pop\n        /* \"contracts/PrizeManager.sol\":3562:3573  totalNeeded */\n      dup1\n        /* \"contracts/PrizeManager.sol\":3548:3558  superPrize */\n      sload(0x01)\n        /* \"contracts/PrizeManager.sol\":3548:3573  superPrize >= totalNeeded */\n      lt\n      iszero\n        /* \"contracts/PrizeManager.sol\":3548:3601  superPrize >= totalNeeded || highPrize >= totalNeeded */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"contracts/PrizeManager.sol\":3590:3601  totalNeeded */\n      dup1\n        /* \"contracts/PrizeManager.sol\":3577:3586  highPrize */\n      sload(0x02)\n        /* \"contracts/PrizeManager.sol\":3577:3601  highPrize >= totalNeeded */\n      lt\n      iszero\n        /* \"contracts/PrizeManager.sol\":3548:3601  superPrize >= totalNeeded || highPrize >= totalNeeded */\n    tag_119:\n        /* \"contracts/PrizeManager.sol\":3548:3631  superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/PrizeManager.sol\":3620:3631  totalNeeded */\n      dup1\n        /* \"contracts/PrizeManager.sol\":3605:3616  middlePrize */\n      sload(0x03)\n        /* \"contracts/PrizeManager.sol\":3605:3631  middlePrize >= totalNeeded */\n      lt\n      iszero\n        /* \"contracts/PrizeManager.sol\":3548:3631  superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded */\n    tag_120:\n        /* \"contracts/PrizeManager.sol\":3548:3658  superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded || lowPrize >= totalNeeded */\n      dup1\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/PrizeManager.sol\":3647:3658  totalNeeded */\n      dup1\n        /* \"contracts/PrizeManager.sol\":3635:3643  lowPrize */\n      sload(0x04)\n        /* \"contracts/PrizeManager.sol\":3635:3658  lowPrize >= totalNeeded */\n      lt\n      iszero\n        /* \"contracts/PrizeManager.sol\":3548:3658  superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded || lowPrize >= totalNeeded */\n    tag_121:\n        /* \"contracts/PrizeManager.sol\":3540:3659  return (superPrize >= totalNeeded || highPrize >= totalNeeded || middlePrize >= totalNeeded || lowPrize >= totalNeeded) */\n      swap2\n      pop\n      pop\n        /* \"contracts/PrizeManager.sol\":3239:3667  function checkPrizePoolDistribution() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":452:480  uint256 public ownerDividend */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":564:594  uint256 public prizeScale = 10 */\n    tag_59:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":684:728  bool public distributeOwnerDividends = false */\n    tag_62:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":2583:3049  function updatePrizeScale(uint256 newScale) external {... */\n    tag_66:\n        /* \"contracts/PrizeManager.sol\":2669:2676  owner() */\n      tag_123\n        /* \"contracts/PrizeManager.sol\":2669:2674  owner */\n      tag_42\n        /* \"contracts/PrizeManager.sol\":2669:2676  owner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/PrizeManager.sol\":2655:2676  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PrizeManager.sol\":2655:2665  msg.sender */\n      caller\n        /* \"contracts/PrizeManager.sol\":2655:2676  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PrizeManager.sol\":2655:2703  msg.sender == owner() || msg.sender == tx.origin */\n      dup1\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/PrizeManager.sol\":2694:2703  tx.origin */\n      origin\n        /* \"contracts/PrizeManager.sol\":2680:2703  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PrizeManager.sol\":2680:2690  msg.sender */\n      caller\n        /* \"contracts/PrizeManager.sol\":2680:2703  msg.sender == tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PrizeManager.sol\":2655:2703  msg.sender == owner() || msg.sender == tx.origin */\n    tag_124:\n        /* \"contracts/PrizeManager.sol\":2647:2722  require(msg.sender == owner() || msg.sender == tx.origin, \"Not authorized\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/PrizeManager.sol\":2783:2790  1 weeks */\n      0x093a80\n        /* \"contracts/PrizeManager.sol\":2760:2780  lastPrizeScaleUpdate */\n      sload(0x08)\n        /* \"contracts/PrizeManager.sol\":2760:2790  lastPrizeScaleUpdate + 1 weeks */\n      tag_128\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_128:\n        /* \"contracts/PrizeManager.sol\":2741:2756  block.timestamp */\n      timestamp\n        /* \"contracts/PrizeManager.sol\":2741:2790  block.timestamp >= lastPrizeScaleUpdate + 1 weeks */\n      lt\n      iszero\n        /* \"contracts/PrizeManager.sol\":2733:2840  require(block.timestamp >= lastPrizeScaleUpdate + 1 weeks, \"Prize scale can only be updated once per week\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/PrizeManager.sol\":2870:2871  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":2859:2867  newScale */\n      dup2\n        /* \"contracts/PrizeManager.sol\":2859:2871  newScale > 0 */\n      gt\n        /* \"contracts/PrizeManager.sol\":2851:2913  require(newScale > 0, \"Prize scale must be greater than zero\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/PrizeManager.sol\":2939:2947  newScale */\n      dup1\n        /* \"contracts/PrizeManager.sol\":2926:2936  prizeScale */\n      0x07\n        /* \"contracts/PrizeManager.sol\":2926:2947  prizeScale = newScale */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":2981:2996  block.timestamp */\n      timestamp\n        /* \"contracts/PrizeManager.sol\":2958:2978  lastPrizeScaleUpdate */\n      0x08\n        /* \"contracts/PrizeManager.sol\":2958:2996  lastPrizeScaleUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrizeManager.sol\":3014:3041  PrizeScaleUpdated(newScale) */\n      0xbe74989b82c125ec369bdc21c95661e14a1d97c700ebdef03b84c0da6fc93c5a\n        /* \"contracts/PrizeManager.sol\":3032:3040  newScale */\n      dup2\n        /* \"contracts/PrizeManager.sol\":3014:3041  PrizeScaleUpdated(newScale) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PrizeManager.sol\":2583:3049  function updatePrizeScale(uint256 newScale) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PrizeManager.sol\":3837:4021  function generateWinners() external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/PrizeManager.sol\":3969:3998  PrizesDistributed(0, 0, 0, 0) */\n      0xfe24c1a52828fa9764a2d2ebf1c0066647f541fa9636c315facf936ed0b3a779\n        /* \"contracts/PrizeManager.sol\":3987:3988  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3990:3991  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3993:3994  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3996:3997  0 */\n      0x00\n        /* \"contracts/PrizeManager.sol\":3969:3998  PrizesDistributed(0, 0, 0, 0) */\n      mload(0x40)\n      tag_145\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PrizeManager.sol\":3837:4021  function generateWinners() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_156:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_157:\n        /* \"#utility.yul\":177:201   */\n      tag_188\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_156\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_190\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_157\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_158:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_159:\n        /* \"#utility.yul\":619:640   */\n      tag_193\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_158\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_32:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_195\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_159\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:995   */\n    tag_160:\n        /* \"#utility.yul\":906:913   */\n      0x00\n        /* \"#utility.yul\":946:988   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:989   */\n      and\n        /* \"#utility.yul\":924:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1097   */\n    tag_161:\n        /* \"#utility.yul\":1038:1045   */\n      0x00\n        /* \"#utility.yul\":1067:1091   */\n      tag_198\n        /* \"#utility.yul\":1085:1090   */\n      dup3\n        /* \"#utility.yul\":1067:1091   */\n      tag_160\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1056:1091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1103:1221   */\n    tag_162:\n        /* \"#utility.yul\":1190:1214   */\n      tag_200\n        /* \"#utility.yul\":1208:1213   */\n      dup2\n        /* \"#utility.yul\":1190:1214   */\n      tag_161\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1185:1188   */\n      dup3\n        /* \"#utility.yul\":1178:1215   */\n      mstore\n        /* \"#utility.yul\":1103:1221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1449   */\n    tag_44:\n        /* \"#utility.yul\":1320:1324   */\n      0x00\n        /* \"#utility.yul\":1358:1360   */\n      0x20\n        /* \"#utility.yul\":1347:1356   */\n      dup3\n        /* \"#utility.yul\":1343:1361   */\n      add\n        /* \"#utility.yul\":1335:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1442   */\n      tag_202\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1371:1442   */\n      tag_162\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1227:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1653   */\n    tag_164:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1782:1904   */\n    tag_166:\n        /* \"#utility.yul\":1855:1879   */\n      tag_207\n        /* \"#utility.yul\":1873:1878   */\n      dup2\n        /* \"#utility.yul\":1855:1879   */\n      tag_156\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1845:1880   */\n      eq\n        /* \"#utility.yul\":1835:1898   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      0x00\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1835:1898   */\n    tag_208:\n        /* \"#utility.yul\":1782:1904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2049   */\n    tag_167:\n        /* \"#utility.yul\":1956:1961   */\n      0x00\n        /* \"#utility.yul\":1994:2000   */\n      dup2\n        /* \"#utility.yul\":1981:2001   */\n      calldataload\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2010:2043   */\n      tag_210\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2010:2043   */\n      tag_166\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1910:2049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2384   */\n    tag_47:\n        /* \"#utility.yul\":2114:2120   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2151:2160   */\n      dup3\n        /* \"#utility.yul\":2142:2149   */\n      dup5\n        /* \"#utility.yul\":2138:2161   */\n      sub\n        /* \"#utility.yul\":2134:2166   */\n      slt\n        /* \"#utility.yul\":2131:2250   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2169:2248   */\n      tag_213\n      tag_164\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2131:2250   */\n    tag_212:\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2314:2367   */\n      tag_214\n        /* \"#utility.yul\":2359:2366   */\n      dup5\n        /* \"#utility.yul\":2350:2356   */\n      dup3\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2314:2367   */\n      tag_167\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2304:2367   */\n      swap2\n      pop\n        /* \"#utility.yul\":2260:2377   */\n      pop\n        /* \"#utility.yul\":2055:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_168:\n        /* \"#utility.yul\":2463:2487   */\n      tag_216\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_161\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_217:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_169:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_219\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_69:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_222\n      tag_164\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2739:2858   */\n    tag_221:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_223\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_169\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3167   */\n    tag_170:\n        /* \"#utility.yul\":3082:3093   */\n      0x00\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3111:3114   */\n      dup3\n        /* \"#utility.yul\":3104:3123   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x20\n        /* \"#utility.yul\":3151:3154   */\n      dup3\n        /* \"#utility.yul\":3147:3161   */\n      add\n        /* \"#utility.yul\":3132:3161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3347   */\n    tag_171:\n        /* \"#utility.yul\":3313:3339   */\n      0x4e6f2070726f6669747320746f20646973747269627574650000000000000000\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3311   */\n      add\n        /* \"#utility.yul\":3290:3340   */\n      mstore\n        /* \"#utility.yul\":3173:3347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3353:3719   */\n    tag_172:\n        /* \"#utility.yul\":3495:3498   */\n      0x00\n        /* \"#utility.yul\":3516:3583   */\n      tag_227\n        /* \"#utility.yul\":3580:3582   */\n      0x18\n        /* \"#utility.yul\":3575:3578   */\n      dup4\n        /* \"#utility.yul\":3516:3583   */\n      tag_170\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3509:3583   */\n      swap2\n      pop\n        /* \"#utility.yul\":3592:3685   */\n      tag_228\n        /* \"#utility.yul\":3681:3684   */\n      dup3\n        /* \"#utility.yul\":3592:3685   */\n      tag_171\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3705:3708   */\n      dup3\n        /* \"#utility.yul\":3701:3713   */\n      add\n        /* \"#utility.yul\":3694:3713   */\n      swap1\n      pop\n        /* \"#utility.yul\":3353:3719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3725:4144   */\n    tag_85:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3978:3987   */\n      dup2\n        /* \"#utility.yul\":3972:3976   */\n      dup2\n        /* \"#utility.yul\":3968:3988   */\n      sub\n        /* \"#utility.yul\":3964:3965   */\n      0x00\n        /* \"#utility.yul\":3953:3962   */\n      dup4\n        /* \"#utility.yul\":3949:3966   */\n      add\n        /* \"#utility.yul\":3942:3989   */\n      mstore\n        /* \"#utility.yul\":4006:4137   */\n      tag_230\n        /* \"#utility.yul\":4132:4136   */\n      dup2\n        /* \"#utility.yul\":4006:4137   */\n      tag_172\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3998:4137   */\n      swap1\n      pop\n        /* \"#utility.yul\":3725:4144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4330   */\n    tag_173:\n        /* \"#utility.yul\":4198:4275   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4195:4196   */\n      0x00\n        /* \"#utility.yul\":4188:4276   */\n      mstore\n        /* \"#utility.yul\":4295:4299   */\n      0x11\n        /* \"#utility.yul\":4292:4293   */\n      0x04\n        /* \"#utility.yul\":4285:4300   */\n      mstore\n        /* \"#utility.yul\":4319:4323   */\n      0x24\n        /* \"#utility.yul\":4316:4317   */\n      0x00\n        /* \"#utility.yul\":4309:4324   */\n      revert\n        /* \"#utility.yul\":4336:4746   */\n    tag_87:\n        /* \"#utility.yul\":4376:4383   */\n      0x00\n        /* \"#utility.yul\":4399:4419   */\n      tag_233\n        /* \"#utility.yul\":4417:4418   */\n      dup3\n        /* \"#utility.yul\":4399:4419   */\n      tag_156\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4394:4419   */\n      swap2\n      pop\n        /* \"#utility.yul\":4433:4453   */\n      tag_234\n        /* \"#utility.yul\":4451:4452   */\n      dup4\n        /* \"#utility.yul\":4433:4453   */\n      tag_156\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4428:4453   */\n      swap3\n      pop\n        /* \"#utility.yul\":4488:4489   */\n      dup3\n        /* \"#utility.yul\":4485:4486   */\n      dup3\n        /* \"#utility.yul\":4481:4490   */\n      mul\n        /* \"#utility.yul\":4510:4540   */\n      tag_235\n        /* \"#utility.yul\":4528:4539   */\n      dup2\n        /* \"#utility.yul\":4510:4540   */\n      tag_156\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4499:4540   */\n      swap2\n      pop\n        /* \"#utility.yul\":4689:4690   */\n      dup3\n        /* \"#utility.yul\":4680:4687   */\n      dup3\n        /* \"#utility.yul\":4676:4691   */\n      div\n        /* \"#utility.yul\":4673:4674   */\n      dup5\n        /* \"#utility.yul\":4670:4692   */\n      eq\n        /* \"#utility.yul\":4650:4651   */\n      dup4\n        /* \"#utility.yul\":4643:4652   */\n      iszero\n        /* \"#utility.yul\":4623:4706   */\n      or\n        /* \"#utility.yul\":4600:4739   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":4719:4737   */\n      tag_237\n      tag_173\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4600:4739   */\n    tag_236:\n        /* \"#utility.yul\":4384:4746   */\n      pop\n        /* \"#utility.yul\":4336:4746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4932   */\n    tag_174:\n        /* \"#utility.yul\":4800:4877   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4790:4878   */\n      mstore\n        /* \"#utility.yul\":4897:4901   */\n      0x12\n        /* \"#utility.yul\":4894:4895   */\n      0x04\n        /* \"#utility.yul\":4887:4902   */\n      mstore\n        /* \"#utility.yul\":4921:4925   */\n      0x24\n        /* \"#utility.yul\":4918:4919   */\n      0x00\n        /* \"#utility.yul\":4911:4926   */\n      revert\n        /* \"#utility.yul\":4938:5123   */\n    tag_89:\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4995:5015   */\n      tag_240\n        /* \"#utility.yul\":5013:5014   */\n      dup3\n        /* \"#utility.yul\":4995:5015   */\n      tag_156\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4990:5015   */\n      swap2\n      pop\n        /* \"#utility.yul\":5029:5049   */\n      tag_241\n        /* \"#utility.yul\":5047:5048   */\n      dup4\n        /* \"#utility.yul\":5029:5049   */\n      tag_156\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5024:5049   */\n      swap3\n      pop\n        /* \"#utility.yul\":5068:5069   */\n      dup3\n        /* \"#utility.yul\":5058:5093   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":5073:5091   */\n      tag_243\n      tag_174\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5058:5093   */\n    tag_242:\n        /* \"#utility.yul\":5115:5116   */\n      dup3\n        /* \"#utility.yul\":5112:5113   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      div\n        /* \"#utility.yul\":5103:5117   */\n      swap1\n      pop\n        /* \"#utility.yul\":4938:5123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5320   */\n    tag_95:\n        /* \"#utility.yul\":5169:5172   */\n      0x00\n        /* \"#utility.yul\":5188:5208   */\n      tag_245\n        /* \"#utility.yul\":5206:5207   */\n      dup3\n        /* \"#utility.yul\":5188:5208   */\n      tag_156\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5183:5208   */\n      swap2\n      pop\n        /* \"#utility.yul\":5222:5242   */\n      tag_246\n        /* \"#utility.yul\":5240:5241   */\n      dup4\n        /* \"#utility.yul\":5222:5242   */\n      tag_156\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5217:5242   */\n      swap3\n      pop\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5262:5263   */\n      dup3\n        /* \"#utility.yul\":5258:5267   */\n      add\n        /* \"#utility.yul\":5251:5267   */\n      swap1\n      pop\n        /* \"#utility.yul\":5286:5289   */\n      dup1\n        /* \"#utility.yul\":5283:5284   */\n      dup3\n        /* \"#utility.yul\":5280:5290   */\n      gt\n        /* \"#utility.yul\":5277:5313   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":5293:5311   */\n      tag_248\n      tag_173\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5277:5313   */\n    tag_247:\n        /* \"#utility.yul\":5129:5320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5326:5879   */\n    tag_108:\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5541:5544   */\n      0x80\n        /* \"#utility.yul\":5530:5539   */\n      dup3\n        /* \"#utility.yul\":5526:5545   */\n      add\n        /* \"#utility.yul\":5518:5545   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5626   */\n      tag_250\n        /* \"#utility.yul\":5623:5624   */\n      0x00\n        /* \"#utility.yul\":5612:5621   */\n      dup4\n        /* \"#utility.yul\":5608:5625   */\n      add\n        /* \"#utility.yul\":5599:5605   */\n      dup8\n        /* \"#utility.yul\":5555:5626   */\n      tag_157\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5636:5708   */\n      tag_251\n        /* \"#utility.yul\":5704:5706   */\n      0x20\n        /* \"#utility.yul\":5693:5702   */\n      dup4\n        /* \"#utility.yul\":5689:5707   */\n      add\n        /* \"#utility.yul\":5680:5686   */\n      dup7\n        /* \"#utility.yul\":5636:5708   */\n      tag_157\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5718:5790   */\n      tag_252\n        /* \"#utility.yul\":5786:5788   */\n      0x40\n        /* \"#utility.yul\":5775:5784   */\n      dup4\n        /* \"#utility.yul\":5771:5789   */\n      add\n        /* \"#utility.yul\":5762:5768   */\n      dup6\n        /* \"#utility.yul\":5718:5790   */\n      tag_157\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5800:5872   */\n      tag_253\n        /* \"#utility.yul\":5868:5870   */\n      0x60\n        /* \"#utility.yul\":5857:5866   */\n      dup4\n        /* \"#utility.yul\":5853:5871   */\n      add\n        /* \"#utility.yul\":5844:5850   */\n      dup5\n        /* \"#utility.yul\":5800:5872   */\n      tag_157\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5326:5879   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5885:6217   */\n    tag_110:\n        /* \"#utility.yul\":6006:6010   */\n      0x00\n        /* \"#utility.yul\":6044:6046   */\n      0x40\n        /* \"#utility.yul\":6033:6042   */\n      dup3\n        /* \"#utility.yul\":6029:6047   */\n      add\n        /* \"#utility.yul\":6021:6047   */\n      swap1\n      pop\n        /* \"#utility.yul\":6057:6128   */\n      tag_255\n        /* \"#utility.yul\":6125:6126   */\n      0x00\n        /* \"#utility.yul\":6114:6123   */\n      dup4\n        /* \"#utility.yul\":6110:6127   */\n      add\n        /* \"#utility.yul\":6101:6107   */\n      dup6\n        /* \"#utility.yul\":6057:6128   */\n      tag_157\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6138:6210   */\n      tag_256\n        /* \"#utility.yul\":6206:6208   */\n      0x20\n        /* \"#utility.yul\":6195:6204   */\n      dup4\n        /* \"#utility.yul\":6191:6209   */\n      add\n        /* \"#utility.yul\":6182:6188   */\n      dup5\n        /* \"#utility.yul\":6138:6210   */\n      tag_157\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5885:6217   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6387   */\n    tag_175:\n        /* \"#utility.yul\":6363:6379   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6351:6357   */\n      dup3\n        /* \"#utility.yul\":6347:6361   */\n      add\n        /* \"#utility.yul\":6340:6380   */\n      mstore\n        /* \"#utility.yul\":6223:6387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6759   */\n    tag_176:\n        /* \"#utility.yul\":6535:6538   */\n      0x00\n        /* \"#utility.yul\":6556:6623   */\n      tag_259\n        /* \"#utility.yul\":6620:6622   */\n      0x0e\n        /* \"#utility.yul\":6615:6618   */\n      dup4\n        /* \"#utility.yul\":6556:6623   */\n      tag_170\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6549:6623   */\n      swap2\n      pop\n        /* \"#utility.yul\":6632:6725   */\n      tag_260\n        /* \"#utility.yul\":6721:6724   */\n      dup3\n        /* \"#utility.yul\":6632:6725   */\n      tag_175\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6750:6752   */\n      0x20\n        /* \"#utility.yul\":6745:6748   */\n      dup3\n        /* \"#utility.yul\":6741:6753   */\n      add\n        /* \"#utility.yul\":6734:6753   */\n      swap1\n      pop\n        /* \"#utility.yul\":6393:6759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6765:7184   */\n    tag_127:\n        /* \"#utility.yul\":6931:6935   */\n      0x00\n        /* \"#utility.yul\":6969:6971   */\n      0x20\n        /* \"#utility.yul\":6958:6967   */\n      dup3\n        /* \"#utility.yul\":6954:6972   */\n      add\n        /* \"#utility.yul\":6946:6972   */\n      swap1\n      pop\n        /* \"#utility.yul\":7018:7027   */\n      dup2\n        /* \"#utility.yul\":7012:7016   */\n      dup2\n        /* \"#utility.yul\":7008:7028   */\n      sub\n        /* \"#utility.yul\":7004:7005   */\n      0x00\n        /* \"#utility.yul\":6993:7002   */\n      dup4\n        /* \"#utility.yul\":6989:7006   */\n      add\n        /* \"#utility.yul\":6982:7029   */\n      mstore\n        /* \"#utility.yul\":7046:7177   */\n      tag_262\n        /* \"#utility.yul\":7172:7176   */\n      dup2\n        /* \"#utility.yul\":7046:7177   */\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7038:7177   */\n      swap1\n      pop\n        /* \"#utility.yul\":6765:7184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7190:7422   */\n    tag_177:\n        /* \"#utility.yul\":7330:7364   */\n      0x5072697a65207363616c652063616e206f6e6c79206265207570646174656420\n        /* \"#utility.yul\":7326:7327   */\n      0x00\n        /* \"#utility.yul\":7318:7324   */\n      dup3\n        /* \"#utility.yul\":7314:7328   */\n      add\n        /* \"#utility.yul\":7307:7365   */\n      mstore\n        /* \"#utility.yul\":7399:7414   */\n      0x6f6e636520706572207765656b00000000000000000000000000000000000000\n        /* \"#utility.yul\":7394:7396   */\n      0x20\n        /* \"#utility.yul\":7386:7392   */\n      dup3\n        /* \"#utility.yul\":7382:7397   */\n      add\n        /* \"#utility.yul\":7375:7415   */\n      mstore\n        /* \"#utility.yul\":7190:7422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7428:7794   */\n    tag_178:\n        /* \"#utility.yul\":7570:7573   */\n      0x00\n        /* \"#utility.yul\":7591:7658   */\n      tag_265\n        /* \"#utility.yul\":7655:7657   */\n      0x2d\n        /* \"#utility.yul\":7650:7653   */\n      dup4\n        /* \"#utility.yul\":7591:7658   */\n      tag_170\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7584:7658   */\n      swap2\n      pop\n        /* \"#utility.yul\":7667:7760   */\n      tag_266\n        /* \"#utility.yul\":7756:7759   */\n      dup3\n        /* \"#utility.yul\":7667:7760   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7785:7787   */\n      0x40\n        /* \"#utility.yul\":7780:7783   */\n      dup3\n        /* \"#utility.yul\":7776:7788   */\n      add\n        /* \"#utility.yul\":7769:7788   */\n      swap1\n      pop\n        /* \"#utility.yul\":7428:7794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7800:8219   */\n    tag_131:\n        /* \"#utility.yul\":7966:7970   */\n      0x00\n        /* \"#utility.yul\":8004:8006   */\n      0x20\n        /* \"#utility.yul\":7993:8002   */\n      dup3\n        /* \"#utility.yul\":7989:8007   */\n      add\n        /* \"#utility.yul\":7981:8007   */\n      swap1\n      pop\n        /* \"#utility.yul\":8053:8062   */\n      dup2\n        /* \"#utility.yul\":8047:8051   */\n      dup2\n        /* \"#utility.yul\":8043:8063   */\n      sub\n        /* \"#utility.yul\":8039:8040   */\n      0x00\n        /* \"#utility.yul\":8028:8037   */\n      dup4\n        /* \"#utility.yul\":8024:8041   */\n      add\n        /* \"#utility.yul\":8017:8064   */\n      mstore\n        /* \"#utility.yul\":8081:8212   */\n      tag_268\n        /* \"#utility.yul\":8207:8211   */\n      dup2\n        /* \"#utility.yul\":8081:8212   */\n      tag_178\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8073:8212   */\n      swap1\n      pop\n        /* \"#utility.yul\":7800:8219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8449   */\n    tag_179:\n        /* \"#utility.yul\":8365:8399   */\n      0x5072697a65207363616c65206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":8361:8362   */\n      0x00\n        /* \"#utility.yul\":8353:8359   */\n      dup3\n        /* \"#utility.yul\":8349:8363   */\n      add\n        /* \"#utility.yul\":8342:8400   */\n      mstore\n        /* \"#utility.yul\":8434:8441   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8421:8427   */\n      dup3\n        /* \"#utility.yul\":8417:8432   */\n      add\n        /* \"#utility.yul\":8410:8442   */\n      mstore\n        /* \"#utility.yul\":8225:8449   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8455:8821   */\n    tag_180:\n        /* \"#utility.yul\":8597:8600   */\n      0x00\n        /* \"#utility.yul\":8618:8685   */\n      tag_271\n        /* \"#utility.yul\":8682:8684   */\n      0x25\n        /* \"#utility.yul\":8677:8680   */\n      dup4\n        /* \"#utility.yul\":8618:8685   */\n      tag_170\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8611:8685   */\n      swap2\n      pop\n        /* \"#utility.yul\":8694:8787   */\n      tag_272\n        /* \"#utility.yul\":8783:8786   */\n      dup3\n        /* \"#utility.yul\":8694:8787   */\n      tag_179\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8812:8814   */\n      0x40\n        /* \"#utility.yul\":8807:8810   */\n      dup3\n        /* \"#utility.yul\":8803:8815   */\n      add\n        /* \"#utility.yul\":8796:8815   */\n      swap1\n      pop\n        /* \"#utility.yul\":8455:8821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8827:9246   */\n    tag_134:\n        /* \"#utility.yul\":8993:8997   */\n      0x00\n        /* \"#utility.yul\":9031:9033   */\n      0x20\n        /* \"#utility.yul\":9020:9029   */\n      dup3\n        /* \"#utility.yul\":9016:9034   */\n      add\n        /* \"#utility.yul\":9008:9034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9080:9089   */\n      dup2\n        /* \"#utility.yul\":9074:9078   */\n      dup2\n        /* \"#utility.yul\":9070:9090   */\n      sub\n        /* \"#utility.yul\":9066:9067   */\n      0x00\n        /* \"#utility.yul\":9055:9064   */\n      dup4\n        /* \"#utility.yul\":9051:9068   */\n      add\n        /* \"#utility.yul\":9044:9091   */\n      mstore\n        /* \"#utility.yul\":9108:9239   */\n      tag_274\n        /* \"#utility.yul\":9234:9238   */\n      dup2\n        /* \"#utility.yul\":9108:9239   */\n      tag_180\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9100:9239   */\n      swap1\n      pop\n        /* \"#utility.yul\":8827:9246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9252:9337   */\n    tag_181:\n        /* \"#utility.yul\":9297:9304   */\n      0x00\n        /* \"#utility.yul\":9326:9331   */\n      dup2\n        /* \"#utility.yul\":9315:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9252:9337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9343:9403   */\n    tag_182:\n        /* \"#utility.yul\":9371:9374   */\n      0x00\n        /* \"#utility.yul\":9392:9397   */\n      dup2\n        /* \"#utility.yul\":9385:9397   */\n      swap1\n      pop\n        /* \"#utility.yul\":9343:9403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9409:9567   */\n    tag_183:\n        /* \"#utility.yul\":9467:9476   */\n      0x00\n        /* \"#utility.yul\":9500:9561   */\n      tag_278\n        /* \"#utility.yul\":9518:9560   */\n      tag_279\n        /* \"#utility.yul\":9527:9559   */\n      tag_280\n        /* \"#utility.yul\":9553:9558   */\n      dup5\n        /* \"#utility.yul\":9527:9559   */\n      tag_181\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9518:9560   */\n      tag_182\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9500:9561   */\n      tag_156\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9487:9561   */\n      swap1\n      pop\n        /* \"#utility.yul\":9409:9567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9573:9720   */\n    tag_184:\n        /* \"#utility.yul\":9668:9713   */\n      tag_282\n        /* \"#utility.yul\":9707:9712   */\n      dup2\n        /* \"#utility.yul\":9668:9713   */\n      tag_183\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9663:9666   */\n      dup3\n        /* \"#utility.yul\":9656:9714   */\n      mstore\n        /* \"#utility.yul\":9573:9720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9726:10343   */\n    tag_146:\n        /* \"#utility.yul\":9935:9939   */\n      0x00\n        /* \"#utility.yul\":9973:9976   */\n      0x80\n        /* \"#utility.yul\":9962:9971   */\n      dup3\n        /* \"#utility.yul\":9958:9977   */\n      add\n        /* \"#utility.yul\":9950:9977   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10066   */\n      tag_284\n        /* \"#utility.yul\":10063:10064   */\n      0x00\n        /* \"#utility.yul\":10052:10061   */\n      dup4\n        /* \"#utility.yul\":10048:10065   */\n      add\n        /* \"#utility.yul\":10039:10045   */\n      dup8\n        /* \"#utility.yul\":9987:10066   */\n      tag_184\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10076:10156   */\n      tag_285\n        /* \"#utility.yul\":10152:10154   */\n      0x20\n        /* \"#utility.yul\":10141:10150   */\n      dup4\n        /* \"#utility.yul\":10137:10155   */\n      add\n        /* \"#utility.yul\":10128:10134   */\n      dup7\n        /* \"#utility.yul\":10076:10156   */\n      tag_184\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10166:10246   */\n      tag_286\n        /* \"#utility.yul\":10242:10244   */\n      0x40\n        /* \"#utility.yul\":10231:10240   */\n      dup4\n        /* \"#utility.yul\":10227:10245   */\n      add\n        /* \"#utility.yul\":10218:10224   */\n      dup6\n        /* \"#utility.yul\":10166:10246   */\n      tag_184\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10256:10336   */\n      tag_287\n        /* \"#utility.yul\":10332:10334   */\n      0x60\n        /* \"#utility.yul\":10321:10330   */\n      dup4\n        /* \"#utility.yul\":10317:10335   */\n      add\n        /* \"#utility.yul\":10308:10314   */\n      dup5\n        /* \"#utility.yul\":10256:10336   */\n      tag_184\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9726:10343   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d793c084ec61ac9868c0f6886a702c1adaa8b7b5bb937a0ec4e341af6797d8f364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_246": {
									"entryPoint": null,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 240,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:3",
										"nodeType": "YulBlock",
										"src": "0:1551:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											},
											{
												"body": {
													"nativeSrc": "1267:53:3",
													"nodeType": "YulBlock",
													"src": "1267:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:3"
																		},
																		"nativeSrc": "1289:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:3"
																},
																"nativeSrc": "1277:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:3"
															},
															"nativeSrc": "1277:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:3",
														"nodeType": "YulTypedName",
														"src": "1255:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:3",
														"nodeType": "YulTypedName",
														"src": "1262:3:3",
														"type": ""
													}
												],
												"src": "1202:118:3"
											},
											{
												"body": {
													"nativeSrc": "1424:124:3",
													"nodeType": "YulBlock",
													"src": "1424:124:3",
													"statements": [
														{
															"nativeSrc": "1434:26:3",
															"nodeType": "YulAssignment",
															"src": "1434:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:3"
																},
																"nativeSrc": "1442:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:3"
																		},
																		"nativeSrc": "1523:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:3"
																},
																"nativeSrc": "1470:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:3"
															},
															"nativeSrc": "1470:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:3",
														"nodeType": "YulTypedName",
														"src": "1396:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:3",
														"nodeType": "YulTypedName",
														"src": "1408:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:3",
														"nodeType": "YulTypedName",
														"src": "1419:4:3",
														"type": ""
													}
												],
												"src": "1326:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a6007555f60095f6101000a81548160ff0219169083151502179055505f600960016101000a81548160ff021916908315150217905550348015610047575f5ffd5b506040516111623803806111628339818101604052810190610069919061020f565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100da575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d19190610249565b60405180910390fd5b6100e9816100f060201b60201c565b5050610262565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101de826101b5565b9050919050565b6101ee816101d4565b81146101f8575f5ffd5b50565b5f81519050610209816101e5565b92915050565b5f60208284031215610224576102236101b1565b5b5f610231848285016101fb565b91505092915050565b610243816101d4565b82525050565b5f60208201905061025c5f83018461023a565b92915050565b610ef38061026f5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063ab4d819f11610095578063f1a002b111610064578063f1a002b114610254578063f2e27b6514610272578063f2fde38b1461028e578063fb5274e5146102aa576100fe565b8063ab4d819f146101dc578063acdcf5f2146101fa578063cb3ebec214610218578063ed22723a14610236576100fe565b8063715018a6116100d1578063715018a61461017a5780637b820b83146101845780638da5cb5b146101a25780639ad97fa0146101c0576100fe565b806311a1c8bd146101025780631934c786146101205780631f63000f1461013e578063638ad71d1461015c575b5f5ffd5b61010a6102b4565b6040516101179190610982565b60405180910390f35b6101286102ba565b6040516101359190610982565b60405180910390f35b6101466102c0565b60405161015391906109b5565b60405180910390f35b6101646102d3565b6040516101719190610982565b60405180910390f35b6101826102d9565b005b61018c6102ec565b6040516101999190610982565b60405180910390f35b6101aa6102f2565b6040516101b79190610a0d565b60405180910390f35b6101da60048036038101906101d59190610a54565b610319565b005b6101e4610512565b6040516101f19190610982565b60405180910390f35b610202610518565b60405161020f91906109b5565b60405180910390f35b6102206105aa565b60405161022d9190610982565b60405180910390f35b61023e6105b0565b60405161024b9190610982565b60405180910390f35b61025c6105b6565b60405161026991906109b5565b60405180910390f35b61028c60048036038101906102879190610a54565b6105c8565b005b6102a860048036038101906102a39190610aa9565b610750565b005b6102b26107d4565b005b60015481565b60065481565b600960019054906101000a900460ff1681565b60045481565b6102e161081b565b6102ea5f6108a2565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61032161081b565b5f8111610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a90610b2e565b60405180910390fd5b5f60646032836103739190610b79565b61037d9190610be7565b90505f606460058461038f9190610b79565b6103999190610be7565b90506064600a836103aa9190610b79565b6103b49190610be7565b60015f8282546103c49190610c17565b925050819055506064600a836103da9190610b79565b6103e49190610be7565b60025f8282546103f49190610c17565b925050819055506064600a8361040a9190610b79565b6104149190610be7565b60035f8282546104249190610c17565b925050819055506064600a8361043a9190610b79565b6104449190610be7565b60045f8282546104549190610c17565b925050819055508060055f82825461046c9190610c17565b925050819055508060065f8282546104849190610c17565b925050819055507fc1879f0406577975a5876a8db2ec1549e2a3194f0f01e15bde4292d6e4b368246001546002546003546004546040516104c89493929190610c4a565b60405180910390a17fbbb79063c8e8bcd7691a017e4e76c5de1369686b9f0674f946b0129041525b59600554600654604051610505929190610c8d565b60405180910390a1505050565b60035481565b5f5f60016007546105299190610b79565b600a6007546105389190610b79565b60646007546105479190610b79565b6103e86007546105579190610b79565b6105619190610c17565b61056b9190610c17565b6105759190610c17565b90508060015410158061058a57508060025410155b8061059757508060035410155b806105a457508060045410155b91505090565b60055481565b60075481565b60095f9054906101000a900460ff1681565b6105d06102f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061063457503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90610cfe565b60405180910390fd5b62093a806008546106849190610c17565b4210156106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd90610d8c565b60405180910390fd5b5f8111610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90610e1a565b60405180910390fd5b80600781905550426008819055507fbe74989b82c125ec369bdc21c95661e14a1d97c700ebdef03b84c0da6fc93c5a816040516107459190610982565b60405180910390a150565b61075861081b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107bf9190610a0d565b60405180910390fd5b6107d1816108a2565b50565b6107dc61081b565b7ffe24c1a52828fa9764a2d2ebf1c0066647f541fa9636c315facf936ed0b3a7795f5f5f5f6040516108119493929190610e7a565b60405180910390a1565b610823610963565b73ffffffffffffffffffffffffffffffffffffffff166108416102f2565b73ffffffffffffffffffffffffffffffffffffffff16146108a057610864610963565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108979190610a0d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61097c8161096a565b82525050565b5f6020820190506109955f830184610973565b92915050565b5f8115159050919050565b6109af8161099b565b82525050565b5f6020820190506109c85f8301846109a6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109f7826109ce565b9050919050565b610a07816109ed565b82525050565b5f602082019050610a205f8301846109fe565b92915050565b5f5ffd5b610a338161096a565b8114610a3d575f5ffd5b50565b5f81359050610a4e81610a2a565b92915050565b5f60208284031215610a6957610a68610a26565b5b5f610a7684828501610a40565b91505092915050565b610a88816109ed565b8114610a92575f5ffd5b50565b5f81359050610aa381610a7f565b92915050565b5f60208284031215610abe57610abd610a26565b5b5f610acb84828501610a95565b91505092915050565b5f82825260208201905092915050565b7f4e6f2070726f6669747320746f206469737472696275746500000000000000005f82015250565b5f610b18601883610ad4565b9150610b2382610ae4565b602082019050919050565b5f6020820190508181035f830152610b4581610b0c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b838261096a565b9150610b8e8361096a565b9250828202610b9c8161096a565b91508282048414831517610bb357610bb2610b4c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bf18261096a565b9150610bfc8361096a565b925082610c0c57610c0b610bba565b5b828204905092915050565b5f610c218261096a565b9150610c2c8361096a565b9250828201905080821115610c4457610c43610b4c565b5b92915050565b5f608082019050610c5d5f830187610973565b610c6a6020830186610973565b610c776040830185610973565b610c846060830184610973565b95945050505050565b5f604082019050610ca05f830185610973565b610cad6020830184610973565b9392505050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f610ce8600e83610ad4565b9150610cf382610cb4565b602082019050919050565b5f6020820190508181035f830152610d1581610cdc565b9050919050565b7f5072697a65207363616c652063616e206f6e6c792062652075706461746564205f8201527f6f6e636520706572207765656b00000000000000000000000000000000000000602082015250565b5f610d76602d83610ad4565b9150610d8182610d1c565b604082019050919050565b5f6020820190508181035f830152610da381610d6a565b9050919050565b7f5072697a65207363616c65206d7573742062652067726561746572207468616e5f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e04602583610ad4565b9150610e0f82610daa565b604082019050919050565b5f6020820190508181035f830152610e3181610df8565b9050919050565b5f819050919050565b5f819050919050565b5f610e64610e5f610e5a84610e38565b610e41565b61096a565b9050919050565b610e7481610e4a565b82525050565b5f608082019050610e8d5f830187610e6b565b610e9a6020830186610e6b565b610ea76040830185610e6b565b610eb46060830184610e6b565b9594505050505056fea2646970667358221220d793c084ec61ac9868c0f6886a702c1adaa8b7b5bb937a0ec4e341af6797d8f364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1162 CODESIZE SUB DUP1 PUSH2 0x1162 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9 DUP2 PUSH2 0xF0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x262 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE DUP3 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x209 DUP2 PUSH2 0x1E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224 JUMPI PUSH2 0x223 PUSH2 0x1B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231 DUP5 DUP3 DUP6 ADD PUSH2 0x1FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x243 DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25C PUSH0 DUP4 ADD DUP5 PUSH2 0x23A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF3 DUP1 PUSH2 0x26F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB4D819F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF1A002B1 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF1A002B1 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xF2E27B65 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFB5274E5 EQ PUSH2 0x2AA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xAB4D819F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xACDCF5F2 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCB3EBEC2 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xED22723A EQ PUSH2 0x236 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x7B820B83 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x9AD97FA0 EQ PUSH2 0x1C0 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x11A1C8BD EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1934C786 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1F63000F EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x638AD71D EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x7D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x2EA PUSH0 PUSH2 0x8A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x81B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x32 DUP4 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xC1879F0406577975A5876A8DB2EC1549E2A3194F0F01E15BDE4292D6E4B36824 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xBBB79063C8E8BCD7691A017E4E76C5DE1369686B9F0674F946B0129041525B59 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x505 SWAP3 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0xA PUSH1 0x7 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x7 SLOAD PUSH2 0x557 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x561 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x575 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT ISZERO DUP1 PUSH2 0x58A JUMPI POP DUP1 PUSH1 0x2 SLOAD LT ISZERO JUMPDEST DUP1 PUSH2 0x597 JUMPI POP DUP1 PUSH1 0x3 SLOAD LT ISZERO JUMPDEST DUP1 PUSH2 0x5A4 JUMPI POP DUP1 PUSH1 0x4 SLOAD LT ISZERO JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x634 JUMPI POP ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x8 SLOAD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBE74989B82C125EC369BDC21C95661E14A1D97C700EBDEF03B84C0DA6FC93C5A DUP2 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x758 PUSH2 0x81B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D1 DUP2 PUSH2 0x8A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x81B JUMP JUMPDEST PUSH32 0xFE24C1A52828FA9764A2D2EBF1C0066647F541FA9636C315FACF936ED0B3A779 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x811 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x823 PUSH2 0x963 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A0 JUMPI PUSH2 0x864 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x96A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x995 PUSH0 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AF DUP2 PUSH2 0x99B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x9A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F7 DUP3 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA20 PUSH0 DUP4 ADD DUP5 PUSH2 0x9FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0x96A JUMP JUMPDEST DUP2 EQ PUSH2 0xA3D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4E DUP2 PUSH2 0xA2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP3 DUP6 ADD PUSH2 0xA40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP2 EQ PUSH2 0xA92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA3 DUP2 PUSH2 0xA7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xACB DUP5 DUP3 DUP6 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2070726F6669747320746F20646973747269627574650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB18 PUSH1 0x18 DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP3 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB45 DUP2 PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB83 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB9C DUP2 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0xB4C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF1 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0xBBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC21 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC44 JUMPI PUSH2 0xC43 PUSH2 0xB4C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC5D PUSH0 DUP4 ADD DUP8 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC6A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC84 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCA0 PUSH0 DUP4 ADD DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE8 PUSH1 0xE DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF3 DUP3 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD15 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A65207363616C652063616E206F6E6C79206265207570646174656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E636520706572207765656B00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD76 PUSH1 0x2D DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD81 DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA3 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A65207363616C65206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE04 PUSH1 0x25 DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0F DUP3 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE31 DUP2 PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE64 PUSH2 0xE5F PUSH2 0xE5A DUP5 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE74 DUP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xE8D PUSH0 DUP4 ADD DUP8 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xE9A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xEA7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xEB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP4 0xC0 DUP5 0xEC PUSH2 0xAC98 PUSH9 0xC0F6886A702C1ADAA8 0xB7 0xB5 0xBB SWAP4 PUSH27 0xEC4E341AF6797D8F364736F6C634300081C003300000000000000 ",
							"sourceMap": "246:3778:2:-:0;;;592:2;564:30;;723:5;684:44;;;;;;;;;;;;;;;;;;;;778:5;735:48;;;;;;;;;;;;;;;;;;;;1339:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1339:58:2;246:3778;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;246:3778:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2075,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2403,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2210,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkPrizePoolDistribution_430": {
									"entryPoint": 1304,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@developerDividend_195": {
									"entryPoint": 698,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeDeveloperDividends_206": {
									"entryPoint": 704,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeOwnerDividends_203": {
									"entryPoint": 1462,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@generateWinners_444": {
									"entryPoint": 2004,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@highPrize_187": {
									"entryPoint": 748,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lowPrize_191": {
									"entryPoint": 723,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@middlePrize_189": {
									"entryPoint": 1298,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerDividend_193": {
									"entryPoint": 1450,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 754,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@prizeScale_198": {
									"entryPoint": 1456,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 729,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@superPrize_185": {
									"entryPoint": 692,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1872,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePrizePools_336": {
									"entryPoint": 793,
									"id": 336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePrizeScale_388": {
									"entryPoint": 1480,
									"id": 388,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10346:3",
										"nodeType": "YulBlock",
										"src": "0:10346:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "484:48:3",
													"nodeType": "YulBlock",
													"src": "484:48:3",
													"statements": [
														{
															"nativeSrc": "494:32:3",
															"nodeType": "YulAssignment",
															"src": "494:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "519:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "512:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:3"
																		},
																		"nativeSrc": "512:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "505:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:3"
																},
																"nativeSrc": "505:21:3",
																"nodeType": "YulFunctionCall",
																"src": "505:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "494:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "442:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "466:5:3",
														"nodeType": "YulTypedName",
														"src": "466:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "476:7:3",
														"nodeType": "YulTypedName",
														"src": "476:7:3",
														"type": ""
													}
												],
												"src": "442:90:3"
											},
											{
												"body": {
													"nativeSrc": "597:50:3",
													"nodeType": "YulBlock",
													"src": "597:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "614:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "619:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:3"
																		},
																		"nativeSrc": "619:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "607:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:3"
																},
																"nativeSrc": "607:34:3",
																"nodeType": "YulFunctionCall",
																"src": "607:34:3"
															},
															"nativeSrc": "607:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "607:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "538:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "585:5:3",
														"nodeType": "YulTypedName",
														"src": "585:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "592:3:3",
														"nodeType": "YulTypedName",
														"src": "592:3:3",
														"type": ""
													}
												],
												"src": "538:109:3"
											},
											{
												"body": {
													"nativeSrc": "745:118:3",
													"nodeType": "YulBlock",
													"src": "745:118:3",
													"statements": [
														{
															"nativeSrc": "755:26:3",
															"nodeType": "YulAssignment",
															"src": "755:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "767:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:3",
																		"nodeType": "YulLiteral",
																		"src": "778:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "763:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:3"
																},
																"nativeSrc": "763:18:3",
																"nodeType": "YulFunctionCall",
																"src": "763:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "755:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:3",
																				"nodeType": "YulLiteral",
																				"src": "853:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:3"
																		},
																		"nativeSrc": "838:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "791:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:3"
																},
																"nativeSrc": "791:65:3",
																"nodeType": "YulFunctionCall",
																"src": "791:65:3"
															},
															"nativeSrc": "791:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "653:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "717:9:3",
														"nodeType": "YulTypedName",
														"src": "717:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "729:6:3",
														"nodeType": "YulTypedName",
														"src": "729:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "740:4:3",
														"nodeType": "YulTypedName",
														"src": "740:4:3",
														"type": ""
													}
												],
												"src": "653:210:3"
											},
											{
												"body": {
													"nativeSrc": "914:81:3",
													"nodeType": "YulBlock",
													"src": "914:81:3",
													"statements": [
														{
															"nativeSrc": "924:65:3",
															"nodeType": "YulAssignment",
															"src": "924:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "939:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "946:42:3",
																		"nodeType": "YulLiteral",
																		"src": "946:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:54:3",
																"nodeType": "YulFunctionCall",
																"src": "935:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "924:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "924:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "869:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "896:5:3",
														"nodeType": "YulTypedName",
														"src": "896:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "906:7:3",
														"nodeType": "YulTypedName",
														"src": "906:7:3",
														"type": ""
													}
												],
												"src": "869:126:3"
											},
											{
												"body": {
													"nativeSrc": "1046:51:3",
													"nodeType": "YulBlock",
													"src": "1046:51:3",
													"statements": [
														{
															"nativeSrc": "1056:35:3",
															"nodeType": "YulAssignment",
															"src": "1056:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1085:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1085:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1067:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1067:17:3"
																},
																"nativeSrc": "1067:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1067:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1056:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1056:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1001:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1028:5:3",
														"nodeType": "YulTypedName",
														"src": "1028:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1038:7:3",
														"nodeType": "YulTypedName",
														"src": "1038:7:3",
														"type": ""
													}
												],
												"src": "1001:96:3"
											},
											{
												"body": {
													"nativeSrc": "1168:53:3",
													"nodeType": "YulBlock",
													"src": "1168:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1185:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1185:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1208:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1208:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1190:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1190:17:3"
																		},
																		"nativeSrc": "1190:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1190:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1178:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:3"
																},
																"nativeSrc": "1178:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1178:37:3"
															},
															"nativeSrc": "1178:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1178:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1103:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1156:5:3",
														"nodeType": "YulTypedName",
														"src": "1156:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1163:3:3",
														"nodeType": "YulTypedName",
														"src": "1163:3:3",
														"type": ""
													}
												],
												"src": "1103:118:3"
											},
											{
												"body": {
													"nativeSrc": "1325:124:3",
													"nodeType": "YulBlock",
													"src": "1325:124:3",
													"statements": [
														{
															"nativeSrc": "1335:26:3",
															"nodeType": "YulAssignment",
															"src": "1335:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1347:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1347:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1343:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:3"
																},
																"nativeSrc": "1343:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1343:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1335:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1335:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1424:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:3"
																		},
																		"nativeSrc": "1424:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1371:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1371:43:3"
																},
																"nativeSrc": "1371:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1371:71:3"
															},
															"nativeSrc": "1371:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1371:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1227:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1297:9:3",
														"nodeType": "YulTypedName",
														"src": "1297:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1309:6:3",
														"nodeType": "YulTypedName",
														"src": "1309:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1320:4:3",
														"nodeType": "YulTypedName",
														"src": "1320:4:3",
														"type": ""
													}
												],
												"src": "1227:222:3"
											},
											{
												"body": {
													"nativeSrc": "1495:35:3",
													"nodeType": "YulBlock",
													"src": "1495:35:3",
													"statements": [
														{
															"nativeSrc": "1505:19:3",
															"nodeType": "YulAssignment",
															"src": "1505:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1521:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1515:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:3"
																},
																"nativeSrc": "1515:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1515:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1505:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1455:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1488:6:3",
														"nodeType": "YulTypedName",
														"src": "1488:6:3",
														"type": ""
													}
												],
												"src": "1455:75:3"
											},
											{
												"body": {
													"nativeSrc": "1625:28:3",
													"nodeType": "YulBlock",
													"src": "1625:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1642:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1635:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:3"
																},
																"nativeSrc": "1635:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1635:12:3"
															},
															"nativeSrc": "1635:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1635:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1536:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1536:117:3"
											},
											{
												"body": {
													"nativeSrc": "1748:28:3",
													"nodeType": "YulBlock",
													"src": "1748:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1768:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1758:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:3"
																},
																"nativeSrc": "1758:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1758:12:3"
															},
															"nativeSrc": "1758:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1659:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:3"
											},
											{
												"body": {
													"nativeSrc": "1825:79:3",
													"nodeType": "YulBlock",
													"src": "1825:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1882:16:3",
																"nodeType": "YulBlock",
																"src": "1882:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1891:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1894:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1884:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:3"
																			},
																			"nativeSrc": "1884:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:3"
																		},
																		"nativeSrc": "1884:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1848:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1873:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1873:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1855:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1855:17:3"
																				},
																				"nativeSrc": "1855:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1855:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1845:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1845:2:3"
																		},
																		"nativeSrc": "1845:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1845:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1838:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:3"
																},
																"nativeSrc": "1838:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1838:43:3"
															},
															"nativeSrc": "1835:63:3",
															"nodeType": "YulIf",
															"src": "1835:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1782:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1818:5:3",
														"nodeType": "YulTypedName",
														"src": "1818:5:3",
														"type": ""
													}
												],
												"src": "1782:122:3"
											},
											{
												"body": {
													"nativeSrc": "1962:87:3",
													"nodeType": "YulBlock",
													"src": "1962:87:3",
													"statements": [
														{
															"nativeSrc": "1972:29:3",
															"nodeType": "YulAssignment",
															"src": "1972:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1994:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1981:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:3"
																},
																"nativeSrc": "1981:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1981:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1972:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2037:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2010:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2010:26:3"
																},
																"nativeSrc": "2010:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2010:33:3"
															},
															"nativeSrc": "2010:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2010:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1910:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1940:6:3",
														"nodeType": "YulTypedName",
														"src": "1940:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1948:3:3",
														"nodeType": "YulTypedName",
														"src": "1948:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1956:5:3",
														"nodeType": "YulTypedName",
														"src": "1956:5:3",
														"type": ""
													}
												],
												"src": "1910:139:3"
											},
											{
												"body": {
													"nativeSrc": "2121:263:3",
													"nodeType": "YulBlock",
													"src": "2121:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2167:83:3",
																"nodeType": "YulBlock",
																"src": "2167:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2169:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2169:77:3"
																			},
																			"nativeSrc": "2169:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2169:79:3"
																		},
																		"nativeSrc": "2169:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2142:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2142:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2151:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2138:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:3"
																		},
																		"nativeSrc": "2138:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2134:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:3"
																},
																"nativeSrc": "2134:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2134:32:3"
															},
															"nativeSrc": "2131:119:3",
															"nodeType": "YulIf",
															"src": "2131:119:3"
														},
														{
															"nativeSrc": "2260:117:3",
															"nodeType": "YulBlock",
															"src": "2260:117:3",
															"statements": [
																{
																	"nativeSrc": "2275:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2275:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2289:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2289:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2279:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2279:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2304:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2304:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2339:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2339:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2350:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2350:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2335:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:3"
																				},
																				"nativeSrc": "2335:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2359:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2359:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2314:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2314:20:3"
																		},
																		"nativeSrc": "2314:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2304:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2304:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2055:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2091:9:3",
														"nodeType": "YulTypedName",
														"src": "2091:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2102:7:3",
														"nodeType": "YulTypedName",
														"src": "2102:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2114:6:3",
														"nodeType": "YulTypedName",
														"src": "2114:6:3",
														"type": ""
													}
												],
												"src": "2055:329:3"
											},
											{
												"body": {
													"nativeSrc": "2433:79:3",
													"nodeType": "YulBlock",
													"src": "2433:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2490:16:3",
																"nodeType": "YulBlock",
																"src": "2490:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2492:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:3"
																			},
																			"nativeSrc": "2492:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:3"
																		},
																		"nativeSrc": "2492:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2456:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2481:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2463:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:3"
																				},
																				"nativeSrc": "2463:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2453:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:3"
																		},
																		"nativeSrc": "2453:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2446:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:3"
																},
																"nativeSrc": "2446:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2446:43:3"
															},
															"nativeSrc": "2443:63:3",
															"nodeType": "YulIf",
															"src": "2443:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2390:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2426:5:3",
														"nodeType": "YulTypedName",
														"src": "2426:5:3",
														"type": ""
													}
												],
												"src": "2390:122:3"
											},
											{
												"body": {
													"nativeSrc": "2570:87:3",
													"nodeType": "YulBlock",
													"src": "2570:87:3",
													"statements": [
														{
															"nativeSrc": "2580:29:3",
															"nodeType": "YulAssignment",
															"src": "2580:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2602:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2589:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:3"
																},
																"nativeSrc": "2589:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2589:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2580:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2645:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2618:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:3"
																},
																"nativeSrc": "2618:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2618:33:3"
															},
															"nativeSrc": "2618:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2518:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2548:6:3",
														"nodeType": "YulTypedName",
														"src": "2548:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2556:3:3",
														"nodeType": "YulTypedName",
														"src": "2556:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2564:5:3",
														"nodeType": "YulTypedName",
														"src": "2564:5:3",
														"type": ""
													}
												],
												"src": "2518:139:3"
											},
											{
												"body": {
													"nativeSrc": "2729:263:3",
													"nodeType": "YulBlock",
													"src": "2729:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:3",
																"nodeType": "YulBlock",
																"src": "2775:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:3"
																			},
																			"nativeSrc": "2777:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:3"
																		},
																		"nativeSrc": "2777:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:3"
																		},
																		"nativeSrc": "2746:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:3"
																},
																"nativeSrc": "2742:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:3"
															},
															"nativeSrc": "2739:119:3",
															"nodeType": "YulIf",
															"src": "2739:119:3"
														},
														{
															"nativeSrc": "2868:117:3",
															"nodeType": "YulBlock",
															"src": "2868:117:3",
															"statements": [
																{
																	"nativeSrc": "2883:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:3"
																				},
																				"nativeSrc": "2943:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2922:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:3"
																		},
																		"nativeSrc": "2922:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2663:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2699:9:3",
														"nodeType": "YulTypedName",
														"src": "2699:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2710:7:3",
														"nodeType": "YulTypedName",
														"src": "2710:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:3",
														"nodeType": "YulTypedName",
														"src": "2722:6:3",
														"type": ""
													}
												],
												"src": "2663:329:3"
											},
											{
												"body": {
													"nativeSrc": "3094:73:3",
													"nodeType": "YulBlock",
													"src": "3094:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3111:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3116:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3104:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:3"
																},
																"nativeSrc": "3104:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3104:19:3"
															},
															"nativeSrc": "3104:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:3"
														},
														{
															"nativeSrc": "3132:29:3",
															"nodeType": "YulAssignment",
															"src": "3132:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3151:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3156:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3147:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:3"
																},
																"nativeSrc": "3147:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3147:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3132:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3132:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2998:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3066:3:3",
														"nodeType": "YulTypedName",
														"src": "3066:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3071:6:3",
														"nodeType": "YulTypedName",
														"src": "3071:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3082:11:3",
														"nodeType": "YulTypedName",
														"src": "3082:11:3",
														"type": ""
													}
												],
												"src": "2998:169:3"
											},
											{
												"body": {
													"nativeSrc": "3279:68:3",
													"nodeType": "YulBlock",
													"src": "3279:68:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3301:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3309:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3309:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3297:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:3"
																		},
																		"nativeSrc": "3297:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:14:3"
																	},
																	{
																		"hexValue": "4e6f2070726f6669747320746f2064697374726962757465",
																		"kind": "string",
																		"nativeSrc": "3313:26:3",
																		"nodeType": "YulLiteral",
																		"src": "3313:26:3",
																		"type": "",
																		"value": "No profits to distribute"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:3"
																},
																"nativeSrc": "3290:50:3",
																"nodeType": "YulFunctionCall",
																"src": "3290:50:3"
															},
															"nativeSrc": "3290:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "3290:50:3"
														}
													]
												},
												"name": "store_literal_in_memory_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c",
												"nativeSrc": "3173:174:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3271:6:3",
														"nodeType": "YulTypedName",
														"src": "3271:6:3",
														"type": ""
													}
												],
												"src": "3173:174:3"
											},
											{
												"body": {
													"nativeSrc": "3499:220:3",
													"nodeType": "YulBlock",
													"src": "3499:220:3",
													"statements": [
														{
															"nativeSrc": "3509:74:3",
															"nodeType": "YulAssignment",
															"src": "3509:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3575:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3575:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3516:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3516:58:3"
																},
																"nativeSrc": "3516:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3516:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3509:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3681:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3681:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c",
																	"nativeSrc": "3592:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3592:88:3"
																},
																"nativeSrc": "3592:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3592:93:3"
															},
															"nativeSrc": "3592:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3592:93:3"
														},
														{
															"nativeSrc": "3694:19:3",
															"nodeType": "YulAssignment",
															"src": "3694:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3705:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3705:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3701:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:3"
																},
																"nativeSrc": "3701:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3701:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3694:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3353:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3487:3:3",
														"nodeType": "YulTypedName",
														"src": "3487:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3495:3:3",
														"nodeType": "YulTypedName",
														"src": "3495:3:3",
														"type": ""
													}
												],
												"src": "3353:366:3"
											},
											{
												"body": {
													"nativeSrc": "3896:248:3",
													"nodeType": "YulBlock",
													"src": "3896:248:3",
													"statements": [
														{
															"nativeSrc": "3906:26:3",
															"nodeType": "YulAssignment",
															"src": "3906:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:3"
																},
																"nativeSrc": "3914:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3953:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3964:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3964:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3949:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:3"
																		},
																		"nativeSrc": "3949:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3949:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3972:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3972:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3978:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3968:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:3"
																		},
																		"nativeSrc": "3968:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3968:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3942:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:3"
																},
																"nativeSrc": "3942:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3942:47:3"
															},
															"nativeSrc": "3942:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3942:47:3"
														},
														{
															"nativeSrc": "3998:139:3",
															"nodeType": "YulAssignment",
															"src": "3998:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4132:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4132:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4006:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4006:124:3"
																},
																"nativeSrc": "4006:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4006:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3998:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3998:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3725:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3876:9:3",
														"nodeType": "YulTypedName",
														"src": "3876:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:3",
														"nodeType": "YulTypedName",
														"src": "3891:4:3",
														"type": ""
													}
												],
												"src": "3725:419:3"
											},
											{
												"body": {
													"nativeSrc": "4178:152:3",
													"nodeType": "YulBlock",
													"src": "4178:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4195:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4195:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4198:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4188:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4188:6:3"
																},
																"nativeSrc": "4188:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4188:88:3"
															},
															"nativeSrc": "4188:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4188:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4292:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4292:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4295:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4295:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4285:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:3"
																},
																"nativeSrc": "4285:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4285:15:3"
															},
															"nativeSrc": "4285:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4285:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4316:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4316:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4319:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4319:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4309:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:3"
																},
																"nativeSrc": "4309:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4309:15:3"
															},
															"nativeSrc": "4309:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4309:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4150:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4150:180:3"
											},
											{
												"body": {
													"nativeSrc": "4384:362:3",
													"nodeType": "YulBlock",
													"src": "4384:362:3",
													"statements": [
														{
															"nativeSrc": "4394:25:3",
															"nodeType": "YulAssignment",
															"src": "4394:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4417:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4417:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4399:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4399:17:3"
																},
																"nativeSrc": "4399:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4399:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4394:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4394:1:3"
																}
															]
														},
														{
															"nativeSrc": "4428:25:3",
															"nodeType": "YulAssignment",
															"src": "4428:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4451:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4451:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4433:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4433:17:3"
																},
																"nativeSrc": "4433:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4433:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4428:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4428:1:3"
																}
															]
														},
														{
															"nativeSrc": "4462:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4462:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4485:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4485:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4488:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4488:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:3"
																},
																"nativeSrc": "4481:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4481:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4466:11:3",
																	"nodeType": "YulTypedName",
																	"src": "4466:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4499:41:3",
															"nodeType": "YulAssignment",
															"src": "4499:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4528:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "4528:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4510:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4510:17:3"
																},
																"nativeSrc": "4510:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4510:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4499:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4499:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4717:22:3",
																"nodeType": "YulBlock",
																"src": "4717:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4719:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4719:16:3"
																			},
																			"nativeSrc": "4719:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4719:18:3"
																		},
																		"nativeSrc": "4719:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4719:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4650:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4650:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4643:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4643:6:3"
																				},
																				"nativeSrc": "4643:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4643:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4673:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4673:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4680:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "4680:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4689:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "4689:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4676:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4676:3:3"
																						},
																						"nativeSrc": "4676:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4676:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4670:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4670:2:3"
																				},
																				"nativeSrc": "4670:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4670:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4623:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4623:2:3"
																		},
																		"nativeSrc": "4623:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4623:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4603:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:3"
																},
																"nativeSrc": "4603:113:3",
																"nodeType": "YulFunctionCall",
																"src": "4603:113:3"
															},
															"nativeSrc": "4600:139:3",
															"nodeType": "YulIf",
															"src": "4600:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4336:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4367:1:3",
														"nodeType": "YulTypedName",
														"src": "4367:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4370:1:3",
														"nodeType": "YulTypedName",
														"src": "4370:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4376:7:3",
														"nodeType": "YulTypedName",
														"src": "4376:7:3",
														"type": ""
													}
												],
												"src": "4336:410:3"
											},
											{
												"body": {
													"nativeSrc": "4780:152:3",
													"nodeType": "YulBlock",
													"src": "4780:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4797:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4800:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4800:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4790:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:3"
																},
																"nativeSrc": "4790:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4790:88:3"
															},
															"nativeSrc": "4790:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4790:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4894:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4894:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4897:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4897:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4887:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:3"
																},
																"nativeSrc": "4887:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4887:15:3"
															},
															"nativeSrc": "4887:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4887:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4918:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4918:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4921:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4921:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4911:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:3"
																},
																"nativeSrc": "4911:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4911:15:3"
															},
															"nativeSrc": "4911:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4911:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4752:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4752:180:3"
											},
											{
												"body": {
													"nativeSrc": "4980:143:3",
													"nodeType": "YulBlock",
													"src": "4980:143:3",
													"statements": [
														{
															"nativeSrc": "4990:25:3",
															"nodeType": "YulAssignment",
															"src": "4990:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5013:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5013:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4995:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4995:17:3"
																},
																"nativeSrc": "4995:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4995:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4990:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4990:1:3"
																}
															]
														},
														{
															"nativeSrc": "5024:25:3",
															"nodeType": "YulAssignment",
															"src": "5024:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5047:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5047:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5029:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5029:17:3"
																},
																"nativeSrc": "5029:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5029:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5024:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5024:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5071:22:3",
																"nodeType": "YulBlock",
																"src": "5071:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5073:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5073:16:3"
																			},
																			"nativeSrc": "5073:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5073:18:3"
																		},
																		"nativeSrc": "5073:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5073:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5068:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5068:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5061:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:3"
																},
																"nativeSrc": "5061:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5061:9:3"
															},
															"nativeSrc": "5058:35:3",
															"nodeType": "YulIf",
															"src": "5058:35:3"
														},
														{
															"nativeSrc": "5103:14:3",
															"nodeType": "YulAssignment",
															"src": "5103:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5112:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5112:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5115:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5115:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5108:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5108:3:3"
																},
																"nativeSrc": "5108:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5108:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5103:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5103:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4938:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4969:1:3",
														"nodeType": "YulTypedName",
														"src": "4969:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4972:1:3",
														"nodeType": "YulTypedName",
														"src": "4972:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4978:1:3",
														"nodeType": "YulTypedName",
														"src": "4978:1:3",
														"type": ""
													}
												],
												"src": "4938:185:3"
											},
											{
												"body": {
													"nativeSrc": "5173:147:3",
													"nodeType": "YulBlock",
													"src": "5173:147:3",
													"statements": [
														{
															"nativeSrc": "5183:25:3",
															"nodeType": "YulAssignment",
															"src": "5183:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5206:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5206:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5188:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5188:17:3"
																},
																"nativeSrc": "5188:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5188:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5183:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5183:1:3"
																}
															]
														},
														{
															"nativeSrc": "5217:25:3",
															"nodeType": "YulAssignment",
															"src": "5217:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5240:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5240:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5222:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5222:17:3"
																},
																"nativeSrc": "5222:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5222:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5217:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5217:1:3"
																}
															]
														},
														{
															"nativeSrc": "5251:16:3",
															"nodeType": "YulAssignment",
															"src": "5251:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5262:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5262:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5265:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5265:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5258:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:3"
																},
																"nativeSrc": "5258:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5258:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5251:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5291:22:3",
																"nodeType": "YulBlock",
																"src": "5291:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5293:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5293:16:3"
																			},
																			"nativeSrc": "5293:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5293:18:3"
																		},
																		"nativeSrc": "5293:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5293:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5283:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5283:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5286:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5280:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5280:2:3"
																},
																"nativeSrc": "5280:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5280:10:3"
															},
															"nativeSrc": "5277:36:3",
															"nodeType": "YulIf",
															"src": "5277:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5129:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5160:1:3",
														"nodeType": "YulTypedName",
														"src": "5160:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5163:1:3",
														"nodeType": "YulTypedName",
														"src": "5163:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5169:3:3",
														"nodeType": "YulTypedName",
														"src": "5169:3:3",
														"type": ""
													}
												],
												"src": "5129:191:3"
											},
											{
												"body": {
													"nativeSrc": "5508:371:3",
													"nodeType": "YulBlock",
													"src": "5508:371:3",
													"statements": [
														{
															"nativeSrc": "5518:27:3",
															"nodeType": "YulAssignment",
															"src": "5518:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5530:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:3:3",
																		"nodeType": "YulLiteral",
																		"src": "5541:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:3"
																},
																"nativeSrc": "5526:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5526:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5518:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5599:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5599:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5612:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5612:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5623:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5623:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5608:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:3"
																		},
																		"nativeSrc": "5608:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5555:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5555:43:3"
																},
																"nativeSrc": "5555:71:3",
																"nodeType": "YulFunctionCall",
																"src": "5555:71:3"
															},
															"nativeSrc": "5555:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "5555:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5680:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5693:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5693:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5704:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5704:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5689:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5689:3:3"
																		},
																		"nativeSrc": "5689:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5689:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5636:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5636:43:3"
																},
																"nativeSrc": "5636:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5636:72:3"
															},
															"nativeSrc": "5636:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5636:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5762:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5775:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5775:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5786:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5786:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5771:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5771:3:3"
																		},
																		"nativeSrc": "5771:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5771:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5718:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5718:43:3"
																},
																"nativeSrc": "5718:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5718:72:3"
															},
															"nativeSrc": "5718:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5718:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5844:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5844:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5857:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5857:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5868:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5868:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5853:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5853:3:3"
																		},
																		"nativeSrc": "5853:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5853:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5800:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5800:43:3"
																},
																"nativeSrc": "5800:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5800:72:3"
															},
															"nativeSrc": "5800:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5800:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5326:553:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5456:9:3",
														"nodeType": "YulTypedName",
														"src": "5456:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5468:6:3",
														"nodeType": "YulTypedName",
														"src": "5468:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5476:6:3",
														"nodeType": "YulTypedName",
														"src": "5476:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5484:6:3",
														"nodeType": "YulTypedName",
														"src": "5484:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5492:6:3",
														"nodeType": "YulTypedName",
														"src": "5492:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5503:4:3",
														"nodeType": "YulTypedName",
														"src": "5503:4:3",
														"type": ""
													}
												],
												"src": "5326:553:3"
											},
											{
												"body": {
													"nativeSrc": "6011:206:3",
													"nodeType": "YulBlock",
													"src": "6011:206:3",
													"statements": [
														{
															"nativeSrc": "6021:26:3",
															"nodeType": "YulAssignment",
															"src": "6021:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6033:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6033:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6044:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6044:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6029:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6029:3:3"
																},
																"nativeSrc": "6029:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6029:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6021:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6021:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6101:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6101:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6114:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6125:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6125:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6110:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6110:3:3"
																		},
																		"nativeSrc": "6110:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6110:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6057:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6057:43:3"
																},
																"nativeSrc": "6057:71:3",
																"nodeType": "YulFunctionCall",
																"src": "6057:71:3"
															},
															"nativeSrc": "6057:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "6057:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6182:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6182:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6195:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6195:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6206:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6191:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6191:3:3"
																		},
																		"nativeSrc": "6191:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6138:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6138:43:3"
																},
																"nativeSrc": "6138:72:3",
																"nodeType": "YulFunctionCall",
																"src": "6138:72:3"
															},
															"nativeSrc": "6138:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "6138:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5885:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5975:9:3",
														"nodeType": "YulTypedName",
														"src": "5975:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5987:6:3",
														"nodeType": "YulTypedName",
														"src": "5987:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5995:6:3",
														"nodeType": "YulTypedName",
														"src": "5995:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6006:4:3",
														"nodeType": "YulTypedName",
														"src": "6006:4:3",
														"type": ""
													}
												],
												"src": "5885:332:3"
											},
											{
												"body": {
													"nativeSrc": "6329:58:3",
													"nodeType": "YulBlock",
													"src": "6329:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6351:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6351:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6359:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6359:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6347:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:3"
																		},
																		"nativeSrc": "6347:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6347:14:3"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "6363:16:3",
																		"nodeType": "YulLiteral",
																		"src": "6363:16:3",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6340:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:3"
																},
																"nativeSrc": "6340:40:3",
																"nodeType": "YulFunctionCall",
																"src": "6340:40:3"
															},
															"nativeSrc": "6340:40:3",
															"nodeType": "YulExpressionStatement",
															"src": "6340:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "6223:164:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6321:6:3",
														"nodeType": "YulTypedName",
														"src": "6321:6:3",
														"type": ""
													}
												],
												"src": "6223:164:3"
											},
											{
												"body": {
													"nativeSrc": "6539:220:3",
													"nodeType": "YulBlock",
													"src": "6539:220:3",
													"statements": [
														{
															"nativeSrc": "6549:74:3",
															"nodeType": "YulAssignment",
															"src": "6549:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6615:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6615:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6556:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6556:58:3"
																},
																"nativeSrc": "6556:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6556:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6549:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6721:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6721:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "6632:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6632:88:3"
																},
																"nativeSrc": "6632:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6632:93:3"
															},
															"nativeSrc": "6632:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6632:93:3"
														},
														{
															"nativeSrc": "6734:19:3",
															"nodeType": "YulAssignment",
															"src": "6734:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6745:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6745:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6741:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6741:3:3"
																},
																"nativeSrc": "6741:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6741:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6734:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6393:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6527:3:3",
														"nodeType": "YulTypedName",
														"src": "6527:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6535:3:3",
														"nodeType": "YulTypedName",
														"src": "6535:3:3",
														"type": ""
													}
												],
												"src": "6393:366:3"
											},
											{
												"body": {
													"nativeSrc": "6936:248:3",
													"nodeType": "YulBlock",
													"src": "6936:248:3",
													"statements": [
														{
															"nativeSrc": "6946:26:3",
															"nodeType": "YulAssignment",
															"src": "6946:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6958:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6958:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6969:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6969:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6954:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:3"
																},
																"nativeSrc": "6954:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6954:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6946:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6946:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6993:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6993:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7004:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7004:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6989:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6989:3:3"
																		},
																		"nativeSrc": "6989:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6989:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7012:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "7012:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7018:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7018:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7008:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:3"
																		},
																		"nativeSrc": "7008:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7008:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6982:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:3"
																},
																"nativeSrc": "6982:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6982:47:3"
															},
															"nativeSrc": "6982:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6982:47:3"
														},
														{
															"nativeSrc": "7038:139:3",
															"nodeType": "YulAssignment",
															"src": "7038:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7172:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "7172:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7046:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "7046:124:3"
																},
																"nativeSrc": "7046:131:3",
																"nodeType": "YulFunctionCall",
																"src": "7046:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7038:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7038:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6765:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6916:9:3",
														"nodeType": "YulTypedName",
														"src": "6916:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6931:4:3",
														"nodeType": "YulTypedName",
														"src": "6931:4:3",
														"type": ""
													}
												],
												"src": "6765:419:3"
											},
											{
												"body": {
													"nativeSrc": "7296:126:3",
													"nodeType": "YulBlock",
													"src": "7296:126:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7318:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "7318:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7326:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7326:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7314:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:3"
																		},
																		"nativeSrc": "7314:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7314:14:3"
																	},
																	{
																		"hexValue": "5072697a65207363616c652063616e206f6e6c79206265207570646174656420",
																		"kind": "string",
																		"nativeSrc": "7330:34:3",
																		"nodeType": "YulLiteral",
																		"src": "7330:34:3",
																		"type": "",
																		"value": "Prize scale can only be updated "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7307:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:3"
																},
																"nativeSrc": "7307:58:3",
																"nodeType": "YulFunctionCall",
																"src": "7307:58:3"
															},
															"nativeSrc": "7307:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "7307:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7386:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "7386:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7394:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7394:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7382:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:3"
																		},
																		"nativeSrc": "7382:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:15:3"
																	},
																	{
																		"hexValue": "6f6e636520706572207765656b",
																		"kind": "string",
																		"nativeSrc": "7399:15:3",
																		"nodeType": "YulLiteral",
																		"src": "7399:15:3",
																		"type": "",
																		"value": "once per week"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7375:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7375:6:3"
																},
																"nativeSrc": "7375:40:3",
																"nodeType": "YulFunctionCall",
																"src": "7375:40:3"
															},
															"nativeSrc": "7375:40:3",
															"nodeType": "YulExpressionStatement",
															"src": "7375:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b",
												"nativeSrc": "7190:232:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7288:6:3",
														"nodeType": "YulTypedName",
														"src": "7288:6:3",
														"type": ""
													}
												],
												"src": "7190:232:3"
											},
											{
												"body": {
													"nativeSrc": "7574:220:3",
													"nodeType": "YulBlock",
													"src": "7574:220:3",
													"statements": [
														{
															"nativeSrc": "7584:74:3",
															"nodeType": "YulAssignment",
															"src": "7584:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7650:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7650:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7655:2:3",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7591:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "7591:58:3"
																},
																"nativeSrc": "7591:67:3",
																"nodeType": "YulFunctionCall",
																"src": "7591:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7584:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7756:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7756:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b",
																	"nativeSrc": "7667:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "7667:88:3"
																},
																"nativeSrc": "7667:93:3",
																"nodeType": "YulFunctionCall",
																"src": "7667:93:3"
															},
															"nativeSrc": "7667:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "7667:93:3"
														},
														{
															"nativeSrc": "7769:19:3",
															"nodeType": "YulAssignment",
															"src": "7769:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7780:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7780:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7785:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7785:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7776:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:3"
																},
																"nativeSrc": "7776:12:3",
																"nodeType": "YulFunctionCall",
																"src": "7776:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7769:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7428:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7562:3:3",
														"nodeType": "YulTypedName",
														"src": "7562:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7570:3:3",
														"nodeType": "YulTypedName",
														"src": "7570:3:3",
														"type": ""
													}
												],
												"src": "7428:366:3"
											},
											{
												"body": {
													"nativeSrc": "7971:248:3",
													"nodeType": "YulBlock",
													"src": "7971:248:3",
													"statements": [
														{
															"nativeSrc": "7981:26:3",
															"nodeType": "YulAssignment",
															"src": "7981:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7993:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7993:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8004:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8004:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7989:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7989:3:3"
																},
																"nativeSrc": "7989:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7989:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7981:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7981:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8028:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8028:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8039:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8039:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8024:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:3"
																		},
																		"nativeSrc": "8024:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8024:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8047:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8047:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8053:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8053:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8043:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8043:3:3"
																		},
																		"nativeSrc": "8043:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8043:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8017:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:3"
																},
																"nativeSrc": "8017:47:3",
																"nodeType": "YulFunctionCall",
																"src": "8017:47:3"
															},
															"nativeSrc": "8017:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "8017:47:3"
														},
														{
															"nativeSrc": "8073:139:3",
															"nodeType": "YulAssignment",
															"src": "8073:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8207:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8207:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8081:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "8081:124:3"
																},
																"nativeSrc": "8081:131:3",
																"nodeType": "YulFunctionCall",
																"src": "8081:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8073:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8073:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7800:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7951:9:3",
														"nodeType": "YulTypedName",
														"src": "7951:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7966:4:3",
														"nodeType": "YulTypedName",
														"src": "7966:4:3",
														"type": ""
													}
												],
												"src": "7800:419:3"
											},
											{
												"body": {
													"nativeSrc": "8331:118:3",
													"nodeType": "YulBlock",
													"src": "8331:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8353:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8353:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8361:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8349:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8349:3:3"
																		},
																		"nativeSrc": "8349:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8349:14:3"
																	},
																	{
																		"hexValue": "5072697a65207363616c65206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "8365:34:3",
																		"nodeType": "YulLiteral",
																		"src": "8365:34:3",
																		"type": "",
																		"value": "Prize scale must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8342:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:3"
																},
																"nativeSrc": "8342:58:3",
																"nodeType": "YulFunctionCall",
																"src": "8342:58:3"
															},
															"nativeSrc": "8342:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "8342:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8421:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8421:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8429:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8429:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8417:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8417:3:3"
																		},
																		"nativeSrc": "8417:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8417:15:3"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "8434:7:3",
																		"nodeType": "YulLiteral",
																		"src": "8434:7:3",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8410:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:3"
																},
																"nativeSrc": "8410:32:3",
																"nodeType": "YulFunctionCall",
																"src": "8410:32:3"
															},
															"nativeSrc": "8410:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "8410:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4",
												"nativeSrc": "8225:224:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8323:6:3",
														"nodeType": "YulTypedName",
														"src": "8323:6:3",
														"type": ""
													}
												],
												"src": "8225:224:3"
											},
											{
												"body": {
													"nativeSrc": "8601:220:3",
													"nodeType": "YulBlock",
													"src": "8601:220:3",
													"statements": [
														{
															"nativeSrc": "8611:74:3",
															"nodeType": "YulAssignment",
															"src": "8611:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8677:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8677:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8682:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8618:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "8618:58:3"
																},
																"nativeSrc": "8618:67:3",
																"nodeType": "YulFunctionCall",
																"src": "8618:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8611:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8611:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8783:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8783:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4",
																	"nativeSrc": "8694:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "8694:88:3"
																},
																"nativeSrc": "8694:93:3",
																"nodeType": "YulFunctionCall",
																"src": "8694:93:3"
															},
															"nativeSrc": "8694:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "8694:93:3"
														},
														{
															"nativeSrc": "8796:19:3",
															"nodeType": "YulAssignment",
															"src": "8796:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8807:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8807:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8812:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8812:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8803:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8803:3:3"
																},
																"nativeSrc": "8803:12:3",
																"nodeType": "YulFunctionCall",
																"src": "8803:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8796:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8796:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8455:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8589:3:3",
														"nodeType": "YulTypedName",
														"src": "8589:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8597:3:3",
														"nodeType": "YulTypedName",
														"src": "8597:3:3",
														"type": ""
													}
												],
												"src": "8455:366:3"
											},
											{
												"body": {
													"nativeSrc": "8998:248:3",
													"nodeType": "YulBlock",
													"src": "8998:248:3",
													"statements": [
														{
															"nativeSrc": "9008:26:3",
															"nodeType": "YulAssignment",
															"src": "9008:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9020:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9020:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9031:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9031:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9016:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9016:3:3"
																},
																"nativeSrc": "9016:18:3",
																"nodeType": "YulFunctionCall",
																"src": "9016:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9008:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9008:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9055:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9055:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9066:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9066:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9051:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9051:3:3"
																		},
																		"nativeSrc": "9051:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9051:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9074:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "9074:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9080:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9080:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9070:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:3"
																		},
																		"nativeSrc": "9070:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9070:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9044:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9044:6:3"
																},
																"nativeSrc": "9044:47:3",
																"nodeType": "YulFunctionCall",
																"src": "9044:47:3"
															},
															"nativeSrc": "9044:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "9044:47:3"
														},
														{
															"nativeSrc": "9100:139:3",
															"nodeType": "YulAssignment",
															"src": "9100:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9234:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9234:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9108:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "9108:124:3"
																},
																"nativeSrc": "9108:131:3",
																"nodeType": "YulFunctionCall",
																"src": "9108:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9100:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9100:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8827:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8978:9:3",
														"nodeType": "YulTypedName",
														"src": "8978:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8993:4:3",
														"nodeType": "YulTypedName",
														"src": "8993:4:3",
														"type": ""
													}
												],
												"src": "8827:419:3"
											},
											{
												"body": {
													"nativeSrc": "9305:32:3",
													"nodeType": "YulBlock",
													"src": "9305:32:3",
													"statements": [
														{
															"nativeSrc": "9315:16:3",
															"nodeType": "YulAssignment",
															"src": "9315:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "9326:5:3",
																"nodeType": "YulIdentifier",
																"src": "9326:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9315:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "9315:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "9252:85:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9287:5:3",
														"nodeType": "YulTypedName",
														"src": "9287:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9297:7:3",
														"nodeType": "YulTypedName",
														"src": "9297:7:3",
														"type": ""
													}
												],
												"src": "9252:85:3"
											},
											{
												"body": {
													"nativeSrc": "9375:28:3",
													"nodeType": "YulBlock",
													"src": "9375:28:3",
													"statements": [
														{
															"nativeSrc": "9385:12:3",
															"nodeType": "YulAssignment",
															"src": "9385:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "9392:5:3",
																"nodeType": "YulIdentifier",
																"src": "9392:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9385:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9343:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9361:5:3",
														"nodeType": "YulTypedName",
														"src": "9361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9371:3:3",
														"nodeType": "YulTypedName",
														"src": "9371:3:3",
														"type": ""
													}
												],
												"src": "9343:60:3"
											},
											{
												"body": {
													"nativeSrc": "9477:90:3",
													"nodeType": "YulBlock",
													"src": "9477:90:3",
													"statements": [
														{
															"nativeSrc": "9487:74:3",
															"nodeType": "YulAssignment",
															"src": "9487:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9553:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "9553:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9527:25:3",
																					"nodeType": "YulIdentifier",
																					"src": "9527:25:3"
																				},
																				"nativeSrc": "9527:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "9527:32:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9518:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "9518:8:3"
																		},
																		"nativeSrc": "9518:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9518:42:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9500:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "9500:17:3"
																},
																"nativeSrc": "9500:61:3",
																"nodeType": "YulFunctionCall",
																"src": "9500:61:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9487:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "9487:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9409:158:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9457:5:3",
														"nodeType": "YulTypedName",
														"src": "9457:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9467:9:3",
														"nodeType": "YulTypedName",
														"src": "9467:9:3",
														"type": ""
													}
												],
												"src": "9409:158:3"
											},
											{
												"body": {
													"nativeSrc": "9646:74:3",
													"nodeType": "YulBlock",
													"src": "9646:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9663:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9663:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9707:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "9707:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9668:38:3",
																			"nodeType": "YulIdentifier",
																			"src": "9668:38:3"
																		},
																		"nativeSrc": "9668:45:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9668:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9656:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9656:6:3"
																},
																"nativeSrc": "9656:58:3",
																"nodeType": "YulFunctionCall",
																"src": "9656:58:3"
															},
															"nativeSrc": "9656:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "9656:58:3"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9573:147:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9634:5:3",
														"nodeType": "YulTypedName",
														"src": "9634:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9641:3:3",
														"nodeType": "YulTypedName",
														"src": "9641:3:3",
														"type": ""
													}
												],
												"src": "9573:147:3"
											},
											{
												"body": {
													"nativeSrc": "9940:403:3",
													"nodeType": "YulBlock",
													"src": "9940:403:3",
													"statements": [
														{
															"nativeSrc": "9950:27:3",
															"nodeType": "YulAssignment",
															"src": "9950:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9962:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9962:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9973:3:3",
																		"nodeType": "YulLiteral",
																		"src": "9973:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9958:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9958:3:3"
																},
																"nativeSrc": "9958:19:3",
																"nodeType": "YulFunctionCall",
																"src": "9958:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9950:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9950:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10039:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10039:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10052:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10063:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10063:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10048:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:3"
																		},
																		"nativeSrc": "10048:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10048:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9987:51:3",
																	"nodeType": "YulIdentifier",
																	"src": "9987:51:3"
																},
																"nativeSrc": "9987:79:3",
																"nodeType": "YulFunctionCall",
																"src": "9987:79:3"
															},
															"nativeSrc": "9987:79:3",
															"nodeType": "YulExpressionStatement",
															"src": "9987:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10128:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10128:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10141:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10141:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10152:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10152:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10137:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10137:3:3"
																		},
																		"nativeSrc": "10137:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10137:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10076:51:3",
																	"nodeType": "YulIdentifier",
																	"src": "10076:51:3"
																},
																"nativeSrc": "10076:80:3",
																"nodeType": "YulFunctionCall",
																"src": "10076:80:3"
															},
															"nativeSrc": "10076:80:3",
															"nodeType": "YulExpressionStatement",
															"src": "10076:80:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10218:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10218:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10231:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10242:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10242:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10227:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:3"
																		},
																		"nativeSrc": "10227:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10227:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10166:51:3",
																	"nodeType": "YulIdentifier",
																	"src": "10166:51:3"
																},
																"nativeSrc": "10166:80:3",
																"nodeType": "YulFunctionCall",
																"src": "10166:80:3"
															},
															"nativeSrc": "10166:80:3",
															"nodeType": "YulExpressionStatement",
															"src": "10166:80:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10308:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10308:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10332:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:3"
																		},
																		"nativeSrc": "10317:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10256:51:3",
																	"nodeType": "YulIdentifier",
																	"src": "10256:51:3"
																},
																"nativeSrc": "10256:80:3",
																"nodeType": "YulFunctionCall",
																"src": "10256:80:3"
															},
															"nativeSrc": "10256:80:3",
															"nodeType": "YulExpressionStatement",
															"src": "10256:80:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9726:617:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9888:9:3",
														"nodeType": "YulTypedName",
														"src": "9888:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9900:6:3",
														"nodeType": "YulTypedName",
														"src": "9900:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9908:6:3",
														"nodeType": "YulTypedName",
														"src": "9908:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9916:6:3",
														"nodeType": "YulTypedName",
														"src": "9916:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9924:6:3",
														"nodeType": "YulTypedName",
														"src": "9924:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9935:4:3",
														"nodeType": "YulTypedName",
														"src": "9935:4:3",
														"type": ""
													}
												],
												"src": "9726:617:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No profits to distribute\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Prize scale can only be updated \")\n\n        mstore(add(memPtr, 32), \"once per week\")\n\n    }\n\n    function abi_encode_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Prize scale must be greater than\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063ab4d819f11610095578063f1a002b111610064578063f1a002b114610254578063f2e27b6514610272578063f2fde38b1461028e578063fb5274e5146102aa576100fe565b8063ab4d819f146101dc578063acdcf5f2146101fa578063cb3ebec214610218578063ed22723a14610236576100fe565b8063715018a6116100d1578063715018a61461017a5780637b820b83146101845780638da5cb5b146101a25780639ad97fa0146101c0576100fe565b806311a1c8bd146101025780631934c786146101205780631f63000f1461013e578063638ad71d1461015c575b5f5ffd5b61010a6102b4565b6040516101179190610982565b60405180910390f35b6101286102ba565b6040516101359190610982565b60405180910390f35b6101466102c0565b60405161015391906109b5565b60405180910390f35b6101646102d3565b6040516101719190610982565b60405180910390f35b6101826102d9565b005b61018c6102ec565b6040516101999190610982565b60405180910390f35b6101aa6102f2565b6040516101b79190610a0d565b60405180910390f35b6101da60048036038101906101d59190610a54565b610319565b005b6101e4610512565b6040516101f19190610982565b60405180910390f35b610202610518565b60405161020f91906109b5565b60405180910390f35b6102206105aa565b60405161022d9190610982565b60405180910390f35b61023e6105b0565b60405161024b9190610982565b60405180910390f35b61025c6105b6565b60405161026991906109b5565b60405180910390f35b61028c60048036038101906102879190610a54565b6105c8565b005b6102a860048036038101906102a39190610aa9565b610750565b005b6102b26107d4565b005b60015481565b60065481565b600960019054906101000a900460ff1681565b60045481565b6102e161081b565b6102ea5f6108a2565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61032161081b565b5f8111610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a90610b2e565b60405180910390fd5b5f60646032836103739190610b79565b61037d9190610be7565b90505f606460058461038f9190610b79565b6103999190610be7565b90506064600a836103aa9190610b79565b6103b49190610be7565b60015f8282546103c49190610c17565b925050819055506064600a836103da9190610b79565b6103e49190610be7565b60025f8282546103f49190610c17565b925050819055506064600a8361040a9190610b79565b6104149190610be7565b60035f8282546104249190610c17565b925050819055506064600a8361043a9190610b79565b6104449190610be7565b60045f8282546104549190610c17565b925050819055508060055f82825461046c9190610c17565b925050819055508060065f8282546104849190610c17565b925050819055507fc1879f0406577975a5876a8db2ec1549e2a3194f0f01e15bde4292d6e4b368246001546002546003546004546040516104c89493929190610c4a565b60405180910390a17fbbb79063c8e8bcd7691a017e4e76c5de1369686b9f0674f946b0129041525b59600554600654604051610505929190610c8d565b60405180910390a1505050565b60035481565b5f5f60016007546105299190610b79565b600a6007546105389190610b79565b60646007546105479190610b79565b6103e86007546105579190610b79565b6105619190610c17565b61056b9190610c17565b6105759190610c17565b90508060015410158061058a57508060025410155b8061059757508060035410155b806105a457508060045410155b91505090565b60055481565b60075481565b60095f9054906101000a900460ff1681565b6105d06102f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061063457503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90610cfe565b60405180910390fd5b62093a806008546106849190610c17565b4210156106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd90610d8c565b60405180910390fd5b5f8111610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90610e1a565b60405180910390fd5b80600781905550426008819055507fbe74989b82c125ec369bdc21c95661e14a1d97c700ebdef03b84c0da6fc93c5a816040516107459190610982565b60405180910390a150565b61075861081b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107bf9190610a0d565b60405180910390fd5b6107d1816108a2565b50565b6107dc61081b565b7ffe24c1a52828fa9764a2d2ebf1c0066647f541fa9636c315facf936ed0b3a7795f5f5f5f6040516108119493929190610e7a565b60405180910390a1565b610823610963565b73ffffffffffffffffffffffffffffffffffffffff166108416102f2565b73ffffffffffffffffffffffffffffffffffffffff16146108a057610864610963565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108979190610a0d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61097c8161096a565b82525050565b5f6020820190506109955f830184610973565b92915050565b5f8115159050919050565b6109af8161099b565b82525050565b5f6020820190506109c85f8301846109a6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109f7826109ce565b9050919050565b610a07816109ed565b82525050565b5f602082019050610a205f8301846109fe565b92915050565b5f5ffd5b610a338161096a565b8114610a3d575f5ffd5b50565b5f81359050610a4e81610a2a565b92915050565b5f60208284031215610a6957610a68610a26565b5b5f610a7684828501610a40565b91505092915050565b610a88816109ed565b8114610a92575f5ffd5b50565b5f81359050610aa381610a7f565b92915050565b5f60208284031215610abe57610abd610a26565b5b5f610acb84828501610a95565b91505092915050565b5f82825260208201905092915050565b7f4e6f2070726f6669747320746f206469737472696275746500000000000000005f82015250565b5f610b18601883610ad4565b9150610b2382610ae4565b602082019050919050565b5f6020820190508181035f830152610b4581610b0c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b838261096a565b9150610b8e8361096a565b9250828202610b9c8161096a565b91508282048414831517610bb357610bb2610b4c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bf18261096a565b9150610bfc8361096a565b925082610c0c57610c0b610bba565b5b828204905092915050565b5f610c218261096a565b9150610c2c8361096a565b9250828201905080821115610c4457610c43610b4c565b5b92915050565b5f608082019050610c5d5f830187610973565b610c6a6020830186610973565b610c776040830185610973565b610c846060830184610973565b95945050505050565b5f604082019050610ca05f830185610973565b610cad6020830184610973565b9392505050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f610ce8600e83610ad4565b9150610cf382610cb4565b602082019050919050565b5f6020820190508181035f830152610d1581610cdc565b9050919050565b7f5072697a65207363616c652063616e206f6e6c792062652075706461746564205f8201527f6f6e636520706572207765656b00000000000000000000000000000000000000602082015250565b5f610d76602d83610ad4565b9150610d8182610d1c565b604082019050919050565b5f6020820190508181035f830152610da381610d6a565b9050919050565b7f5072697a65207363616c65206d7573742062652067726561746572207468616e5f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e04602583610ad4565b9150610e0f82610daa565b604082019050919050565b5f6020820190508181035f830152610e3181610df8565b9050919050565b5f819050919050565b5f819050919050565b5f610e64610e5f610e5a84610e38565b610e41565b61096a565b9050919050565b610e7481610e4a565b82525050565b5f608082019050610e8d5f830187610e6b565b610e9a6020830186610e6b565b610ea76040830185610e6b565b610eb46060830184610e6b565b9594505050505056fea2646970667358221220d793c084ec61ac9868c0f6886a702c1adaa8b7b5bb937a0ec4e341af6797d8f364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB4D819F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF1A002B1 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF1A002B1 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xF2E27B65 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFB5274E5 EQ PUSH2 0x2AA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xAB4D819F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xACDCF5F2 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCB3EBEC2 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xED22723A EQ PUSH2 0x236 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x7B820B83 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x9AD97FA0 EQ PUSH2 0x1C0 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x11A1C8BD EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1934C786 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1F63000F EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x638AD71D EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x7D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x2EA PUSH0 PUSH2 0x8A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x81B JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x32 DUP4 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xC1879F0406577975A5876A8DB2EC1549E2A3194F0F01E15BDE4292D6E4B36824 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xBBB79063C8E8BCD7691A017E4E76C5DE1369686B9F0674F946B0129041525B59 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x505 SWAP3 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0xA PUSH1 0x7 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x7 SLOAD PUSH2 0x557 SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x561 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x575 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT ISZERO DUP1 PUSH2 0x58A JUMPI POP DUP1 PUSH1 0x2 SLOAD LT ISZERO JUMPDEST DUP1 PUSH2 0x597 JUMPI POP DUP1 PUSH1 0x3 SLOAD LT ISZERO JUMPDEST DUP1 PUSH2 0x5A4 JUMPI POP DUP1 PUSH1 0x4 SLOAD LT ISZERO JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x634 JUMPI POP ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x8 SLOAD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xBE74989B82C125EC369BDC21C95661E14A1D97C700EBDEF03B84C0DA6FC93C5A DUP2 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x758 PUSH2 0x81B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D1 DUP2 PUSH2 0x8A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x81B JUMP JUMPDEST PUSH32 0xFE24C1A52828FA9764A2D2EBF1C0066647F541FA9636C315FACF936ED0B3A779 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x811 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x823 PUSH2 0x963 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A0 JUMPI PUSH2 0x864 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x96A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x995 PUSH0 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AF DUP2 PUSH2 0x99B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x9A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F7 DUP3 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA20 PUSH0 DUP4 ADD DUP5 PUSH2 0x9FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0x96A JUMP JUMPDEST DUP2 EQ PUSH2 0xA3D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4E DUP2 PUSH2 0xA2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP3 DUP6 ADD PUSH2 0xA40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0x9ED JUMP JUMPDEST DUP2 EQ PUSH2 0xA92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA3 DUP2 PUSH2 0xA7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xACB DUP5 DUP3 DUP6 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2070726F6669747320746F20646973747269627574650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB18 PUSH1 0x18 DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP3 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB45 DUP2 PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB83 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB9C DUP2 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0xB4C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF1 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0xBBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC21 DUP3 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC44 JUMPI PUSH2 0xC43 PUSH2 0xB4C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC5D PUSH0 DUP4 ADD DUP8 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC6A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xC84 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCA0 PUSH0 DUP4 ADD DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE8 PUSH1 0xE DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF3 DUP3 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD15 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A65207363616C652063616E206F6E6C79206265207570646174656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E636520706572207765656B00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD76 PUSH1 0x2D DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD81 DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA3 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A65207363616C65206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE04 PUSH1 0x25 DUP4 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0F DUP3 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE31 DUP2 PUSH2 0xDF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE64 PUSH2 0xE5F PUSH2 0xE5A DUP5 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE74 DUP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xE8D PUSH0 DUP4 ADD DUP8 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xE9A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xEA7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0xEB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP4 0xC0 DUP5 0xEC PUSH2 0xAC98 PUSH9 0xC0F6886A702C1ADAA8 0xB7 0xB5 0xBB SWAP4 PUSH27 0xEC4E341AF6797D8F364736F6C634300081C003300000000000000 ",
							"sourceMap": "246:3778:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;735:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;338:24:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1566:857:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;369:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3239:428;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;452:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;684:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2583:466;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3837:184:2;;;:::i;:::-;;306:25;;;;:::o;487:32::-;;;;:::o;735:48::-;;;;;;;;;;;;;:::o;402:23::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;338:24:2:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1566:857:2:-;1531:13:0;:11;:13::i;:::-;1657:1:2::1;1647:7;:11;1639:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1700:18;1738:3;1732:2;1722:7;:12;;;;:::i;:::-;1721:20;;;;:::i;:::-;1700:41;;1775:21;1815:3;1810:1;1800:7;:11;;;;:::i;:::-;1799:19;;;;:::i;:::-;1775:43;;1920:3;1914:2;1901:10;:15;;;;:::i;:::-;1900:23;;;;:::i;:::-;1886:10;;:37;;;;;;;:::i;:::-;;;;;;;;1989:3;1983:2;1970:10;:15;;;;:::i;:::-;1969:23;;;;:::i;:::-;1956:9;;:36;;;;;;;:::i;:::-;;;;;;;;2059:3;2053:2;2040:10;:15;;;;:::i;:::-;2039:23;;;;:::i;:::-;2024:11;;:38;;;;;;;:::i;:::-;;;;;;;;2128:3;2122:2;2109:10;:15;;;;:::i;:::-;2108:23;;;;:::i;:::-;2096:8;;:35;;;;;;;:::i;:::-;;;;;;;;2210:13;2193;;:30;;;;;;;:::i;:::-;;;;;;;;2255:13;2234:17;;:34;;;;;;;:::i;:::-;;;;;;;;2286:63;2304:10;;2316:9;;2327:11;;2340:8;;2286:63;;;;;;;;;:::i;:::-;;;;;;;;2365:50;2382:13;;2397:17;;2365:50;;;;;;;:::i;:::-;;;;;;;;1628:795;;1566:857:::0;:::o;369:26::-;;;;:::o;3239:428::-;3300:4;3317:19;3509:1;3496:10;;:14;;;;:::i;:::-;3460:2;3447:10;;:15;;;;:::i;:::-;3413:3;3400:10;;:16;;;;:::i;:::-;3365:4;3352:10;;:17;;;;:::i;:::-;:64;;;;:::i;:::-;:110;;;;:::i;:::-;:158;;;;:::i;:::-;3317:193;;3562:11;3548:10;;:25;;:53;;;;3590:11;3577:9;;:24;;3548:53;:83;;;;3620:11;3605;;:26;;3548:83;:110;;;;3647:11;3635:8;;:23;;3548:110;3540:119;;;3239:428;:::o;452:28::-;;;;:::o;564:30::-;;;;:::o;684:44::-;;;;;;;;;;;;;:::o;2583:466::-;2669:7;:5;:7::i;:::-;2655:21;;:10;:21;;;:48;;;;2694:9;2680:23;;:10;:23;;;2655:48;2647:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2783:7;2760:20;;:30;;;;:::i;:::-;2741:15;:49;;2733:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2870:1;2859:8;:12;2851:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2939:8;2926:10;:21;;;;2981:15;2958:20;:38;;;;3014:27;3032:8;3014:27;;;;;;:::i;:::-;;;;;;;;2583:466;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3837:184:2:-;1531:13:0;:11;:13::i;:::-;3969:29:2::1;3987:1;3990;3993;3996;3969:29;;;;;;;;;:::i;:::-;;;;;;;;3837:184::o:0;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:126::-;906:7;946:42;939:5;935:54;924:65;;869:126;;;:::o;1001:96::-;1038:7;1067:24;1085:5;1067:24;:::i;:::-;1056:35;;1001:96;;;:::o;1103:118::-;1190:24;1208:5;1190:24;:::i;:::-;1185:3;1178:37;1103:118;;:::o;1227:222::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:71;1439:1;1428:9;1424:17;1415:6;1371:71;:::i;:::-;1227:222;;;;:::o;1536:117::-;1645:1;1642;1635:12;1782:122;1855:24;1873:5;1855:24;:::i;:::-;1848:5;1845:35;1835:63;;1894:1;1891;1884:12;1835:63;1782:122;:::o;1910:139::-;1956:5;1994:6;1981:20;1972:29;;2010:33;2037:5;2010:33;:::i;:::-;1910:139;;;;:::o;2055:329::-;2114:6;2163:2;2151:9;2142:7;2138:23;2134:32;2131:119;;;2169:79;;:::i;:::-;2131:119;2289:1;2314:53;2359:7;2350:6;2339:9;2335:22;2314:53;:::i;:::-;2304:63;;2260:117;2055:329;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:169::-;3082:11;3116:6;3111:3;3104:19;3156:4;3151:3;3147:14;3132:29;;2998:169;;;;:::o;3173:174::-;3313:26;3309:1;3301:6;3297:14;3290:50;3173:174;:::o;3353:366::-;3495:3;3516:67;3580:2;3575:3;3516:67;:::i;:::-;3509:74;;3592:93;3681:3;3592:93;:::i;:::-;3710:2;3705:3;3701:12;3694:19;;3353:366;;;:::o;3725:419::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3978:9;3972:4;3968:20;3964:1;3953:9;3949:17;3942:47;4006:131;4132:4;4006:131;:::i;:::-;3998:139;;3725:419;;;:::o;4150:180::-;4198:77;4195:1;4188:88;4295:4;4292:1;4285:15;4319:4;4316:1;4309:15;4336:410;4376:7;4399:20;4417:1;4399:20;:::i;:::-;4394:25;;4433:20;4451:1;4433:20;:::i;:::-;4428:25;;4488:1;4485;4481:9;4510:30;4528:11;4510:30;:::i;:::-;4499:41;;4689:1;4680:7;4676:15;4673:1;4670:22;4650:1;4643:9;4623:83;4600:139;;4719:18;;:::i;:::-;4600:139;4384:362;4336:410;;;;:::o;4752:180::-;4800:77;4797:1;4790:88;4897:4;4894:1;4887:15;4921:4;4918:1;4911:15;4938:185;4978:1;4995:20;5013:1;4995:20;:::i;:::-;4990:25;;5029:20;5047:1;5029:20;:::i;:::-;5024:25;;5068:1;5058:35;;5073:18;;:::i;:::-;5058:35;5115:1;5112;5108:9;5103:14;;4938:185;;;;:::o;5129:191::-;5169:3;5188:20;5206:1;5188:20;:::i;:::-;5183:25;;5222:20;5240:1;5222:20;:::i;:::-;5217:25;;5265:1;5262;5258:9;5251:16;;5286:3;5283:1;5280:10;5277:36;;;5293:18;;:::i;:::-;5277:36;5129:191;;;;:::o;5326:553::-;5503:4;5541:3;5530:9;5526:19;5518:27;;5555:71;5623:1;5612:9;5608:17;5599:6;5555:71;:::i;:::-;5636:72;5704:2;5693:9;5689:18;5680:6;5636:72;:::i;:::-;5718;5786:2;5775:9;5771:18;5762:6;5718:72;:::i;:::-;5800;5868:2;5857:9;5853:18;5844:6;5800:72;:::i;:::-;5326:553;;;;;;;:::o;5885:332::-;6006:4;6044:2;6033:9;6029:18;6021:26;;6057:71;6125:1;6114:9;6110:17;6101:6;6057:71;:::i;:::-;6138:72;6206:2;6195:9;6191:18;6182:6;6138:72;:::i;:::-;5885:332;;;;;:::o;6223:164::-;6363:16;6359:1;6351:6;6347:14;6340:40;6223:164;:::o;6393:366::-;6535:3;6556:67;6620:2;6615:3;6556:67;:::i;:::-;6549:74;;6632:93;6721:3;6632:93;:::i;:::-;6750:2;6745:3;6741:12;6734:19;;6393:366;;;:::o;6765:419::-;6931:4;6969:2;6958:9;6954:18;6946:26;;7018:9;7012:4;7008:20;7004:1;6993:9;6989:17;6982:47;7046:131;7172:4;7046:131;:::i;:::-;7038:139;;6765:419;;;:::o;7190:232::-;7330:34;7326:1;7318:6;7314:14;7307:58;7399:15;7394:2;7386:6;7382:15;7375:40;7190:232;:::o;7428:366::-;7570:3;7591:67;7655:2;7650:3;7591:67;:::i;:::-;7584:74;;7667:93;7756:3;7667:93;:::i;:::-;7785:2;7780:3;7776:12;7769:19;;7428:366;;;:::o;7800:419::-;7966:4;8004:2;7993:9;7989:18;7981:26;;8053:9;8047:4;8043:20;8039:1;8028:9;8024:17;8017:47;8081:131;8207:4;8081:131;:::i;:::-;8073:139;;7800:419;;;:::o;8225:224::-;8365:34;8361:1;8353:6;8349:14;8342:58;8434:7;8429:2;8421:6;8417:15;8410:32;8225:224;:::o;8455:366::-;8597:3;8618:67;8682:2;8677:3;8618:67;:::i;:::-;8611:74;;8694:93;8783:3;8694:93;:::i;:::-;8812:2;8807:3;8803:12;8796:19;;8455:366;;;:::o;8827:419::-;8993:4;9031:2;9020:9;9016:18;9008:26;;9080:9;9074:4;9070:20;9066:1;9055:9;9051:17;9044:47;9108:131;9234:4;9108:131;:::i;:::-;9100:139;;8827:419;;;:::o;9252:85::-;9297:7;9326:5;9315:16;;9252:85;;;:::o;9343:60::-;9371:3;9392:5;9385:12;;9343:60;;;:::o;9409:158::-;9467:9;9500:61;9518:42;9527:32;9553:5;9527:32;:::i;:::-;9518:42;:::i;:::-;9500:61;:::i;:::-;9487:74;;9409:158;;;:::o;9573:147::-;9668:45;9707:5;9668:45;:::i;:::-;9663:3;9656:58;9573:147;;:::o;9726:617::-;9935:4;9973:3;9962:9;9958:19;9950:27;;9987:79;10063:1;10052:9;10048:17;10039:6;9987:79;:::i;:::-;10076:80;10152:2;10141:9;10137:18;10128:6;10076:80;:::i;:::-;10166;10242:2;10231:9;10227:18;10218:6;10166:80;:::i;:::-;10256;10332:2;10321:9;10317:18;10308:6;10256:80;:::i;:::-;9726:617;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "765400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkPrizePoolDistribution()": "infinite",
								"developerDividend()": "2471",
								"distributeDeveloperDividends()": "2585",
								"distributeOwnerDividends()": "2488",
								"generateWinners()": "infinite",
								"highPrize()": "2470",
								"lowPrize()": "2515",
								"middlePrize()": "2448",
								"owner()": "2581",
								"ownerDividend()": "2492",
								"prizeScale()": "2514",
								"renounceOwnership()": "infinite",
								"superPrize()": "2449",
								"transferOwnership(address)": "infinite",
								"updatePrizePools(uint256)": "infinite",
								"updatePrizeScale(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 592,
									"end": 594,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 564,
									"end": 594,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 564,
									"end": 594,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 723,
									"end": 728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 728,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 684,
									"end": 728,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 728,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 684,
									"end": 728,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 684,
									"end": 728,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 684,
									"end": 728,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 778,
									"end": 783,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 783,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 735,
									"end": 783,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 783,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 735,
									"end": 783,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 735,
									"end": 783,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 735,
									"end": 783,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1339,
									"end": 1397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1393,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1339,
									"end": 1397,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 4024,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d793c084ec61ac9868c0f6886a702c1adaa8b7b5bb937a0ec4e341af6797d8f364736f6c634300081c0033",
									".code": [
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "AB4D819F"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "F1A002B1"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "F1A002B1"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "F2E27B65"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "FB5274E5"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "AB4D819F"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "ACDCF5F2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "CB3EBEC2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "ED22723A"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "7B820B83"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "9AD97FA0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "11A1C8BD"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "1934C786"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "1F63000F"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "638AD71D"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 4024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 487,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 735,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 735,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1566,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1566,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 369,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 369,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3239,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3239,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 452,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 564,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 564,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 684,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 684,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2583,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2583,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3837,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 306,
											"end": 331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 487,
											"end": 519,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 487,
											"end": 519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 735,
											"end": 783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1658,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1639,
											"end": 1687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1639,
											"end": 1687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1732,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1722,
											"end": 1729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1722,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1722,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1721,
											"end": 1741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1721,
											"end": 1741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1810,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1800,
											"end": 1807,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1800,
											"end": 1811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1800,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1799,
											"end": 1818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1799,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1914,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1901,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1901,
											"end": 1916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1900,
											"end": 1923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1900,
											"end": 1923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1886,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1886,
											"end": 1923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1983,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1970,
											"end": 1980,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1970,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1969,
											"end": 1992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1969,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1956,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1956,
											"end": 1992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2040,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2040,
											"end": 2055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2040,
											"end": 2055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2039,
											"end": 2062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2024,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2024,
											"end": 2062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2122,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2109,
											"end": 2119,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2109,
											"end": 2124,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2108,
											"end": 2131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2108,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2096,
											"end": 2131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2193,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2193,
											"end": 2223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2234,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2234,
											"end": 2268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C1879F0406577975A5876A8DB2EC1549E2A3194F0F01E15BDE4292D6E4B36824"
										},
										{
											"begin": 2304,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2304,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2316,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2327,
											"end": 2338,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2348,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2286,
											"end": 2349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "BBB79063C8E8BCD7691A017E4E76C5DE1369686B9F0674F946B0129041525B59"
										},
										{
											"begin": 2382,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2382,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2397,
											"end": 2414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2365,
											"end": 2415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2415,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 369,
											"end": 395,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 369,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3496,
											"end": 3506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3496,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 3447,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3447,
											"end": 3457,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3447,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3400,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3352,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3352,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3352,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3352,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3352,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3352,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3352,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3352,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3548,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3548,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3643,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3635,
											"end": 3643,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3658,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3658,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3548,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 452,
											"end": 480,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 564,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2669,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2665,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2676,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "ORIGIN",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2690,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2655,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2647,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2647,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 2,
											"value": "93A80"
										},
										{
											"begin": 2760,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2760,
											"end": 2780,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2760,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2756,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2790,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2790,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2733,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2733,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2871,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2851,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2936,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2926,
											"end": 2947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2996,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "PUSH",
											"source": 2,
											"value": "BE74989B82C125EC369BDC21C95661E14A1D97C700EBDEF03B84C0DA6FC93C5A"
										},
										{
											"begin": 3032,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3014,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3837,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FE24C1A52828FA9764A2D2EBF1C0066647F541FA9636C315FACF936ED0B3A779"
										},
										{
											"begin": 3987,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 3994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3969,
											"end": 3998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3998,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 619,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 995,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 869,
											"end": 995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 906,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 935,
											"end": 989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 924,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 869,
											"end": 995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1067,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1190,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1371,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1855,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2001,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2010,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2169,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2314,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3347,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3173,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F2070726F6669747320746F20646973747269627574650000000000000000"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3575,
											"end": 3578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3516,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3516,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3681,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3592,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3592,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 4144,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3725,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3968,
											"end": 3988,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3942,
											"end": 3989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4132,
											"end": 4136,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4006,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4006,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 4144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 4144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 4144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4150,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4198,
											"end": 4275,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4276,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4292,
											"end": 4293,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4399,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4419,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4399,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4394,
											"end": 4419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4394,
											"end": 4419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4433,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4510,
											"end": 4540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4540,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4510,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4692,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4706,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4719,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4995,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5029,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5029,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5058,
											"end": 5093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5073,
											"end": 5091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5093,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5058,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5188,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5240,
											"end": 5241,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5222,
											"end": 5242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5242,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5222,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5290,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5313,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5277,
											"end": 5313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5293,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5277,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5526,
											"end": 5545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5621,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5555,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5626,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5555,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5636,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5686,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5636,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5636,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5636,
											"end": 5708,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5636,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5775,
											"end": 5784,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5718,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5790,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5718,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5868,
											"end": 5870,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5857,
											"end": 5866,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5800,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5872,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5800,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6110,
											"end": 6127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6107,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6057,
											"end": 6128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6128,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6057,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6206,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6138,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6210,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6138,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5885,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6223,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6363,
											"end": 6379,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6393,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6535,
											"end": 6538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6556,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6623,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6556,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6721,
											"end": 6724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6632,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6725,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6632,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 6752,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6759,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 7184,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6765,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6971,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7018,
											"end": 7027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 7002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6989,
											"end": 7006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7046,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7177,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7046,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 7184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 7184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 7184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 7184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7422,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7190,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7364,
											"name": "PUSH",
											"source": 3,
											"value": "5072697A65207363616C652063616E206F6E6C79206265207570646174656420"
										},
										{
											"begin": 7326,
											"end": 7327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7399,
											"end": 7414,
											"name": "PUSH",
											"source": 3,
											"value": "6F6E636520706572207765656B00000000000000000000000000000000000000"
										},
										{
											"begin": 7394,
											"end": 7396,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7386,
											"end": 7392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7794,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7428,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7570,
											"end": 7573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH",
											"source": 3,
											"value": "2D"
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7591,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7658,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7591,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7584,
											"end": 7658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7584,
											"end": 7658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7667,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7760,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7667,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7785,
											"end": 7787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7783,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7769,
											"end": 7788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7769,
											"end": 7788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8219,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7800,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8006,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 8007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 8007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8053,
											"end": 8062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8024,
											"end": 8041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8017,
											"end": 8064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8081,
											"end": 8212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8212,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8081,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8449,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8225,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8399,
											"name": "PUSH",
											"source": 3,
											"value": "5072697A65207363616C65206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8342,
											"end": 8400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8434,
											"end": 8441,
											"name": "PUSH",
											"source": 3,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8421,
											"end": 8427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8417,
											"end": 8432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8821,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8455,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8597,
											"end": 8600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 8677,
											"end": 8680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8618,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8618,
											"end": 8685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8618,
											"end": 8685,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8618,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8611,
											"end": 8685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8611,
											"end": 8685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8783,
											"end": 8786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8694,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8787,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8694,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8814,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8807,
											"end": 8810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9246,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 8827,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8993,
											"end": 8997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9080,
											"end": 9089,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9074,
											"end": 9078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9044,
											"end": 9091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9108,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9108,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9108,
											"end": 9239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9108,
											"end": 9239,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9108,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9337,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9252,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9297,
											"end": 9304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9331,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9337,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9343,
											"end": 9403,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9343,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9371,
											"end": 9374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9343,
											"end": 9403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9343,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9343,
											"end": 9403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9343,
											"end": 9403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9567,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 9409,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9467,
											"end": 9476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9518,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9553,
											"end": 9558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9527,
											"end": 9559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9518,
											"end": 9560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9560,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9518,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9500,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 9500,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9500,
											"end": 9561,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9500,
											"end": 9561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9720,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9573,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9707,
											"end": 9712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 9668,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9713,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9668,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9663,
											"end": 9666,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9973,
											"end": 9976,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9962,
											"end": 9971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9950,
											"end": 9977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9950,
											"end": 9977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10045,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9987,
											"end": 10066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10066,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9987,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10150,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10137,
											"end": 10155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10076,
											"end": 10156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10156,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10076,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10240,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10218,
											"end": 10224,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10166,
											"end": 10246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10246,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10166,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10256,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10332,
											"end": 10334,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10321,
											"end": 10330,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10256,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10256,
											"end": 10336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10256,
											"end": 10336,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10256,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 10343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/PrizeManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkPrizePoolDistribution()": "acdcf5f2",
							"developerDividend()": "1934c786",
							"distributeDeveloperDividends()": "1f63000f",
							"distributeOwnerDividends()": "f1a002b1",
							"generateWinners()": "fb5274e5",
							"highPrize()": "7b820b83",
							"lowPrize()": "638ad71d",
							"middlePrize()": "ab4d819f",
							"owner()": "8da5cb5b",
							"ownerDividend()": "cb3ebec2",
							"prizeScale()": "ed22723a",
							"renounceOwnership()": "715018a6",
							"superPrize()": "11a1c8bd",
							"transferOwnership(address)": "f2fde38b",
							"updatePrizePools(uint256)": "9ad97fa0",
							"updatePrizeScale(uint256)": "f2e27b65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerDividend\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"developerDividend\",\"type\":\"uint256\"}],\"name\":\"DividendsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"superPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"middlePrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowPrize\",\"type\":\"uint256\"}],\"name\":\"PrizePoolsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrizeScale\",\"type\":\"uint256\"}],\"name\":\"PrizeScaleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"superPrizeWinners\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highPrizeWinners\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"middlePrizeWinners\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowPrizeWinners\",\"type\":\"uint256\"}],\"name\":\"PrizesDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkPrizePoolDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developerDividend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeDeveloperDividends\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeOwnerDividends\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"middlePrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerDividend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profits\",\"type\":\"uint256\"}],\"name\":\"updatePrizePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newScale\",\"type\":\"uint256\"}],\"name\":\"updatePrizeScale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages prize pools, distributions, and random winner selection.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"checkPrizePoolDistribution()\":{\"details\":\"This function prepares for distribution but does not execute it.\"},\"constructor\":{\"params\":{\"initialOwner\":\"Address of the initial owner.\"}},\"generateWinners()\":{\"details\":\"This function will later be connected to a Chainlink oracle for randomness.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePrizePools(uint256)\":{\"params\":{\"profits\":\"Total profits accumulated over the week.\"}},\"updatePrizeScale(uint256)\":{\"params\":{\"newScale\":\"The new prize scale value.\"}}},\"title\":\"PrizeManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkPrizePoolDistribution()\":{\"notice\":\"Checks if there are sufficient funds in prize pools for distribution.\"},\"constructor\":{\"notice\":\"Constructor to initialize the contract with an initial owner.\"},\"generateWinners()\":{\"notice\":\"Generates winners for each prize pool.\"},\"updatePrizePools(uint256)\":{\"notice\":\"Updates the prize pools and dividends based on weekly profits.\"},\"updatePrizeScale(uint256)\":{\"notice\":\"Allows owner or developer to update the prize scale once per week.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PrizeManager.sol\":\"PrizeManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PrizeManager.sol\":{\"keccak256\":\"0x609c7575996a4f69f5a155def795e35311c0ad90ea0e5391025ef96f1c5e1b02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d4b239cde81a9bc1d8fb2a67b594194668501ef2ab96928f89c2c33417ad6ad\",\"dweb:/ipfs/QmQN95cEBsgiMddJGpjkSv2AwZnToLUsvsc75uJoknBZzV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 185,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "superPrize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 187,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "highPrize",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 189,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "middlePrize",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 191,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "lowPrize",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 193,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "ownerDividend",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 195,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "developerDividend",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 198,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "prizeScale",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 200,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "lastPrizeScaleUpdate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "distributeOwnerDividends",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 206,
								"contract": "contracts/PrizeManager.sol:PrizeManager",
								"label": "distributeDeveloperDividends",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkPrizePoolDistribution()": {
								"notice": "Checks if there are sufficient funds in prize pools for distribution."
							},
							"constructor": {
								"notice": "Constructor to initialize the contract with an initial owner."
							},
							"generateWinners()": {
								"notice": "Generates winners for each prize pool."
							},
							"updatePrizePools(uint256)": {
								"notice": "Updates the prize pools and dividends based on weekly profits."
							},
							"updatePrizeScale(uint256)": {
								"notice": "Allows owner or developer to update the prize scale once per week."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/PrizeManager.sol": {
				"ast": {
					"absolutePath": "contracts/PrizeManager.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"PrizeManager": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "54:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 446,
							"sourceUnit": 148,
							"src": "82:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "271:7:2"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "PrizeManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "138:106:2",
								"text": " @title PrizeManager\n @dev Manages prize pools, distributions, and random winner selection."
							},
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445,
								147,
								177
							],
							"name": "PrizeManager",
							"nameLocation": "255:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11a1c8bd",
									"id": 185,
									"mutability": "mutable",
									"name": "superPrize",
									"nameLocation": "321:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "306:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b820b83",
									"id": 187,
									"mutability": "mutable",
									"name": "highPrize",
									"nameLocation": "353:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "338:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab4d819f",
									"id": 189,
									"mutability": "mutable",
									"name": "middlePrize",
									"nameLocation": "384:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "369:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "638ad71d",
									"id": 191,
									"mutability": "mutable",
									"name": "lowPrize",
									"nameLocation": "417:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "402:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3ebec2",
									"id": 193,
									"mutability": "mutable",
									"name": "ownerDividend",
									"nameLocation": "467:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "452:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "452:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1934c786",
									"id": 195,
									"mutability": "mutable",
									"name": "developerDividend",
									"nameLocation": "502:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "487:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed22723a",
									"id": 198,
									"mutability": "mutable",
									"name": "prizeScale",
									"nameLocation": "579:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "564:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "lastPrizeScaleUpdate",
									"nameLocation": "617:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "601:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "601:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f1a002b1",
									"id": 203,
									"mutability": "mutable",
									"name": "distributeOwnerDividends",
									"nameLocation": "696:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "684:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 201,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "684:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "723:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f63000f",
									"id": 206,
									"mutability": "mutable",
									"name": "distributeDeveloperDividends",
									"nameLocation": "747:28:2",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "735:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 204,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "735:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "778:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c1879f0406577975a5876a8db2ec1549e2a3194f0f01e15bde4292d6e4b36824",
									"id": 216,
									"name": "PrizePoolsUpdated",
									"nameLocation": "813:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "superPrize",
												"nameLocation": "839:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "831:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "highPrize",
												"nameLocation": "859:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "851:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "middlePrize",
												"nameLocation": "878:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "870:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowPrize",
												"nameLocation": "899:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "891:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:78:2"
									},
									"src": "807:102:2"
								},
								{
									"anonymous": false,
									"eventSelector": "bbb79063c8e8bcd7691a017e4e76c5de1369686b9f0674f946b0129041525b59",
									"id": 222,
									"name": "DividendsUpdated",
									"nameLocation": "921:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerDividend",
												"nameLocation": "946:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "938:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "developerDividend",
												"nameLocation": "969:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "961:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:50:2"
									},
									"src": "915:73:2"
								},
								{
									"anonymous": false,
									"eventSelector": "be74989b82c125ec369bdc21c95661e14a1d97c700ebdef03b84c0da6fc93c5a",
									"id": 226,
									"name": "PrizeScaleUpdated",
									"nameLocation": "1000:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPrizeScale",
												"nameLocation": "1026:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1018:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:23:2"
									},
									"src": "994:47:2"
								},
								{
									"anonymous": false,
									"eventSelector": "fe24c1a52828fa9764a2d2ebf1c0066647f541fa9636c315facf936ed0b3a779",
									"id": 236,
									"name": "PrizesDistributed",
									"nameLocation": "1053:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "superPrizeWinners",
												"nameLocation": "1079:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1071:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "highPrizeWinners",
												"nameLocation": "1106:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1098:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "middlePrizeWinners",
												"nameLocation": "1132:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1124:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowPrizeWinners",
												"nameLocation": "1160:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1152:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:106:2"
									},
									"src": "1047:130:2"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1395:2:2",
										"statements": []
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1185:148:2",
										"text": " @notice Constructor to initialize the contract with an initial owner.\n @param initialOwner Address of the initial owner."
									},
									"id": 246,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 242,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "1381:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 243,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 241,
												"name": "Ownable",
												"nameLocations": [
													"1373:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1373:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1373:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1359:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1351:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:22:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:2"
									},
									"scope": 445,
									"src": "1339:58:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1628:795:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "profits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "1647:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1657:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1647:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070726f6669747320746f2064697374726962757465",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1660:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c",
																"typeString": "literal_string \"No profits to distribute\""
															},
															"value": "No profits to distribute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b21dd3bd5ec21bef05233f4d73fa1d14972350f3b2713928ab3c40dcd799e7c",
																"typeString": "literal_string \"No profits to distribute\""
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1639:48:2"
											},
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "prizeShare",
														"nameLocation": "1708:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "1700:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 263,
																	"name": "profits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "1722:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3530",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1732:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1722:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 266,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1721:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1738:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1721:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1700:41:2"
											},
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "dividendShare",
														"nameLocation": "1783:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "1775:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1775:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 272,
																	"name": "profits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "1800:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1810:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "1800:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 275,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1799:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1815:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1799:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1775:43:2"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 279,
														"name": "superPrize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1886:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 280,
																		"name": "prizeShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "1901:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1914:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "1901:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1900:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1900:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1886:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1886:37:2"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "highPrize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1956:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 289,
																		"name": "prizeShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "1970:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1983:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "1970:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1969:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1989:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1969:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1956:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "1956:36:2"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "middlePrize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2024:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "prizeShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2040:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2053:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "2040:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 301,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2039:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2039:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2024:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2024:38:2"
											},
											{
												"expression": {
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "lowPrize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2096:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 307,
																		"name": "prizeShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2109:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2122:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "2109:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 310,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2108:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2128:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2108:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2096:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2096:35:2"
											},
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 315,
														"name": "ownerDividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2193:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 316,
														"name": "dividendShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2210:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2193:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "2193:30:2"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 319,
														"name": "developerDividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2234:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 320,
														"name": "dividendShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2255:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2234:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 324,
															"name": "superPrize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2304:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 325,
															"name": "highPrize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2316:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 326,
															"name": "middlePrize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2327:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 327,
															"name": "lowPrize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2340:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 323,
														"name": "PrizePoolsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2286:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "EmitStatement",
												"src": "2281:68:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 331,
															"name": "ownerDividend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2382:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "developerDividend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2397:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 330,
														"name": "DividendsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2365:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "EmitStatement",
												"src": "2360:55:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1405:155:2",
										"text": " @notice Updates the prize pools and dividends based on weekly profits.\n @param profits Total profits accumulated over the week."
									},
									"functionSelector": "9ad97fa0",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 251,
												"name": "onlyOwner",
												"nameLocations": [
													"1618:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1618:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1618:9:2"
										}
									],
									"name": "updatePrizePools",
									"nameLocation": "1575:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "profits",
												"nameLocation": "1600:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1592:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:17:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 445,
									"src": "1566:857:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2636:413:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 343,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2655:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2659:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2655:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 345,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2669:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2669:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2655:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 348,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2680:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2684:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2680:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 350,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "2694:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2697:6:2",
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "2694:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2680:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2655:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2705:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2647:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2647:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "2647:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 358,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2741:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2747:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2741:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 360,
																	"name": "lastPrizeScaleUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "2760:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2783:7:2",
																	"subdenomination": "weeks",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "1"
																},
																"src": "2760:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2741:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072697a65207363616c652063616e206f6e6c792062652075706461746564206f6e636520706572207765656b",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b",
																"typeString": "literal_string \"Prize scale can only be updated once per week\""
															},
															"value": "Prize scale can only be updated once per week"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_897fe30d97d7d65a71d4257b1f8129e884122d6863e2f5893c4c705347a91c6b",
																"typeString": "literal_string \"Prize scale can only be updated once per week\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2733:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2733:107:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "2733:107:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "newScale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2859:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2870:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2859:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072697a65207363616c65206d7573742062652067726561746572207468616e207a65726f",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4",
																"typeString": "literal_string \"Prize scale must be greater than zero\""
															},
															"value": "Prize scale must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6eb154be84782c69f0750e6d7002f98329b71f04e3d3229362cc7d13d83dbd4",
																"typeString": "literal_string \"Prize scale must be greater than zero\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2851:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2851:62:2"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "prizeScale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2926:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "newScale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2939:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2926:21:2"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "lastPrizeScaleUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2958:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 379,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2981:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2987:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2981:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2958:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2958:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 384,
															"name": "newScale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3032:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "PrizeScaleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "3014:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "3009:32:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2431:146:2",
										"text": " @notice Allows owner or developer to update the prize scale once per week.\n @param newScale The new prize scale value."
									},
									"functionSelector": "f2e27b65",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrizeScale",
									"nameLocation": "2592:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "newScale",
												"nameLocation": "2617:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2609:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:18:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2636:0:2"
									},
									"scope": 445,
									"src": "2583:466:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "3306:361:2",
										"statements": [
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "totalNeeded",
														"nameLocation": "3325:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3317:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3317:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 396,
																	"name": "prizeScale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "3352:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3365:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "3352:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 399,
																	"name": "prizeScale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "3400:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3413:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3400:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3352:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "prizeScale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "3447:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3130",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3460:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "3447:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 407,
															"name": "prizeScale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "3496:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3509:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3496:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3352:158:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3317:193:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 412,
																			"name": "superPrize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "3548:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 413,
																			"name": "totalNeeded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "3562:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3548:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 415,
																			"name": "highPrize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "3577:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 416,
																			"name": "totalNeeded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "3590:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3577:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3548:53:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 419,
																		"name": "middlePrize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "3605:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 420,
																		"name": "totalNeeded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "3620:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3605:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3548:83:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 423,
																	"name": "lowPrize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "3635:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 424,
																	"name": "totalNeeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "3647:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3635:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3548:110:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 427,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3547:112:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 393,
												"id": 428,
												"nodeType": "Return",
												"src": "3540:119:2"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "3057:176:2",
										"text": " @notice Checks if there are sufficient funds in prize pools for distribution.\n @dev This function prepares for distribution but does not execute it."
									},
									"functionSelector": "acdcf5f2",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPrizePoolDistribution",
									"nameLocation": "3248:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:2:2"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:6:2"
									},
									"scope": 445,
									"src": "3239:428:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "3883:138:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3987:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3990:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3993:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3996:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 436,
														"name": "PrizesDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3969:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3969:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "3964:34:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "3675:156:2",
										"text": " @notice Generates winners for each prize pool.\n @dev This function will later be connected to a Chainlink oracle for randomness."
									},
									"functionSelector": "fb5274e5",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 433,
												"name": "onlyOwner",
												"nameLocations": [
													"3873:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3873:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3873:9:2"
										}
									],
									"name": "generateWinners",
									"nameLocation": "3846:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3861:2:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3883:0:2"
									},
									"scope": 445,
									"src": "3837:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "246:3778:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								216,
								222,
								226,
								236
							]
						}
					],
					"src": "54:3972:2"
				},
				"id": 2
			}
		}
	}
}